#   'Codegen' engine for demo_pal
#
#   Generated by iMatix GSL/4
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   
#   This file is licensed under the GPL as follows:
#   
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or (at
#   your option) any later version.
#   
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#   
#   For information on alternative licensing for OEMs, please contact
#   iMatix Corporation.
#

function codegen_pal ([pal])
    my.entity = my.[pal]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_pal ? 0
       echo "<codegen_pal location = \"$(my.location)\""
    endif

    for my.[pal]. as child where defined (name ())
        if name (child) = "option"
           codegen_option (child)
        endif
        if name (child) = "inherit"
           codegen_inherit (child)
        endif
        if name (child) = "doc"
           codegen_doc (child)
        endif
        if name (child) = "macro"
           codegen_macro (child)
        endif
        if name (child) = "include"
           codegen_include (child)
        endif
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

endfunction

function codegen_doc ([doc])
    my.entity = my.[doc]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_doc ? 0
       echo "<codegen_doc location = \"$(my.location)\""
    endif

    for my.[doc]. as child where defined (name ())
    endfor

endfunction

function codegen_include ([include])
    my.entity = my.[include]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_include ? 0
       echo "<codegen_include location = \"$(my.location)\""
    endif

    for my.[include]. as child where defined (name ())
    endfor

endfunction

function codegen_macro ([macro])
    my.entity = my.[macro]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_macro ? 0
       echo "<codegen_macro location = \"$(my.location)\""
    endif

endfunction

function codegen_scripting ([scripting])
    my.entity = my.[scripting]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_scripting ? 0
       echo "<codegen_scripting location = \"$(my.location)\""
    endif

    for my.[scripting]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

endfunction

function codegen_session ([session])
    my.entity = my.[session]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_session ? 0
       echo "<codegen_session location = \"$(my.location)\""
    endif

    pal.session_index = (pal.session_index?0) + 1
    produce_session_header ()
    for my.[session]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_session_footer ()
endfunction

function codegen_invoke ([invoke])
    my.entity = my.[invoke]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_invoke ? 0
       echo "<codegen_invoke location = \"$(my.location)\""
    endif

    for my.[invoke]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

endfunction

function codegen_server ([server])
    my.entity = my.[server]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_server ? 0
       echo "<codegen_server location = \"$(my.location)\""
    endif

    produce_server ()
    for my.[server]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

endfunction

function codegen_timer ([timer])
    my.entity = my.[timer]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_timer ? 0
       echo "<codegen_timer location = \"$(my.location)\""
    endif

    produce_timer ()
    for my.[timer]. as child where defined (name ())
    endfor

endfunction

function codegen_set ([set])
    my.entity = my.[set]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_set ? 0
       echo "<codegen_set location = \"$(my.location)\""
    endif

    produce_set ()
    for my.[set]. as child where defined (name ())
    endfor

endfunction

function codegen_inc ([inc])
    my.entity = my.[inc]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_inc ? 0
       echo "<codegen_inc location = \"$(my.location)\""
    endif

    produce_inc ()
    for my.[inc]. as child where defined (name ())
    endfor

endfunction

function codegen_dec ([dec])
    my.entity = my.[dec]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_dec ? 0
       echo "<codegen_dec location = \"$(my.location)\""
    endif

    produce_dec ()
    for my.[dec]. as child where defined (name ())
    endfor

endfunction

function codegen_read ([read])
    my.entity = my.[read]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_read ? 0
       echo "<codegen_read location = \"$(my.location)\""
    endif

    produce_read ()
    for my.[read]. as child where defined (name ())
    endfor

endfunction

function codegen_random ([random])
    my.entity = my.[random]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_random ? 0
       echo "<codegen_random location = \"$(my.location)\""
    endif

    produce_random ()
    for my.[random]. as child where defined (name ())
    endfor

endfunction

function codegen_echo ([echo])
    my.entity = my.[echo]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_echo ? 0
       echo "<codegen_echo location = \"$(my.location)\""
    endif

    produce_echo ()
    for my.[echo]. as child where defined (name ())
    endfor

endfunction

function codegen_assert ([assert])
    my.entity = my.[assert]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_assert ? 0
       echo "<codegen_assert location = \"$(my.location)\""
    endif

    produce_assert ()
    for my.[assert]. as child where defined (name ())
    endfor

endfunction

function codegen_repeat ([repeat])
    my.entity = my.[repeat]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_repeat ? 0
       echo "<codegen_repeat location = \"$(my.location)\""
    endif

    produce_repeat_header ()
    for my.[repeat]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_repeat_footer ()
endfunction

function codegen_while ([while])
    my.entity = my.[while]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_while ? 0
       echo "<codegen_while location = \"$(my.location)\""
    endif

    produce_while_header ()
    for my.[while]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_while_footer ()
endfunction

function codegen_if ([if])
    my.entity = my.[if]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_if ? 0
       echo "<codegen_if location = \"$(my.location)\""
    endif

    produce_if_header ()
    for my.[if]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_if_footer ()
endfunction

function codegen_else ([else])
    my.entity = my.[else]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_else ? 0
       echo "<codegen_else location = \"$(my.location)\""
    endif

    produce_else_header ()
    for my.[else]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_else_footer ()
endfunction

function codegen_elsif ([elsif])
    my.entity = my.[elsif]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_elsif ? 0
       echo "<codegen_elsif location = \"$(my.location)\""
    endif

    produce_elsif_header ()
    for my.[elsif]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_elsif_footer ()
endfunction

function codegen_wait ([wait])
    my.entity = my.[wait]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_wait ? 0
       echo "<codegen_wait location = \"$(my.location)\""
    endif

    produce_wait ()
    for my.[wait]. as child where defined (name ())
    endfor

endfunction

function codegen_sleep ([sleep])
    my.entity = my.[sleep]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_sleep ? 0
       echo "<codegen_sleep location = \"$(my.location)\""
    endif

    produce_sleep ()
    for my.[sleep]. as child where defined (name ())
    endfor

endfunction

function codegen_break ([break])
    my.entity = my.[break]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_break ? 0
       echo "<codegen_break location = \"$(my.location)\""
    endif

    produce_break ()
    for my.[break]. as child where defined (name ())
    endfor

endfunction

function codegen_abort ([abort])
    my.entity = my.[abort]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_abort ? 0
       echo "<codegen_abort location = \"$(my.location)\""
    endif

    produce_abort ()
    for my.[abort]. as child where defined (name ())
    endfor

endfunction

function codegen_exit ([exit])
    my.entity = my.[exit]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_exit ? 0
       echo "<codegen_exit location = \"$(my.location)\""
    endif

    produce_exit ()
    for my.[exit]. as child where defined (name ())
    endfor

endfunction

function codegen_channel_flow ([channel_flow])
    my.entity = my.[channel_flow]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_channel_flow ? 0
       echo "<codegen_channel_flow location = \"$(my.location)\""
    endif

    produce_channel_flow ()
    for my.[channel_flow]. as child where defined (name ())
    endfor

endfunction

function codegen_channel_flow_ok ([channel_flow_ok])
    my.entity = my.[channel_flow_ok]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_channel_flow_ok ? 0
       echo "<codegen_channel_flow_ok location = \"$(my.location)\""
    endif

    produce_channel_flow_ok ()
    for my.[channel_flow_ok]. as child where defined (name ())
    endfor

endfunction

function codegen_exchange_declare ([exchange_declare])
    my.entity = my.[exchange_declare]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_exchange_declare ? 0
       echo "<codegen_exchange_declare location = \"$(my.location)\""
    endif

    produce_exchange_declare ()
    for my.[exchange_declare]. as child where defined (name ())
    endfor

endfunction

function codegen_exchange_delete ([exchange_delete])
    my.entity = my.[exchange_delete]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_exchange_delete ? 0
       echo "<codegen_exchange_delete location = \"$(my.location)\""
    endif

    produce_exchange_delete ()
    for my.[exchange_delete]. as child where defined (name ())
    endfor

endfunction

function codegen_queue_declare ([queue_declare])
    my.entity = my.[queue_declare]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_queue_declare ? 0
       echo "<codegen_queue_declare location = \"$(my.location)\""
    endif

    produce_queue_declare ()
    for my.[queue_declare]. as child where defined (name ())
    endfor

endfunction

function codegen_queue_bind ([queue_bind])
    my.entity = my.[queue_bind]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_queue_bind ? 0
       echo "<codegen_queue_bind location = \"$(my.location)\""
    endif

    produce_queue_bind ()
    for my.[queue_bind]. as child where defined (name ())
        if name (child) = "arguments"
           codegen_queue_bind_arguments (child)
        endif
    endfor

endfunction

function codegen_queue_bind_arguments ([queue_bind_arguments])
    my.entity = my.[queue_bind_arguments]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_queue_bind_arguments ? 0
       echo "<codegen_queue_bind_arguments location = \"$(my.location)\""
    endif

    for my.[queue_bind_arguments]. as child where defined (name ())
        if name (child) = "field"
           codegen_table_field (child)
        endif
    endfor

endfunction

function codegen_table_field ([table field])
    my.entity = my.[table field]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_table_field ? 0
       echo "<codegen_table_field location = \"$(my.location)\""
    endif

    for my.[table field]. as child where defined (name ())
    endfor

endfunction

function codegen_queue_purge ([queue_purge])
    my.entity = my.[queue_purge]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_queue_purge ? 0
       echo "<codegen_queue_purge location = \"$(my.location)\""
    endif

    produce_queue_purge ()
    for my.[queue_purge]. as child where defined (name ())
    endfor

endfunction

function codegen_queue_delete ([queue_delete])
    my.entity = my.[queue_delete]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_queue_delete ? 0
       echo "<codegen_queue_delete location = \"$(my.location)\""
    endif

    produce_queue_delete ()
    for my.[queue_delete]. as child where defined (name ())
    endfor

endfunction

function codegen_basic_consume ([basic_consume])
    my.entity = my.[basic_consume]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_consume ? 0
       echo "<codegen_basic_consume location = \"$(my.location)\""
    endif

    produce_basic_consume ()
    for my.[basic_consume]. as child where defined (name ())
    endfor

endfunction

function codegen_basic_cancel ([basic_cancel])
    my.entity = my.[basic_cancel]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_cancel ? 0
       echo "<codegen_basic_cancel location = \"$(my.location)\""
    endif

    produce_basic_cancel ()
    for my.[basic_cancel]. as child where defined (name ())
    endfor

endfunction

function codegen_basic_publish ([basic_publish])
    my.entity = my.[basic_publish]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_publish ? 0
       echo "<codegen_basic_publish location = \"$(my.location)\""
    endif

    produce_basic_publish ()
    for my.[basic_publish]. as child where defined (name ())
    endfor

endfunction

function codegen_basic_get ([basic_get])
    my.entity = my.[basic_get]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_get ? 0
       echo "<codegen_basic_get location = \"$(my.location)\""
    endif

    produce_basic_get ()
    for my.[basic_get]. as child where defined (name ())
    endfor

endfunction

function codegen_basic_content ([basic_content])
    my.entity = my.[basic_content]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_content ? 0
       echo "<codegen_basic_content location = \"$(my.location)\""
    endif

    produce_basic_content ()
    for my.[basic_content]. as child where defined (name ())
        if name (child) = "headers"
           codegen_basic_content_headers (child)
        endif
    endfor

endfunction

function codegen_basic_content_headers ([basic_content_headers])
    my.entity = my.[basic_content_headers]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_content_headers ? 0
       echo "<codegen_basic_content_headers location = \"$(my.location)\""
    endif

    for my.[basic_content_headers]. as child where defined (name ())
        if name (child) = "field"
           codegen_table_field (child)
        endif
    endfor

endfunction

function codegen_basic_arrived ([basic_arrived])
    my.entity = my.[basic_arrived]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_arrived ? 0
       echo "<codegen_basic_arrived location = \"$(my.location)\""
    endif

    produce_basic_arrived_header ("arrived")
    for my.[basic_arrived]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_basic_arrived_footer ("arrived")
endfunction

function codegen_basic_returned ([basic_returned])
    my.entity = my.[basic_returned]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_basic_returned ? 0
       echo "<codegen_basic_returned location = \"$(my.location)\""
    endif

    produce_basic_arrived_header ("returned")
    for my.[basic_returned]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_basic_arrived_footer ("returned")
endfunction

function codegen_empty ([empty])
    my.entity = my.[empty]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_empty ? 0
       echo "<codegen_empty location = \"$(my.location)\""
    endif

    produce_empty_header ()
    for my.[empty]. as child where defined (name ())
        if name (child) = "session"
           codegen_session (child)
        endif
        if name (child) = "invoke"
           codegen_invoke (child)
        endif
        if name (child) = "server"
           codegen_server (child)
        endif
        if name (child) = "timer"
           codegen_timer (child)
        endif
        if name (child) = "set"
           codegen_set (child)
        endif
        if name (child) = "inc"
           codegen_inc (child)
        endif
        if name (child) = "dec"
           codegen_dec (child)
        endif
        if name (child) = "read"
           codegen_read (child)
        endif
        if name (child) = "random"
           codegen_random (child)
        endif
        if name (child) = "echo"
           codegen_echo (child)
        endif
        if name (child) = "assert"
           codegen_assert (child)
        endif
        if name (child) = "repeat"
           codegen_repeat (child)
        endif
        if name (child) = "while"
           codegen_while (child)
        endif
        if name (child) = "break"
           codegen_break (child)
        endif
        if name (child) = "if"
           codegen_if (child)
        endif
        if name (child) = "else"
           codegen_else (child)
        endif
        if name (child) = "elsif"
           codegen_elsif (child)
        endif
        if name (child) = "wait"
           codegen_wait (child)
        endif
        if name (child) = "sleep"
           codegen_sleep (child)
        endif
        if name (child) = "abort"
           codegen_abort (child)
        endif
        if name (child) = "exit"
           codegen_exit (child)
        endif
        if name (child) = "channel_flow"
           codegen_channel_flow (child)
        endif
        if name (child) = "channel_flow_ok"
           codegen_channel_flow_ok (child)
        endif
        if name (child) = "exchange_declare"
           codegen_exchange_declare (child)
        endif
        if name (child) = "exchange_delete"
           codegen_exchange_delete (child)
        endif
        if name (child) = "queue_declare"
           codegen_queue_declare (child)
        endif
        if name (child) = "queue_bind"
           codegen_queue_bind (child)
        endif
        if name (child) = "queue_purge"
           codegen_queue_purge (child)
        endif
        if name (child) = "queue_delete"
           codegen_queue_delete (child)
        endif
        if name (child) = "basic_consume"
           codegen_basic_consume (child)
        endif
        if name (child) = "basic_cancel"
           codegen_basic_cancel (child)
        endif
        if name (child) = "basic_publish"
           codegen_basic_publish (child)
        endif
        if name (child) = "basic_get"
           codegen_basic_get (child)
        endif
        if name (child) = "basic_content"
           codegen_basic_content (child)
        endif
        if name (child) = "basic_arrived"
           codegen_basic_arrived (child)
        endif
        if name (child) = "basic_returned"
           codegen_basic_returned (child)
        endif
        if name (child) = "empty"
           codegen_empty (child)
        endif
    endfor

    produce_empty_footer ()
endfunction

function codegen_inherit ([inherit])
    my.entity = my.[inherit]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_inherit ? 0
       echo "<codegen_inherit location = \"$(my.location)\""
    endif

    for my.[inherit]. as child where defined (name ())
        if name (child) = "option"
           codegen_option (child)
        endif
    endfor

endfunction

function codegen_option ([option])
    my.entity = my.[option]
    my.location = location ("pal")

    if switches.trace ? 0 | switches.trace_option ? 0
       echo "<codegen_option location = \"$(my.location)\""
    endif

    for my.[option]. as child where defined (name ())
    endfor

endfunction


function codegen_error (message)
    echo (my.message)
    global.errno = 1
endfunction
