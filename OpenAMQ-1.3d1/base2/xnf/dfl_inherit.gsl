#   'Inherit' engine for dfl
#
#   Generated by iMatix GSL/4
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   
#   This file is licensed under the GPL as follows:
#   
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or (at
#   your option) any later version.
#   
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#   
#   For information on alternative licensing for OEMs, please contact
#   iMatix Corporation.
#

function inherit_dfl ([dfl])
    my.entity = my.[dfl]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_dfl ? 0
       echo "<inherit_dfl location = \"$(my.location)\""
    endif

    for my.[dfl].[rule] as [dfl rule]
        inherit_dfl_rule ([dfl rule])
    endfor

    for my.[dfl].[include] as [include]
        inherit_include ([include])
    endfor

    for my.[dfl].[inherit] as [inherit]
        inherit_inherit ([inherit])
    endfor

    for my.[dfl].[domain] as [domain]
        inherit_domain ([domain])
    endfor

    for my.[dfl].[table] as [table]
        inherit_table ([table])
    endfor

endfunction

function inherit_dfl_rule ([dfl rule])
    my.entity = my.[dfl rule]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_dfl_rule ? 0
       echo "<inherit_dfl_rule location = \"$(my.location)\""
    endif

endfunction

function inherit_include ([include])
    my.entity = my.[include]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_include ? 0
       echo "<inherit_include location = \"$(my.location)\""
    endif

endfunction

function inherit_inherit ([inherit])
    my.entity = my.[inherit]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_inherit ? 0
       echo "<inherit_inherit location = \"$(my.location)\""
    endif

endfunction

function inherit_domain ([domain])
    my.entity = my.[domain]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_domain ? 0
       echo "<inherit_domain location = \"$(my.location)\""
    endif

    for my.[domain].[field] as [domain-field]
        inherit_domain_field ([domain-field])
    endfor

    for my.[domain].[rule] as [rule]
        inherit_rule ([rule])
    endfor

    for my.[domain].[value] as [value]
        inherit_value ([value])
    endfor

    for my.[domain].[link] as [link]
        inherit_link ([link])
    endfor

endfunction

function inherit_domain_field ([domain-field])
    my.entity = my.[domain-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_domain_field ? 0
       echo "<inherit_domain_field location = \"$(my.location)\""
    endif

    for my.[domain-field].[rule] as [rule]
        inherit_rule ([rule])
    endfor

endfunction

function inherit_value ([value])
    my.entity = my.[value]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_value ? 0
       echo "<inherit_value location = \"$(my.location)\""
    endif

endfunction

function inherit_table ([table])
    my.entity = my.[table]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_table ? 0
       echo "<inherit_table location = \"$(my.location)\""
    endif

    for my.[table].[field] as [table-field]
        inherit_table_field ([table-field])
    endfor

    for my.[table].[link] as [link]
        inherit_link ([link])
    endfor

    for my.[table].[index] as [index]
        inherit_index ([index])
    endfor

endfunction

function inherit_table_field ([table-field])
    my.entity = my.[table-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_table_field ? 0
       echo "<inherit_table_field location = \"$(my.location)\""
    endif

    for my.[table-field].[rule] as [rule]
        inherit_rule ([rule])
    endfor

    for my.[table-field].[value] as [value]
        inherit_value ([value])
    endfor

endfunction

function inherit_rule ([rule])
    my.entity = my.[rule]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_rule ? 0
       echo "<inherit_rule location = \"$(my.location)\""
    endif

endfunction

function inherit_link ([link])
    my.entity = my.[link]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_link ? 0
       echo "<inherit_link location = \"$(my.location)\""
    endif

    for my.[link].[field] as [link-field]
        inherit_link_field ([link-field])
    endfor

endfunction

function inherit_link_field ([link-field])
    my.entity = my.[link-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_link_field ? 0
       echo "<inherit_link_field location = \"$(my.location)\""
    endif

endfunction

function inherit_index ([index])
    my.entity = my.[index]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_index ? 0
       echo "<inherit_index location = \"$(my.location)\""
    endif

    for my.[index].[field] as [index-field]
        inherit_index_field ([index-field])
    endfor

endfunction

function inherit_index_field ([index-field])
    my.entity = my.[index-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_index_field ? 0
       echo "<inherit_index_field location = \"$(my.location)\""
    endif

endfunction


function inherit_error (message)
    echo (my.message)
    global.errno = 1
endfunction

function inherit_top ([dfl])
    my.entity = my.[dfl]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_dfl ? 0
       echo "<inherit_top location = \"$(my.location)\""
    endif

    for my.[dfl].inherit
        if !defined (inherit.condition) | gsl.exec ("\$(("+inherit.condition+")?0)",1)
            if switches.trace ? 0 | switches.trace_dfl ? 0
                echo "Loading $(name)"
            endif
            my.inherit_file = xml.load_file (name + ".dfl") ? abort_xml_error ()
            my.inherit_file._filename ?= name
            if my.inherit_file.multiple ? 0 > 0 | !defined (global.top.have_inherit_$(inherit.name))
                for inherit.option
                    copy option to my.inherit_file
                endfor
                scope my.inherit_file as dfl
                    preproc_dfl (my.inherit_file)
                    inherit_top (my.inherit_file)
                endscope
                global.top.have_inherit_$(inherit.name) = 1
            
                move my.inherit_file to global.inherit
            endif
        endif
    endfor
endfunction

function sort_top_inherits ()
    my.location = location ("dfl")

    my.sorted = xml.new ("sorted")
    for global.inherit.dfl
        my.[before] =
        my.[after]  =
        if switches.trace ? 0 | switches.trace_dfl ? 0
            echo "Inserting $(dfl._key)"
        endif
        for my.sorted.dfl as sorted

            if ((sorted.role    = class.[before]) ? 0)   | ((sorted.[after] = class.role)  ? 0)
                if switches.trace ? 0 | switches.trace_dfl ? 0
                    echo "    before: $(sorted.name)"
                endif
                my.[before] ?= sorted
            endif
            if ((sorted.role    = class.[after]) ? 0)   | ((sorted.[before] = class.role)  ? 0)
                if switches.trace ? 0 | switches.trace_dfl ? 0
                    echo "    after: $(sorted.name)"
                endif
                if defined (my.[before])
                    preproc_error ("Incoherent inherit order$(my.location)")
                    last
                endif
                my.[after] = sorted
            endif
        endfor
            
        if defined (my.[before])
            move dfl before my.[before]
        elsif defined (my.[after])
            move dfl after my.[after]
        else
            my.any = my.sorted->?
            if defined (my.any)
                move dfl before my.any
            else
                move dfl to my.sorted
            endif
        endif
    endfor
    
    for my.sorted.dfl
        if switches.trace ? 0 | switches.trace_dfl ? 0
            echo "Inheriting $(dfl.name)"
        endif
        perform_inherit_dfl_item (global.top, dfl)
    endfor

endfunction

function perform_inherit_dfl (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_dfl ? 0
       my.location = location ("dfl")
       echo "<inherit_dfl location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[dfl] ?
    for my.source.[dfl] as [dfl]
        my.existing = my.target->[dfl] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_dfl_item (my.existing, [dfl])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [dfl] before my.insert
                else
                    copy [dfl] to my.target
                endif
            else
                copy [dfl] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_dfl

function perform_inherit_dfl_rule (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_dfl_rule ? 0
       my.location = location ("dfl")
       echo "<inherit_dfl_rule location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[rule] ?
    for my.source.[rule] as [dfl rule]
        my.existing = my.target->[rule] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_dfl_rule_item (my.existing, [dfl rule])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [dfl rule] before my.insert
                else
                    copy [dfl rule] to my.target
                endif
            else
                copy [dfl rule] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_dfl_rule

function perform_inherit_include (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_include ? 0
       my.location = location ("dfl")
       echo "<inherit_include location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[include] ?
    for my.source.[include] as [include]
        if my.inherit = "overlay"
            my.existing = my.target->[include] ?
        endif
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_include_item (my.existing, [include])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [include] before my.insert
                else
                    copy [include] to my.target
                endif
            else
                copy [include] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_include

function perform_inherit_inherit (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_inherit ? 0
       my.location = location ("dfl")
       echo "<inherit_inherit location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[inherit] ?
    for my.source.[inherit] as [inherit]
        if my.inherit = "overlay"
            my.existing = my.target->[inherit] ?
        endif
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_inherit_item (my.existing, [inherit])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [inherit] before my.insert
                else
                    copy [inherit] to my.target
                endif
            else
                copy [inherit] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_inherit

function perform_inherit_domain (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_domain ? 0
       my.location = location ("dfl")
       echo "<inherit_domain location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[domain] ?
    for my.source.[domain] as [domain]
        my.existing = my.target->[domain] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_domain_item (my.existing, [domain])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [domain] before my.insert
                else
                    copy [domain] to my.target
                endif
            else
                copy [domain] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_domain

function perform_inherit_domain_field (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_domain_field ? 0
       my.location = location ("dfl")
       echo "<inherit_domain_field location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[field] ?
    for my.source.[field] as [domain-field]
        my.existing = my.target->[field] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_domain_field_item (my.existing, [domain-field])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [domain-field] before my.insert
                else
                    copy [domain-field] to my.target
                endif
            else
                copy [domain-field] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_domain_field

function perform_inherit_value (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_value ? 0
       my.location = location ("dfl")
       echo "<inherit_value location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[value] ?
    for my.source.[value] as [value]
        if my.inherit = "overlay"
            my.existing = my.target->[value] ?
        endif
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_value_item (my.existing, [value])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [value] before my.insert
                else
                    copy [value] to my.target
                endif
            else
                copy [value] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_value

function perform_inherit_table (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_table ? 0
       my.location = location ("dfl")
       echo "<inherit_table location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[table] ?
    for my.source.[table] as [table]
        my.existing = my.target->[table] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_table_item (my.existing, [table])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [table] before my.insert
                else
                    copy [table] to my.target
                endif
            else
                copy [table] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_table

function perform_inherit_table_field (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_table_field ? 0
       my.location = location ("dfl")
       echo "<inherit_table_field location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[field] ?
    for my.source.[field] as [table-field]
        my.existing = my.target->[field] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_table_field_item (my.existing, [table-field])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [table-field] before my.insert
                else
                    copy [table-field] to my.target
                endif
            else
                copy [table-field] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_table_field

function perform_inherit_rule (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_rule ? 0
       my.location = location ("dfl")
       echo "<inherit_rule location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[rule] ?
    for my.source.[rule] as [rule]
        my.existing = my.target->[rule] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_rule_item (my.existing, [rule])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [rule] before my.insert
                else
                    copy [rule] to my.target
                endif
            else
                copy [rule] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_rule

function perform_inherit_link (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_link ? 0
       my.location = location ("dfl")
       echo "<inherit_link location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[link] ?
    for my.source.[link] as [link]
        my.existing = my.target->[link] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_link_item (my.existing, [link])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [link] before my.insert
                else
                    copy [link] to my.target
                endif
            else
                copy [link] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_link

function perform_inherit_link_field (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_link_field ? 0
       my.location = location ("dfl")
       echo "<inherit_link_field location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[field] ?
    for my.source.[field] as [link-field]
        my.existing = my.target->[field] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_link_field_item (my.existing, [link-field])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [link-field] before my.insert
                else
                    copy [link-field] to my.target
                endif
            else
                copy [link-field] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_link_field

function perform_inherit_index (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_index ? 0
       my.location = location ("dfl")
       echo "<inherit_index location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[index] ?
    for my.source.[index] as [index]
        my.existing = my.target->[index] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_index_item (my.existing, [index])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [index] before my.insert
                else
                    copy [index] to my.target
                endif
            else
                copy [index] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_index

function perform_inherit_index_field (target, source, inherit, sequence)
    if switches.trace ? 0 | switches.trace_index_field ? 0
       my.location = location ("dfl")
       echo "<inherit_index_field location = \"$(my.location)\""
    endif

    my.inherit ?= "overlay"
    my.insert = my.target->[field] ?
    for my.source.[field] as [index-field]
        my.existing = my.target->[field] (0.[name] ?= -1.[name]) ?
        if my.inherit = "overlay" & defined (my.existing)
            perform_inherit_index_field_item (my.existing, [index-field])
        elsif my.inherit <> "none" & !defined (my.existing)
            if (my.sequence ? "before") = "before"
                if defined (my.insert)
                    copy [index-field] before my.insert
                else
                    copy [index-field] to my.target
                endif
            else
                copy [index-field] to my.target
            endif
        endif
    endfor
endfunction perform_inherit_index_field

function perform_inherit_dfl_item (target, source)
    if switches.trace ? 0 | switches.trace_dfl ? 0
       my.location = location ("dfl")
       echo "<inherit_dfl_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[description] ?= my.source.[description] ?
        my.target.[target] ?= my.source.[target] ?
        my.target.[written] ?= my.source.[written] ?
        my.target.[revised] ?= my.source.[revised] ?
        my.target.[author] ?= my.source.[author] ?
        my.target.[script] ?= my.source.[script] ?
        my.target.[realname] ?= my.source.[realname] ?
        my.target.[prefix] ?= my.source.[prefix] ?
        my.target.[userid] ?= my.source.[userid] ?
        my.target.[password] ?= my.source.[password] ?
        perform_inherit_dfl_rule (my.target, my.source, , )
        perform_inherit_include (my.target, my.source, , )
        perform_inherit_inherit (my.target, my.source, , )
        perform_inherit_domain (my.target, my.source, , )
        perform_inherit_table (my.target, my.source, , )
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_dfl_rule_item (target, source)
    if switches.trace ? 0 | switches.trace_dfl_rule ? 0
       my.location = location ("dfl")
       echo "<inherit_dfl_rule_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_include_item (target, source)
    if switches.trace ? 0 | switches.trace_include ? 0
       my.location = location ("dfl")
       echo "<inherit_include_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[filename] ?= my.source.[filename] ?
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_inherit_item (target, source)
    if switches.trace ? 0 | switches.trace_inherit ? 0
       my.location = location ("dfl")
       echo "<inherit_inherit_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[filename] ?= my.source.[filename] ?
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_domain_item (target, source)
    if switches.trace ? 0 | switches.trace_domain ? 0
       my.location = location ("dfl")
       echo "<inherit_domain_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[type] ?= my.source.[type] ?
        my.target.[size] ?= my.source.[size] ?
        my.target.[default] ?= my.source.[default] ?
        my.target.[decs] ?= my.source.[decs] ?
        perform_inherit_domain_field (my.target, my.source, , )
        perform_inherit_rule (my.target, my.source, , )
        perform_inherit_value (my.target, my.source, , )
        perform_inherit_link (my.target, my.source, , )
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_domain_field_item (target, source)
    if switches.trace ? 0 | switches.trace_domain_field ? 0
       my.location = location ("dfl")
       echo "<inherit_domain_field_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[domain] ?= my.source.[domain] ?
        my.target.[type] ?= my.source.[type] ?
        my.target.[size] ?= my.source.[size] ?
        my.target.[default] ?= my.source.[default] ?
        my.target.[required] ?= my.source.[required] ?
        my.target.[realname] ?= my.source.[realname] ?
        perform_inherit_rule (my.target, my.source, , )
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_value_item (target, source)
    if switches.trace ? 0 | switches.trace_value ? 0
       my.location = location ("dfl")
       echo "<inherit_value_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[key] ?= my.source.[key] ?
        my.target.[label] ?= my.source.[label] ?
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_table_item (target, source)
    if switches.trace ? 0 | switches.trace_table ? 0
       my.location = location ("dfl")
       echo "<inherit_table_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[type] ?= my.source.[type] ?
        my.target.[description] ?= my.source.[description] ?
        my.target.[realname] ?= my.source.[realname] ?
        my.target.[prefix] ?= my.source.[prefix] ?
        perform_inherit_table_field (my.target, my.source, , )
        perform_inherit_link (my.target, my.source, , )
        perform_inherit_index (my.target, my.source, , )
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_table_field_item (target, source)
    if switches.trace ? 0 | switches.trace_table_field ? 0
       my.location = location ("dfl")
       echo "<inherit_table_field_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[domain] ?= my.source.[domain] ?
        my.target.[realname] ?= my.source.[realname] ?
        my.target.[type] ?= my.source.[type] ?
        my.target.[size] ?= my.source.[size] ?
        my.target.[default] ?= my.source.[default] ?
        my.target.[required] ?= my.source.[required] ?
        my.target.[decs] ?= my.source.[decs] ?
        perform_inherit_rule (my.target, my.source, , )
        perform_inherit_value (my.target, my.source, "overlay", "before")
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_rule_item (target, source)
    if switches.trace ? 0 | switches.trace_rule ? 0
       my.location = location ("dfl")
       echo "<inherit_rule_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[when] ?= my.source.[when] ?
        my.target.[what] ?= my.source.[what] ?
        my.target.[value] ?= my.source.[value] ?
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_link_item (target, source)
    if switches.trace ? 0 | switches.trace_link ? 0
       my.location = location ("dfl")
       echo "<inherit_link_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[type] ?= my.source.[type] ?
        my.target.[table] ?= my.source.[table] ?
        perform_inherit_link_field (my.target, my.source, , )
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_link_field_item (target, source)
    if switches.trace ? 0 | switches.trace_link_field ? 0
       my.location = location ("dfl")
       echo "<inherit_link_field_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[target] ?= my.source.[target] ?
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_index_item (target, source)
    if switches.trace ? 0 | switches.trace_index ? 0
       my.location = location ("dfl")
       echo "<inherit_index_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[unique] ?= my.source.[unique] ?
        my.target.[realname] ?= my.source.[realname] ?
        perform_inherit_index_field (my.target, my.source, , )
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction

function perform_inherit_index_field_item (target, source)
    if switches.trace ? 0 | switches.trace_index_field ? 0
       my.location = location ("dfl")
       echo "<inherit_index_field_item location = \"$(my.location)\""
    endif

    if my.target.inherit ? "default" <> "none"
        my.target._entity ?= my.source._entity ?
        my.target._key    ?= my.source._key    ?
        my.target.[name] ?= my.source.[name] ?
        my.target.[order] ?= my.source.[order] ?
        my.target.[realname] ?= my.source.[realname] ?
        if defined (my.source.)
            my.target. = my.source. + (my.target. ? "")
        endif
    endif
endfunction



function inherit_error (message)
    echo (my.message)
    global.errno = 1
endfunction
