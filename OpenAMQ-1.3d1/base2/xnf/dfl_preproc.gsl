#   'Preproc' engine for dfl
#
#   Generated by iMatix GSL/4
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   
#   This file is licensed under the GPL as follows:
#   
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or (at
#   your option) any later version.
#   
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#   
#   For information on alternative licensing for OEMs, please contact
#   iMatix Corporation.
#

function preproc_dfl ([dfl])
    my.entity = my.[dfl]
    my.[dfl]._entity = "dfl"
    my.[dfl]._key = my.[dfl].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_dfl ? 0
       echo "<preproc_dfl location = \"$(my.location)\""
    endif

    for my.[dfl].[rule] as [dfl rule]
        preproc_dfl_rule ([dfl rule])
    endfor

    for my.[dfl].[include] as [include]
        preproc_include ([include])
    endfor

    for my.[dfl].[inherit] as [inherit]
        preproc_inherit ([inherit])
    endfor

    for my.[dfl].[domain] as [domain]
        preproc_domain ([domain])
    endfor

    for my.[dfl].[table] as [table]
        preproc_table ([table])
    endfor

    if !my.[dfl].deleted ()
        my.[dfl]._key = my.[dfl].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_dfl_rule ([dfl rule])
    my.entity = my.[dfl rule]
    my.[dfl rule]._entity = "dfl rule"
    my.[dfl rule]._key = my.[dfl rule].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_dfl_rule ? 0
       echo "<preproc_dfl_rule location = \"$(my.location)\""
    endif

    if !my.[dfl rule].deleted ()
        my.[dfl rule]._key = my.[dfl rule].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_include ([include])
    my.entity = my.[include]
    my.[include]._entity = "include"
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_include ? 0
       echo "<preproc_include location = \"$(my.location)\""
    endif

        if ! defined (dfl.load_file (filename))
        preproc_error ("Error loading include file: $(filename): $(xml.error?)")
    endif
    if !my.[include].deleted ()
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_inherit ([inherit])
    my.entity = my.[inherit]
    my.[inherit]._entity = "inherit"
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_inherit ? 0
       echo "<preproc_inherit location = \"$(my.location)\""
    endif

        my.item = xml.load_file (filename) ?
    if !defined (my.item)
        preproc_error ("Error loading inherit file: $(filename): $(xml.error?)")
    else
        for my.item. as child
            my.childtype = name (child)
            my.childname = child.name
            if ! defined (-2-> $(my.childtype) (0.name ?= my.childname))
                move child to -2
            endif
        endfor
        my.item.delete ()
    endif
    if !my.[inherit].deleted ()
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_domain ([domain])
    my.entity = my.[domain]
    my.[domain]._entity = "domain"
    my.[domain]._key = my.[domain].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_domain ? 0
       echo "<preproc_domain location = \"$(my.location)\""
    endif

    for my.[domain].[field] as [domain-field]
        preproc_domain_field ([domain-field])
    endfor

    for my.[domain].[rule] as [rule]
        preproc_rule ([rule])
    endfor

    for my.[domain].[value] as [value]
        preproc_value ([value])
    endfor

    for my.[domain].[link] as [link]
        preproc_link ([link])
    endfor

    if !my.[domain].deleted ()
        my.[domain]._key = my.[domain].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_domain_field ([domain-field])
    my.entity = my.[domain-field]
    my.[domain-field]._entity = "domain-field"
    my.[domain-field]._key = my.[domain-field].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_domain_field ? 0
       echo "<preproc_domain_field location = \"$(my.location)\""
    endif

    for my.[domain-field].[rule] as [rule]
        preproc_rule ([rule])
    endfor

    if !my.[domain-field].deleted ()
        my.[domain-field]._key = my.[domain-field].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_value ([value])
    my.entity = my.[value]
    my.[value]._entity = "value"
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_value ? 0
       echo "<preproc_value location = \"$(my.location)\""
    endif

    if !my.[value].deleted ()
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_table ([table])
    my.entity = my.[table]
    my.[table]._entity = "table"
    my.[table]._key = my.[table].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_table ? 0
       echo "<preproc_table location = \"$(my.location)\""
    endif

    for my.[table].[field] as [table-field]
        preproc_table_field ([table-field])
    endfor

    for my.[table].[link] as [link]
        preproc_link ([link])
    endfor

    for my.[table].[index] as [index]
        preproc_index ([index])
    endfor

    # for every field in the table
    for table.field as [tabfield] where defined (domain)
        # for each domain that is a group
        for dfl.domain where name = tabfield.domain & type = "group"
            # for each of the fields in that group
            for domain.field as grpfield
                grpfield.name ?= grpfield.domain
                new field to table before tabfield
                    field.name     = (tabfield.name?"") + grpfield.name
                    field.domain   = grpfield.domain?
                    field.type     = grpfield.type?
                    field.size     = grpfield.size?
                    field.decs     = grpfield.decs?
                    field.default  = grpfield.default?
                    field.required = grpfield.required?
                    field.         = grpfield.?
                    for grpfield.rule
                        copy rule to field
                    endfor
                endnew
            endfor
            tabfield.group = 1
        endfor
    endfor

    #   All fields inherit their basic properties from their domain
    for table.field where defined (domain)
        for dfl.domain where name = field.domain
            if type ?= "group"
                #   Rules apply to table
                for domain.rule
                    copy rule to table
                endfor
            else
                field.name     ?= domain.name?
                field.type     ?= domain.type?
                field.size     ?= domain.size?
                field.decs     ?= domain.decs?
                field.default  ?= domain.default?
                field.required ?= domain.required?
                field.         ?= domain.?
                #   Rules apply to field
                for domain.rule
                    copy rule to field
                endfor
                #   Values apply to field
                for domain.value
                    copy value to field
                endfor
            endif
        endfor
    endfor
    if !my.[table].deleted ()
        my.[table]._key = my.[table].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_table_field ([table-field])
    my.entity = my.[table-field]
    my.[table-field]._entity = "table-field"
    my.[table-field]._key = my.[table-field].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_table_field ? 0
       echo "<preproc_table_field location = \"$(my.location)\""
    endif

    for my.[table-field].[rule] as [rule]
        preproc_rule ([rule])
    endfor

    for my.[table-field].[value] as [value]
        preproc_value ([value])
    endfor

    if !my.[table-field].deleted ()
        my.[table-field]._key = my.[table-field].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_rule ([rule])
    my.entity = my.[rule]
    my.[rule]._entity = "rule"
    my.[rule]._key = my.[rule].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_rule ? 0
       echo "<preproc_rule location = \"$(my.location)\""
    endif

    if !my.[rule].deleted ()
        my.[rule]._key = my.[rule].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_link ([link])
    my.entity = my.[link]
    my.[link]._entity = "link"
    my.[link]._key = my.[link].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_link ? 0
       echo "<preproc_link location = \"$(my.location)\""
    endif

    for my.[link].[field] as [link-field]
        preproc_link_field ([link-field])
    endfor

    if !my.[link].deleted ()
        my.[link]._key = my.[link].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_link_field ([link-field])
    my.entity = my.[link-field]
    my.[link-field]._entity = "link-field"
    my.[link-field]._key = my.[link-field].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_link_field ? 0
       echo "<preproc_link_field location = \"$(my.location)\""
    endif

    if !my.[link-field].deleted ()
        my.[link-field]._key = my.[link-field].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_index ([index])
    my.entity = my.[index]
    my.[index]._entity = "index"
    my.[index]._key = my.[index].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_index ? 0
       echo "<preproc_index location = \"$(my.location)\""
    endif

    for my.[index].[field] as [index-field]
        preproc_index_field ([index-field])
    endfor

    if !my.[index].deleted ()
        my.[index]._key = my.[index].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction

function preproc_index_field ([index-field])
    my.entity = my.[index-field]
    my.[index-field]._entity = "index-field"
    my.[index-field]._key = my.[index-field].[name] ?
    my.entity._dfl ?= [dfl]._key ?
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_index_field ? 0
       echo "<preproc_index_field location = \"$(my.location)\""
    endif

    if !my.[index-field].deleted ()
        my.[index-field]._key = my.[index-field].[name] ?
        my.entity._dfl ?= [dfl]._key ?
    endif
endfunction


function preproc_error (message)
    echo (my.message)
    global.errno = 1
endfunction
