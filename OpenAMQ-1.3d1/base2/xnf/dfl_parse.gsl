#   'Parse' engine for dfl
#
#   Generated by iMatix GSL/4
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   
#   This file is licensed under the GPL as follows:
#   
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or (at
#   your option) any later version.
#   
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#   
#   For information on alternative licensing for OEMs, please contact
#   iMatix Corporation.
#

function parse_dfl ([dfl])
    my.entity = my.[dfl]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_dfl ? 0
       echo "<parse_dfl location = \"$(my.location)\""
    endif

    0.realname ?= 0.name
    if !defined (my.[dfl].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if !defined (my.[dfl].[target])
        parse_error ("Required attribute 'target' not defined$(my.location)")
    endif
    if defined (my.[dfl].[target])
        if    my.[dfl].[target] ?= "bdb"
        else
            parse_error ("Attribute 'target' has illegal value '$(0.[target]?)'$(my.location)")
        endif
    endif
    #    Recurse into child entities
    if count (my.[dfl].[rule]) > 1
        parse_error ("more than one <rule> defined$(my.location)")
    endif
    #    Check that all entities are valid here
    for my.[dfl]. where defined (name ()) as entity
        if    name () = "rule"
        elsif name () = "include"
        elsif name () = "inherit"
        elsif name () = "domain"
        elsif name () = "table"
        else
            parse_error ("<$(name ())> not allowed$(my.location)")
        endif
    endfor

    for my.[dfl].[rule] as [dfl rule]
        parse_dfl_rule ([dfl rule])
    endfor

    for my.[dfl].[include] as [include]
        parse_include ([include])
    endfor

    for my.[dfl].[inherit] as [inherit]
        parse_inherit ([inherit])
    endfor

    for my.[dfl].[domain] as [domain]
        parse_domain ([domain])
    endfor

    for my.[dfl].[table] as [table]
        parse_table ([table])
    endfor

    my.last_key =
    for my.[dfl].[domain] as [domain] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <domain name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
    my.last_key =
    for my.[dfl].[table] as [table] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <table name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
endfunction

function parse_dfl_rule ([dfl rule])
    my.entity = my.[dfl rule]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_dfl_rule ? 0
       echo "<parse_dfl_rule location = \"$(my.location)\""
    endif

    if !defined (my.[dfl rule].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if defined (my.[dfl rule].[name])
        if    my.[dfl rule].[name] ?= "clean ids"
        else
            parse_error ("Attribute 'name' has illegal value '$(0.[name]?)'$(my.location)")
        endif
    endif
    for my.[dfl rule]. where defined (name ())
        parse_error ("<$(name ())> not allowed$(my.location)")
    endfor
    dfl.clean_ids = 1
endfunction

function parse_include ([include])
    my.entity = my.[include]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_include ? 0
       echo "<parse_include location = \"$(my.location)\""
    endif

    if !defined (my.[include].[filename])
        parse_error ("Required attribute 'filename' not defined$(my.location)")
    endif
    for my.[include]. where defined (name ())
        parse_error ("<$(name ())> not allowed$(my.location)")
    endfor
endfunction

function parse_inherit ([inherit])
    my.entity = my.[inherit]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_inherit ? 0
       echo "<parse_inherit location = \"$(my.location)\""
    endif

    if !defined (my.[inherit].[filename])
        parse_error ("Required attribute 'filename' not defined$(my.location)")
    endif
    for my.[inherit]. where defined (name ())
        parse_error ("<$(name ())> not allowed$(my.location)")
    endfor
endfunction

function parse_domain ([domain])
    my.entity = my.[domain]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_domain ? 0
       echo "<parse_domain location = \"$(my.location)\""
    endif

    if !defined (my.[domain].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if !defined (my.[domain].[type])
        parse_error ("Required attribute 'type' not defined$(my.location)")
    endif
    if defined (my.[domain].[type])
        if    my.[domain].[type] ?= "boolean"
        elsif my.[domain].[type] ?= "date"
        elsif my.[domain].[type] ?= "group"
        elsif my.[domain].[type] ?= "numeric"
        elsif my.[domain].[type] ?= "textual"
        elsif my.[domain].[type] ?= "time"
        elsif my.[domain].[type] ?= "timestamp"
        else
            parse_error ("Attribute 'type' has illegal value '$(0.[type]?)'$(my.location)")
        endif
    endif
    #    Recurse into child entities
    #    Check that all entities are valid here
    for my.[domain]. where defined (name ()) as entity
        if    name () = "field"
        elsif name () = "rule"
        elsif name () = "value"
        elsif name () = "link"
        else
            parse_error ("<$(name ())> not allowed$(my.location)")
        endif
    endfor

    for my.[domain].[field] as [domain-field]
        parse_domain_field ([domain-field])
    endfor

    for my.[domain].[rule] as [rule]
        parse_rule ([rule])
    endfor

    for my.[domain].[value] as [value]
        parse_value ([value])
    endfor

    for my.[domain].[link] as [link]
        parse_link ([link])
    endfor

    my.last_key =
    for my.[domain].[field] as [domain-field] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <field name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
    my.last_key =
    for my.[domain].[link] as [link] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <link name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
endfunction

function parse_domain_field ([domain-field])
    my.entity = my.[domain-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_domain_field ? 0
       echo "<parse_domain_field location = \"$(my.location)\""
    endif

    0.realname ?= (prefix?'') + 0.name
    if !defined (my.[domain-field].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if defined (my.[domain-field].[type])
        if    my.[domain-field].[type] ?= "boolean"
        elsif my.[domain-field].[type] ?= "date"
        elsif my.[domain-field].[type] ?= "group"
        elsif my.[domain-field].[type] ?= "numeric"
        elsif my.[domain-field].[type] ?= "textual"
        elsif my.[domain-field].[type] ?= "time"
        elsif my.[domain-field].[type] ?= "timestamp"
        else
            parse_error ("Attribute 'type' has illegal value '$(0.[type]?)'$(my.location)")
        endif
    endif
    if !defined (my.[domain-field].[required])
        my.[domain-field].[required] = "0"
    endif
    if defined (my.[domain-field].[required])
        if    my.[domain-field].[required] ?= "0"
        elsif my.[domain-field].[required] ?= "1"
        else
            parse_error ("Attribute 'required' has illegal value '$(0.[required]?)'$(my.location)")
        endif
    endif
    #    Recurse into child entities
    #    Check that all entities are valid here
    for my.[domain-field]. where defined (name ()) as entity
        if    name () = "rule"
        else
            parse_error ("<$(name ())> not allowed$(my.location)")
        endif
    endfor

    for my.[domain-field].[rule] as [rule]
        parse_rule ([rule])
    endfor

    if defined (0.[domain])
        my.source = link_target ("domain", "domain", "name", 0.[domain]) ?
        if defined (my.source)
            my.target = my.[domain-field]
            perform_inherit_domain_item (my.target, my.source)
        else
            parse_error ("Domain '$(0.[domain])' missing$(my.location)")
        endif
    endif
endfunction

function parse_value ([value])
    my.entity = my.[value]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_value ? 0
       echo "<parse_value location = \"$(my.location)\""
    endif

    if !defined (my.[value].[key])
        parse_error ("Required attribute 'key' not defined$(my.location)")
    endif
    if !defined (my.[value].[label])
        parse_error ("Required attribute 'label' not defined$(my.location)")
    endif
    for my.[value]. where defined (name ())
        parse_error ("<$(name ())> not allowed$(my.location)")
    endfor
endfunction

function parse_table ([table])
    my.entity = my.[table]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_table ? 0
       echo "<parse_table location = \"$(my.location)\""
    endif

    0.realname ?= (prefix?'') + 0.name
    if !defined (my.[table].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if !defined (my.[table].[type])
        my.[table].[type] = "BTree"
    endif
    if defined (my.[table].[type])
        if    my.[table].[type] ?= "BTree"
        elsif my.[table].[type] ?= "Queue"
        else
            parse_error ("Attribute 'type' has illegal value '$(0.[type]?)'$(my.location)")
        endif
    endif
    #    Recurse into child entities
    if count (my.[table].[field]) < 1
        parse_error ("<field> required$(my.location)")
    endif
    #    Check that all entities are valid here
    for my.[table]. where defined (name ()) as entity
        if    name () = "field"
        elsif name () = "link"
        elsif name () = "index"
        else
            parse_error ("<$(name ())> not allowed$(my.location)")
        endif
    endfor

    for my.[table].[field] as [table-field]
        parse_table_field ([table-field])
    endfor

    for my.[table].[link] as [link]
        parse_link ([link])
    endfor

    for my.[table].[index] as [index]
        parse_index ([index])
    endfor

    my.last_key =
    for my.[table].[field] as [table-field] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <field name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
    my.last_key =
    for my.[table].[link] as [link] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <link name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
    my.last_key =
    for my.[table].[index] as [index] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <index name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
    if count (index, 0.name = "primary") = 0
        if dfl.clean_ids = 0
            parse_error ("No primary index$(my.location)")
        elsif count (field, 0.name = "id") = 0
            parse_error ("No primary index or id field$(my.location)")
        else
            new table.index
                index.name = "primary"
                new index.field
                    field.name = "id"
                endnew
                parse_index (index)
            endnew
        endif
    endif
endfunction

function parse_table_field ([table-field])
    my.entity = my.[table-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_table_field ? 0
       echo "<parse_table_field location = \"$(my.location)\""
    endif

    0.realname ?= (prefix?'') + 0.name
    if !defined (my.[table-field].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if defined (my.[table-field].[type])
        if    my.[table-field].[type] ?= "boolean"
        elsif my.[table-field].[type] ?= "date"
        elsif my.[table-field].[type] ?= "group"
        elsif my.[table-field].[type] ?= "numeric"
        elsif my.[table-field].[type] ?= "textual"
        elsif my.[table-field].[type] ?= "time"
        elsif my.[table-field].[type] ?= "timestamp"
        else
            parse_error ("Attribute 'type' has illegal value '$(0.[type]?)'$(my.location)")
        endif
    endif
    if !defined (my.[table-field].[default])
        my.[table-field].[default] = "$((0.type = 'textual') ?? '' ? 0)"
    endif
    if !defined (my.[table-field].[required])
        my.[table-field].[required] = "0"
    endif
    if defined (my.[table-field].[required])
        if    my.[table-field].[required] ?= "0"
        elsif my.[table-field].[required] ?= "1"
        else
            parse_error ("Attribute 'required' has illegal value '$(0.[required]?)'$(my.location)")
        endif
    endif
    #    Recurse into child entities
    #    Check that all entities are valid here
    for my.[table-field]. where defined (name ()) as entity
        if    name () = "rule"
        elsif name () = "value"
        else
            parse_error ("<$(name ())> not allowed$(my.location)")
        endif
    endfor

    for my.[table-field].[rule] as [rule]
        parse_rule ([rule])
    endfor

    for my.[table-field].[value] as [value]
        parse_value ([value])
    endfor

    if defined (0.[domain])
        my.source = link_target ("domain", "domain", "name", 0.[domain]) ?
        if defined (my.source)
            my.target = my.[table-field]
            perform_inherit_domain_item (my.target, my.source)
        else
            parse_error ("Domain '$(0.[domain])' missing$(my.location)")
        endif
    endif
    if type = "group"
        for field as groupfield
            copy groupfield before [table-field]
            copyfield = [table-field].prev ()
            copyfield.entity = "table-field"
        endfor
        for rule
            copy rule to table
        endfor
        for link
            copy link to table
        endfor
        [table-field].delete ()
        return
    endif
endfunction

function parse_rule ([rule])
    my.entity = my.[rule]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_rule ? 0
       echo "<parse_rule location = \"$(my.location)\""
    endif

    if !defined (my.[rule].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if defined (my.[rule].[name])
        if    my.[rule].[name] ?= "show"
        elsif my.[rule].[name] ?= "ignore"
        elsif my.[rule].[name] ?= "recordid"
        elsif my.[rule].[name] ?= "set"
        elsif my.[rule].[name] ?= "userid"
        elsif my.[rule].[name] ?= "timestamp"
        elsif my.[rule].[name] ?= "soft delete"
        else
            parse_error ("Attribute 'name' has illegal value '$(0.[name]?)'$(my.location)")
        endif
    endif
    if !defined (my.[rule].[when])
        parse_error ("Required attribute 'when' not defined$(my.location)")
    endif
    if defined (my.[rule].[when])
        if    my.[rule].[when] ?= "all"
        elsif my.[rule].[when] ?= "*"
        elsif my.[rule].[when] ?= "create"
        elsif my.[rule].[when] ?= "detail"
        elsif my.[rule].[when] ?= "delete"
        elsif my.[rule].[when] ?= "insert"
        elsif my.[rule].[when] ?= "layout"
        elsif my.[rule].[when] ?= "object"
        elsif my.[rule].[when] ?= "summary"
        elsif my.[rule].[when] ?= "update"
        else
            parse_error ("Attribute 'when' has illegal value '$(0.[when]?)'$(my.location)")
        endif
    endif
    for my.[rule]. where defined (name ())
        parse_error ("<$(name ())> not allowed$(my.location)")
    endfor
endfunction

function parse_link ([link])
    my.entity = my.[link]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_link ? 0
       echo "<parse_link location = \"$(my.location)\""
    endif

    if !defined (my.[link].[type])
        parse_error ("Required attribute 'type' not defined$(my.location)")
    endif
    if defined (my.[link].[type])
        if    my.[link].[type] ?= "childof"
        elsif my.[link].[type] ?= "reference"
        elsif my.[link].[type] ?= "multiplex"
        else
            parse_error ("Attribute 'type' has illegal value '$(0.[type]?)'$(my.location)")
        endif
    endif
    if !defined (my.[link].[table])
        parse_error ("Required attribute 'table' not defined$(my.location)")
    endif
        if count (field) = 0
        if dfl.clean_ids = 0
            parse_error ("No fields defined for link to $(link.table:)$(my.location)")
        else
            new link.field
                field.name = link.table + "id"
            endnew
        endif
    endif

    if link.type = "childof" | link.type = "multiplex"
        #   If an index exists with necessary fields, store its name,
        #   else create a new index using link fields.
        for table.index
            my.match = 1
            my.field = index-> field
            for link.field as linkfield
                if ! (linkfield.name ?= my.field.name)
                    my.match = 0
                    last linkfield
                endif
                my.field = my.field.next () ?
            endfor
            if my.match
                link.index = index.name
                last index
            endif
        endfor
        if ! my.match
            new table.index
                index.name = "alt"
                for link.field as linkfield
                    index.name += "_" + linkfield.name
                    new field to index
                        field.name = linkfield.name
                    endnew
                endfor
                link.index = index.name
            endnew
        endif
    endif
    #    Recurse into child entities
    #    Check that all entities are valid here
    for my.[link]. where defined (name ()) as entity
        if    name () = "field"
        else
            parse_error ("<$(name ())> not allowed$(my.location)")
        endif
    endfor

    for my.[link].[field] as [link-field]
        parse_link_field ([link-field])
    endfor

    my.last_key =
    for my.[link].[field] as [link-field] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <field name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
    if defined (0.[table])
        my.source = link_target ("table", "table", "name", 0.[table]) ?
        if defined (my.source)
            my.target = my.[link]
            perform_inherit_table_item (my.target, my.source)
        else
            parse_error ("Table '$(0.[table])' missing$(my.location)")
        endif
    endif
endfunction

function parse_link_field ([link-field])
    my.entity = my.[link-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_link_field ? 0
       echo "<parse_link_field location = \"$(my.location)\""
    endif

    if !defined (my.[link-field].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    for my.[link-field]. where defined (name ())
        parse_error ("<$(name ())> not allowed$(my.location)")
    endfor
    if defined (0.[name])
        my.source = link_target ("field", "table-field", "name", 0.[name]) ?
        if defined (my.source)
            my.target = my.[link-field]
            perform_inherit_table_field_item (my.target, my.source)
        else
            parse_error ("Field '$(0.[name])' missing$(my.location)")
        endif
    endif
endfunction

function parse_index ([index])
    my.entity = my.[index]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_index ? 0
       echo "<parse_index location = \"$(my.location)\""
    endif

    0.realname ?= (0.name='primary'?? 'primary_index'? 0.name)
    if !defined (my.[index].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if !defined (my.[index].[unique])
        my.[index].[unique] = "0"
    endif
    if !defined (my.[index].[realname])
        my.[index].[realname] = ""
    endif
    #    Recurse into child entities
    if count (my.[index].[field]) < 1
        parse_error ("<field> required$(my.location)")
    endif
    #    Check that all entities are valid here
    for my.[index]. where defined (name ()) as entity
        if    name () = "field"
        else
            parse_error ("<$(name ())> not allowed$(my.location)")
        endif
    endfor

    for my.[index].[field] as [index-field]
        parse_index_field ([index-field])
    endfor

    my.last_key =
    for my.[index].[field] as [index-field] by 0.[name] ? ""
        if (0.[name] ?<> "") & (0.[name] ?= my.last_key)
            parse_error ("Duplicate <field name = \"$(0.[name])\"/>$(my.location)")
        endif
        my.last_key = 0.[name] ? ""
    endfor
endfunction

function parse_index_field ([index-field])
    my.entity = my.[index-field]
    my.location = location ("dfl")

    if switches.trace ? 0 | switches.trace_index_field ? 0
       echo "<parse_index_field location = \"$(my.location)\""
    endif

    0.realname ?= (prefix?'') + 0.name
    if !defined (my.[index-field].[name])
        parse_error ("Required attribute 'name' not defined$(my.location)")
    endif
    if !defined (my.[index-field].[order])
        my.[index-field].[order] = "ascending"
    endif
    for my.[index-field]. where defined (name ())
        parse_error ("<$(name ())> not allowed$(my.location)")
    endfor
    if defined (0.[name])
        my.source = link_target ("field", "table-field", "name", 0.[name]) ?
        if defined (my.source)
            my.target = my.[index-field]
            perform_inherit_table_field_item (my.target, my.source)
                if index.name = "primary"
                my.source.required = 1
            endif
            new my.source.index as sourceindex
                sourceindex.name   = index.name
                sourceindex.number = item ([index-field])
            endnew
        else
            parse_error ("Field '$(0.[name])' missing$(my.location)")
        endif
    endif
endfunction


function parse_error (message)
    echo (my.message)
    global.errno = 1
endfunction
