#!/bin/sh
#
#   Boom builder for SFL 3.31
#   Generated by iMatix Boom from standard.pwl
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   All rights reserved.
#   
#   This file is licensed under the BSD license as follows:
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of iMatix Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#   Force environment variables to point to install location
#   Start by using final IBASE, then handle local -install path
#
boom_model_list () {
    set |
        awk 'BEGIN                      { FS="[=_]" }
             /^BOOM_MODEL_[A-Z0-9]*=1$/ { print $3  }'
}
boom_model_expand () {
    for MODEL in `boom_model_list`; do
        eval unset BOOM_MODEL_$MODEL
    done
    OLD_IFS=$IFS
    IFS=,
    for MODEL in $BOOM_MODEL; do
        MODEL=`echo $MODEL | tr \[a-z\] \[A-Z\]`
        eval BOOM_MODEL_$MODEL=1
        eval export BOOM_MODEL_$MODEL
    done
    IFS=$OLD_IFS
}
croak() {
    if [ -n "$*" ]; then
        echo "boom E: [sfl]: $* - stop" 1>&2
    else
        echo "boom E: [sfl]: stop" 1>&2
    fi
    exit 1
}
carp() {
    echo "boom I: [sfl]: $*" 1>&2
}
trap 'croak "Interrupted"' INT
trap 'croak "Terminated"' TERM
trap 'croak "Quit"' QUIT
self=$0
MY_VERSION="3.31"
#
#   Set default values for BOOM_MODEL
#
#   Default is release,st on all platforms except Linux and Solaris.
#
if [ -s /usr/bin/uname ]; then BOOM_PLATFORM=`/usr/bin/uname`; fi
if [ -s /bin/uname ];     then BOOM_PLATFORM=`/bin/uname`;     fi
if [ -z "$BOOM_MODEL" ]; then
    if [ "$BOOM_PLATFORM" = "Linux" -o "$BOOM_PLATFORM" = "SunOS" ]; then
        BOOM_MODEL=release,mt
    else
        BOOM_MODEL=release,st
    fi
fi
boom_model_expand
if [ "$BOOM_MODEL_RELEASE" != "1" ]; then
    if [ "$BOOM_MODEL_DEBUG" != "1" ]; then
        BOOM_MODEL_RELEASE=1
        BOOM_MODEL="$BOOM_MODEL,release"
    fi
fi
if [ "$BOOM_MODEL_ST" != "1" ]; then
    if [ "$BOOM_MODEL_MT" != "1" ]; then
        if [ "$BOOM_PLATFORM" = "Linux" -o "$BOOM_PLATFORM" = "SunOS" ]; then
            BOOM_MODEL_MT=1
            BOOM_MODEL="$BOOM_MODEL,mt"
        else
            BOOM_MODEL_ST=1
            BOOM_MODEL="$BOOM_MODEL,st"
        fi
    fi
fi
if [ -z "$IBASE" ]; then
    carp "The IBASE variable is not set.  Please set it to the location where SFL should be installed."
    exit 1
fi
if [ "$1" = "-v" ]; then
    BOOM_TRACE=1
    export BOOM_TRACE
    shift
fi
if [ "$1" != "-install" ]; then
    #   Normal use, use IBASE
    PATH=.:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$IBASE/include; export INCDIR_ALT
    _LOCAL_BASE=
    _INSTALL_ROOT=$IBASE
else
    #   Building product, we use -install directory first, then IBASE
    CURDIR=`pwd`
    cd $2
    _LOCAL_BASE=`pwd`
    cd $CURDIR
    PATH=.:$_LOCAL_BASE/bin:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$_LOCAL_BASE/bin:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$_LOCAL_BASE/include:$IBASE/include; export INCDIR_ALT
    shift
    shift
    _INSTALL_ROOT=$_LOCAL_BASE
fi

# --------------------------   BUILD BINARY FILES   ---------------------------

a_build_binary_files() {
:
    carp "Building SFL..."
    #   To prevent compatibility warnings...
    INCDIR=
    LIBDIR=
    export LIBDIR INCDIR
    if [ "$BOOM_TRACE" ]; then
        MY_COPTS=-v
    else
        MY_COPTS=-q
    fi
    if [ ! -z "$_LOCAL_BASE" ]; then
        MY_COPTS="$MY_COPTS -li $_LOCAL_BASE/include -ll $_LOCAL_BASE/lib"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflbits"
    c $MY_COPTS sflbits || croak "\"c $MY_COPTS sflbits\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcomp"
    c $MY_COPTS sflcomp || croak "\"c $MY_COPTS sflcomp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcons"
    c $MY_COPTS sflcons || croak "\"c $MY_COPTS sflcons\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflconv"
    c $MY_COPTS sflconv || croak "\"c $MY_COPTS sflconv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcryp"
    c $MY_COPTS sflcryp || croak "\"c $MY_COPTS sflcryp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfldate"
    c $MY_COPTS sfldate || croak "\"c $MY_COPTS sfldate\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfldescr"
    c $MY_COPTS sfldescr || croak "\"c $MY_COPTS sfldescr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfldir"
    c $MY_COPTS sfldir || croak "\"c $MY_COPTS sfldir\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflenv"
    c $MY_COPTS sflenv || croak "\"c $MY_COPTS sflenv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflexdr"
    c $MY_COPTS sflexdr || croak "\"c $MY_COPTS sflexdr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflfile"
    c $MY_COPTS sflfile || croak "\"c $MY_COPTS sflfile\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflfind"
    c $MY_COPTS sflfind || croak "\"c $MY_COPTS sflfind\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflfort"
    c $MY_COPTS sflfort || croak "\"c $MY_COPTS sflfort\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflheap"
    c $MY_COPTS sflheap || croak "\"c $MY_COPTS sflheap\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflhttp"
    c $MY_COPTS sflhttp || croak "\"c $MY_COPTS sflhttp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflini"
    c $MY_COPTS sflini || croak "\"c $MY_COPTS sflini\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfllang"
    c $MY_COPTS sfllang || croak "\"c $MY_COPTS sfllang\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfllbuf"
    c $MY_COPTS sfllbuf || croak "\"c $MY_COPTS sfllbuf\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfllist"
    c $MY_COPTS sfllist || croak "\"c $MY_COPTS sfllist\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflmail"
    c $MY_COPTS sflmail || croak "\"c $MY_COPTS sflmail\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflmath"
    c $MY_COPTS sflmath || croak "\"c $MY_COPTS sflmath\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflmem"
    c $MY_COPTS sflmem || croak "\"c $MY_COPTS sflmem\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflmesg"
    c $MY_COPTS sflmesg || croak "\"c $MY_COPTS sflmesg\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflmime"
    c $MY_COPTS sflmime || croak "\"c $MY_COPTS sflmime\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflnode"
    c $MY_COPTS sflnode || croak "\"c $MY_COPTS sflnode\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflprint"
    c $MY_COPTS sflprint || croak "\"c $MY_COPTS sflprint\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflproc"
    c $MY_COPTS sflproc || croak "\"c $MY_COPTS sflproc\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflsearch"
    c $MY_COPTS sflsearch || croak "\"c $MY_COPTS sflsearch\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflsha"
    c $MY_COPTS sflsha || croak "\"c $MY_COPTS sflsha\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflslot"
    c $MY_COPTS sflslot || croak "\"c $MY_COPTS sflslot\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflsort"
    c $MY_COPTS sflsort || croak "\"c $MY_COPTS sflsort\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflstr"
    c $MY_COPTS sflstr || croak "\"c $MY_COPTS sflstr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflsymb"
    c $MY_COPTS sflsymb || croak "\"c $MY_COPTS sflsymb\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflsyst"
    c $MY_COPTS sflsyst || croak "\"c $MY_COPTS sflsyst\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfltok"
    c $MY_COPTS sfltok || croak "\"c $MY_COPTS sfltok\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfltree"
    c $MY_COPTS sfltree || croak "\"c $MY_COPTS sfltree\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfltron"
    c $MY_COPTS sfltron || croak "\"c $MY_COPTS sfltron\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sfluid"
    c $MY_COPTS sfluid || croak "\"c $MY_COPTS sfluid\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflxml"
    c $MY_COPTS sflxml || croak "\"c $MY_COPTS sflxml\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflxmll"
    c $MY_COPTS sflxmll || croak "\"c $MY_COPTS sflxmll\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflxmls"
    c $MY_COPTS sflxmls || croak "\"c $MY_COPTS sflxmls\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflsock"
    c $MY_COPTS sflsock || croak "\"c $MY_COPTS sflsock\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvbs"
    c $MY_COPTS sflcvbs || croak "\"c $MY_COPTS sflcvbs\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvdp"
    c $MY_COPTS sflcvdp || croak "\"c $MY_COPTS sflcvdp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvds"
    c $MY_COPTS sflcvds || croak "\"c $MY_COPTS sflcvds\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvns"
    c $MY_COPTS sflcvns || croak "\"c $MY_COPTS sflcvns\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvsb"
    c $MY_COPTS sflcvsb || croak "\"c $MY_COPTS sflcvsb\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvsd"
    c $MY_COPTS sflcvsd || croak "\"c $MY_COPTS sflcvsd\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvsn"
    c $MY_COPTS sflcvsn || croak "\"c $MY_COPTS sflcvsn\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvst"
    c $MY_COPTS sflcvst || croak "\"c $MY_COPTS sflcvst\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvtp"
    c $MY_COPTS sflcvtp || croak "\"c $MY_COPTS sflcvtp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflcvts"
    c $MY_COPTS sflcvts || croak "\"c $MY_COPTS sflcvts\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sflscrit"
    c $MY_COPTS sflscrit || croak "\"c $MY_COPTS sflscrit\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testall"
    c $MY_COPTS testall || croak "\"c $MY_COPTS testall\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testbits"
    c $MY_COPTS testbits || croak "\"c $MY_COPTS testbits\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testcgi"
    c $MY_COPTS testcgi || croak "\"c $MY_COPTS testcgi\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testcomp"
    c $MY_COPTS testcomp || croak "\"c $MY_COPTS testcomp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testconv"
    c $MY_COPTS testconv || croak "\"c $MY_COPTS testconv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testcryp"
    c $MY_COPTS testcryp || croak "\"c $MY_COPTS testcryp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testdate"
    c $MY_COPTS testdate || croak "\"c $MY_COPTS testdate\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testdir"
    c $MY_COPTS testdir || croak "\"c $MY_COPTS testdir\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testenv"
    c $MY_COPTS testenv || croak "\"c $MY_COPTS testenv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testexdr"
    c $MY_COPTS testexdr || croak "\"c $MY_COPTS testexdr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testfile"
    c $MY_COPTS testfile || croak "\"c $MY_COPTS testfile\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testfind"
    c $MY_COPTS testfind || croak "\"c $MY_COPTS testfind\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testfort"
    c $MY_COPTS testfort || croak "\"c $MY_COPTS testfort\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testheap"
    c $MY_COPTS testheap || croak "\"c $MY_COPTS testheap\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testhttp"
    c $MY_COPTS testhttp || croak "\"c $MY_COPTS testhttp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testini"
    c $MY_COPTS testini || croak "\"c $MY_COPTS testini\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testlang"
    c $MY_COPTS testlang || croak "\"c $MY_COPTS testlang\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testmem"
    c $MY_COPTS testmem || croak "\"c $MY_COPTS testmem\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testmime"
    c $MY_COPTS testmime || croak "\"c $MY_COPTS testmime\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testproc"
    c $MY_COPTS testproc || croak "\"c $MY_COPTS testproc\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS teststr"
    c $MY_COPTS teststr || croak "\"c $MY_COPTS teststr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testsym"
    c $MY_COPTS testsym || croak "\"c $MY_COPTS testsym\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testtok"
    c $MY_COPTS testtok || croak "\"c $MY_COPTS testtok\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testtree"
    c $MY_COPTS testtree || croak "\"c $MY_COPTS testtree\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testtron"
    c $MY_COPTS testtron || croak "\"c $MY_COPTS testtron\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testuid"
    c $MY_COPTS testuid || croak "\"c $MY_COPTS testuid\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testxml"
    c $MY_COPTS testxml || croak "\"c $MY_COPTS testxml\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testxmls"
    c $MY_COPTS testxmls || croak "\"c $MY_COPTS testxmls\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS testsearch"
    c $MY_COPTS testsearch || croak "\"c $MY_COPTS testsearch\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS dos2unix"
    c $MY_COPTS dos2unix || croak "\"c $MY_COPTS dos2unix\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflbits"
    c $MY_COPTS -r libsfl sflbits || croak "\"c $MY_COPTS -r libsfl sflbits\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcomp"
    c $MY_COPTS -r libsfl sflcomp || croak "\"c $MY_COPTS -r libsfl sflcomp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcons"
    c $MY_COPTS -r libsfl sflcons || croak "\"c $MY_COPTS -r libsfl sflcons\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflconv"
    c $MY_COPTS -r libsfl sflconv || croak "\"c $MY_COPTS -r libsfl sflconv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcryp"
    c $MY_COPTS -r libsfl sflcryp || croak "\"c $MY_COPTS -r libsfl sflcryp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfldate"
    c $MY_COPTS -r libsfl sfldate || croak "\"c $MY_COPTS -r libsfl sfldate\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfldescr"
    c $MY_COPTS -r libsfl sfldescr || croak "\"c $MY_COPTS -r libsfl sfldescr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfldir"
    c $MY_COPTS -r libsfl sfldir || croak "\"c $MY_COPTS -r libsfl sfldir\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflenv"
    c $MY_COPTS -r libsfl sflenv || croak "\"c $MY_COPTS -r libsfl sflenv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflexdr"
    c $MY_COPTS -r libsfl sflexdr || croak "\"c $MY_COPTS -r libsfl sflexdr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflfile"
    c $MY_COPTS -r libsfl sflfile || croak "\"c $MY_COPTS -r libsfl sflfile\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflfind"
    c $MY_COPTS -r libsfl sflfind || croak "\"c $MY_COPTS -r libsfl sflfind\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflfort"
    c $MY_COPTS -r libsfl sflfort || croak "\"c $MY_COPTS -r libsfl sflfort\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflheap"
    c $MY_COPTS -r libsfl sflheap || croak "\"c $MY_COPTS -r libsfl sflheap\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflhttp"
    c $MY_COPTS -r libsfl sflhttp || croak "\"c $MY_COPTS -r libsfl sflhttp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflini"
    c $MY_COPTS -r libsfl sflini || croak "\"c $MY_COPTS -r libsfl sflini\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfllang"
    c $MY_COPTS -r libsfl sfllang || croak "\"c $MY_COPTS -r libsfl sfllang\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfllbuf"
    c $MY_COPTS -r libsfl sfllbuf || croak "\"c $MY_COPTS -r libsfl sfllbuf\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfllist"
    c $MY_COPTS -r libsfl sfllist || croak "\"c $MY_COPTS -r libsfl sfllist\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflmail"
    c $MY_COPTS -r libsfl sflmail || croak "\"c $MY_COPTS -r libsfl sflmail\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflmath"
    c $MY_COPTS -r libsfl sflmath || croak "\"c $MY_COPTS -r libsfl sflmath\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflmem"
    c $MY_COPTS -r libsfl sflmem || croak "\"c $MY_COPTS -r libsfl sflmem\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflmesg"
    c $MY_COPTS -r libsfl sflmesg || croak "\"c $MY_COPTS -r libsfl sflmesg\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflmime"
    c $MY_COPTS -r libsfl sflmime || croak "\"c $MY_COPTS -r libsfl sflmime\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflnode"
    c $MY_COPTS -r libsfl sflnode || croak "\"c $MY_COPTS -r libsfl sflnode\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflprint"
    c $MY_COPTS -r libsfl sflprint || croak "\"c $MY_COPTS -r libsfl sflprint\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflproc"
    c $MY_COPTS -r libsfl sflproc || croak "\"c $MY_COPTS -r libsfl sflproc\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflsearch"
    c $MY_COPTS -r libsfl sflsearch || croak "\"c $MY_COPTS -r libsfl sflsearch\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflsha"
    c $MY_COPTS -r libsfl sflsha || croak "\"c $MY_COPTS -r libsfl sflsha\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflslot"
    c $MY_COPTS -r libsfl sflslot || croak "\"c $MY_COPTS -r libsfl sflslot\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflsort"
    c $MY_COPTS -r libsfl sflsort || croak "\"c $MY_COPTS -r libsfl sflsort\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflstr"
    c $MY_COPTS -r libsfl sflstr || croak "\"c $MY_COPTS -r libsfl sflstr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflsymb"
    c $MY_COPTS -r libsfl sflsymb || croak "\"c $MY_COPTS -r libsfl sflsymb\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflsyst"
    c $MY_COPTS -r libsfl sflsyst || croak "\"c $MY_COPTS -r libsfl sflsyst\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfltok"
    c $MY_COPTS -r libsfl sfltok || croak "\"c $MY_COPTS -r libsfl sfltok\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfltree"
    c $MY_COPTS -r libsfl sfltree || croak "\"c $MY_COPTS -r libsfl sfltree\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfltron"
    c $MY_COPTS -r libsfl sfltron || croak "\"c $MY_COPTS -r libsfl sfltron\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sfluid"
    c $MY_COPTS -r libsfl sfluid || croak "\"c $MY_COPTS -r libsfl sfluid\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflxml"
    c $MY_COPTS -r libsfl sflxml || croak "\"c $MY_COPTS -r libsfl sflxml\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflxmll"
    c $MY_COPTS -r libsfl sflxmll || croak "\"c $MY_COPTS -r libsfl sflxmll\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflxmls"
    c $MY_COPTS -r libsfl sflxmls || croak "\"c $MY_COPTS -r libsfl sflxmls\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflsock"
    c $MY_COPTS -r libsfl sflsock || croak "\"c $MY_COPTS -r libsfl sflsock\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvbs"
    c $MY_COPTS -r libsfl sflcvbs || croak "\"c $MY_COPTS -r libsfl sflcvbs\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvdp"
    c $MY_COPTS -r libsfl sflcvdp || croak "\"c $MY_COPTS -r libsfl sflcvdp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvds"
    c $MY_COPTS -r libsfl sflcvds || croak "\"c $MY_COPTS -r libsfl sflcvds\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvns"
    c $MY_COPTS -r libsfl sflcvns || croak "\"c $MY_COPTS -r libsfl sflcvns\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvsb"
    c $MY_COPTS -r libsfl sflcvsb || croak "\"c $MY_COPTS -r libsfl sflcvsb\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvsd"
    c $MY_COPTS -r libsfl sflcvsd || croak "\"c $MY_COPTS -r libsfl sflcvsd\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvsn"
    c $MY_COPTS -r libsfl sflcvsn || croak "\"c $MY_COPTS -r libsfl sflcvsn\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvst"
    c $MY_COPTS -r libsfl sflcvst || croak "\"c $MY_COPTS -r libsfl sflcvst\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvtp"
    c $MY_COPTS -r libsfl sflcvtp || croak "\"c $MY_COPTS -r libsfl sflcvtp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflcvts"
    c $MY_COPTS -r libsfl sflcvts || croak "\"c $MY_COPTS -r libsfl sflcvts\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsfl sflscrit"
    c $MY_COPTS -r libsfl sflscrit || croak "\"c $MY_COPTS -r libsfl sflscrit\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testall"
    c $MY_COPTS -L testall || croak "\"c $MY_COPTS -L testall\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testbits"
    c $MY_COPTS -L testbits || croak "\"c $MY_COPTS -L testbits\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testcgi"
    c $MY_COPTS -L testcgi || croak "\"c $MY_COPTS -L testcgi\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testcomp"
    c $MY_COPTS -L testcomp || croak "\"c $MY_COPTS -L testcomp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testconv"
    c $MY_COPTS -L testconv || croak "\"c $MY_COPTS -L testconv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testcryp"
    c $MY_COPTS -L testcryp || croak "\"c $MY_COPTS -L testcryp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testdate"
    c $MY_COPTS -L testdate || croak "\"c $MY_COPTS -L testdate\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testdir"
    c $MY_COPTS -L testdir || croak "\"c $MY_COPTS -L testdir\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testenv"
    c $MY_COPTS -L testenv || croak "\"c $MY_COPTS -L testenv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testexdr"
    c $MY_COPTS -L testexdr || croak "\"c $MY_COPTS -L testexdr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testfile"
    c $MY_COPTS -L testfile || croak "\"c $MY_COPTS -L testfile\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testfind"
    c $MY_COPTS -L testfind || croak "\"c $MY_COPTS -L testfind\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testfort"
    c $MY_COPTS -L testfort || croak "\"c $MY_COPTS -L testfort\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testheap"
    c $MY_COPTS -L testheap || croak "\"c $MY_COPTS -L testheap\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testhttp"
    c $MY_COPTS -L testhttp || croak "\"c $MY_COPTS -L testhttp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testini"
    c $MY_COPTS -L testini || croak "\"c $MY_COPTS -L testini\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testlang"
    c $MY_COPTS -L testlang || croak "\"c $MY_COPTS -L testlang\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testmem"
    c $MY_COPTS -L testmem || croak "\"c $MY_COPTS -L testmem\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testmime"
    c $MY_COPTS -L testmime || croak "\"c $MY_COPTS -L testmime\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testproc"
    c $MY_COPTS -L testproc || croak "\"c $MY_COPTS -L testproc\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L teststr"
    c $MY_COPTS -L teststr || croak "\"c $MY_COPTS -L teststr\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testsym"
    c $MY_COPTS -L testsym || croak "\"c $MY_COPTS -L testsym\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testtok"
    c $MY_COPTS -L testtok || croak "\"c $MY_COPTS -L testtok\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testtree"
    c $MY_COPTS -L testtree || croak "\"c $MY_COPTS -L testtree\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testtron"
    c $MY_COPTS -L testtron || croak "\"c $MY_COPTS -L testtron\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testuid"
    c $MY_COPTS -L testuid || croak "\"c $MY_COPTS -L testuid\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testxml"
    c $MY_COPTS -L testxml || croak "\"c $MY_COPTS -L testxml\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testxmls"
    c $MY_COPTS -L testxmls || croak "\"c $MY_COPTS -L testxmls\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L testsearch"
    c $MY_COPTS -L testsearch || croak "\"c $MY_COPTS -L testsearch\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L dos2unix"
    c $MY_COPTS -L dos2unix || croak "\"c $MY_COPTS -L dos2unix\" failed"
}

# -------------------------   BUILD SOURCE PACKAGES   -------------------------

a_build_source_packages() {
:
    rm -f _package.lst
    if [ -f "sfl/version.h" ]; then
        echo sfl/version.h>>_package.lst
    fi
    if [ -f "sfl/prelude.h" ]; then
        echo sfl/prelude.h>>_package.lst
    fi
    if [ -f "sfl/sflhead.h" ]; then
        echo sfl/sflhead.h>>_package.lst
    fi
    if [ -f "sfl/sflbits.c" ]; then
        echo sfl/sflbits.c>>_package.lst
    fi
    if [ -f "sfl/sflcomp.c" ]; then
        echo sfl/sflcomp.c>>_package.lst
    fi
    if [ -f "sfl/sflcons.c" ]; then
        echo sfl/sflcons.c>>_package.lst
    fi
    if [ -f "sfl/sflconv.c" ]; then
        echo sfl/sflconv.c>>_package.lst
    fi
    if [ -f "sfl/sflcryp.c" ]; then
        echo sfl/sflcryp.c>>_package.lst
    fi
    if [ -f "sfl/sfldate.c" ]; then
        echo sfl/sfldate.c>>_package.lst
    fi
    if [ -f "sfl/sfldescr.c" ]; then
        echo sfl/sfldescr.c>>_package.lst
    fi
    if [ -f "sfl/sfldir.c" ]; then
        echo sfl/sfldir.c>>_package.lst
    fi
    if [ -f "sfl/sflenv.c" ]; then
        echo sfl/sflenv.c>>_package.lst
    fi
    if [ -f "sfl/sflexdr.c" ]; then
        echo sfl/sflexdr.c>>_package.lst
    fi
    if [ -f "sfl/sflfile.c" ]; then
        echo sfl/sflfile.c>>_package.lst
    fi
    if [ -f "sfl/sflfind.c" ]; then
        echo sfl/sflfind.c>>_package.lst
    fi
    if [ -f "sfl/sflfort.c" ]; then
        echo sfl/sflfort.c>>_package.lst
    fi
    if [ -f "sfl/sflheap.c" ]; then
        echo sfl/sflheap.c>>_package.lst
    fi
    if [ -f "sfl/sflhttp.c" ]; then
        echo sfl/sflhttp.c>>_package.lst
    fi
    if [ -f "sfl/sflini.c" ]; then
        echo sfl/sflini.c>>_package.lst
    fi
    if [ -f "sfl/sfllang.c" ]; then
        echo sfl/sfllang.c>>_package.lst
    fi
    if [ -f "sfl/sfllbuf.c" ]; then
        echo sfl/sfllbuf.c>>_package.lst
    fi
    if [ -f "sfl/sfllist.c" ]; then
        echo sfl/sfllist.c>>_package.lst
    fi
    if [ -f "sfl/sflmail.c" ]; then
        echo sfl/sflmail.c>>_package.lst
    fi
    if [ -f "sfl/sflmath.c" ]; then
        echo sfl/sflmath.c>>_package.lst
    fi
    if [ -f "sfl/sflmem.c" ]; then
        echo sfl/sflmem.c>>_package.lst
    fi
    if [ -f "sfl/sflmesg.c" ]; then
        echo sfl/sflmesg.c>>_package.lst
    fi
    if [ -f "sfl/sflmime.c" ]; then
        echo sfl/sflmime.c>>_package.lst
    fi
    if [ -f "sfl/sflnode.c" ]; then
        echo sfl/sflnode.c>>_package.lst
    fi
    if [ -f "sfl/sflprint.c" ]; then
        echo sfl/sflprint.c>>_package.lst
    fi
    if [ -f "sfl/sflproc.c" ]; then
        echo sfl/sflproc.c>>_package.lst
    fi
    if [ -f "sfl/sflsearch.c" ]; then
        echo sfl/sflsearch.c>>_package.lst
    fi
    if [ -f "sfl/sflsha.c" ]; then
        echo sfl/sflsha.c>>_package.lst
    fi
    if [ -f "sfl/sflslot.c" ]; then
        echo sfl/sflslot.c>>_package.lst
    fi
    if [ -f "sfl/sflsort.c" ]; then
        echo sfl/sflsort.c>>_package.lst
    fi
    if [ -f "sfl/sflstr.c" ]; then
        echo sfl/sflstr.c>>_package.lst
    fi
    if [ -f "sfl/sflsymb.c" ]; then
        echo sfl/sflsymb.c>>_package.lst
    fi
    if [ -f "sfl/sflsyst.c" ]; then
        echo sfl/sflsyst.c>>_package.lst
    fi
    if [ -f "sfl/sfltok.c" ]; then
        echo sfl/sfltok.c>>_package.lst
    fi
    if [ -f "sfl/sfltree.c" ]; then
        echo sfl/sfltree.c>>_package.lst
    fi
    if [ -f "sfl/sfltron.c" ]; then
        echo sfl/sfltron.c>>_package.lst
    fi
    if [ -f "sfl/sfluid.c" ]; then
        echo sfl/sfluid.c>>_package.lst
    fi
    if [ -f "sfl/sflxml.c" ]; then
        echo sfl/sflxml.c>>_package.lst
    fi
    if [ -f "sfl/sflxmll.c" ]; then
        echo sfl/sflxmll.c>>_package.lst
    fi
    if [ -f "sfl/sflxmls.c" ]; then
        echo sfl/sflxmls.c>>_package.lst
    fi
    if [ -f "sfl/sflsock.c" ]; then
        echo sfl/sflsock.c>>_package.lst
    fi
    if [ -f "sfl/sflcvbs.c" ]; then
        echo sfl/sflcvbs.c>>_package.lst
    fi
    if [ -f "sfl/sflcvdp.c" ]; then
        echo sfl/sflcvdp.c>>_package.lst
    fi
    if [ -f "sfl/sflcvds.c" ]; then
        echo sfl/sflcvds.c>>_package.lst
    fi
    if [ -f "sfl/sflcvns.c" ]; then
        echo sfl/sflcvns.c>>_package.lst
    fi
    if [ -f "sfl/sflcvsb.c" ]; then
        echo sfl/sflcvsb.c>>_package.lst
    fi
    if [ -f "sfl/sflcvsd.c" ]; then
        echo sfl/sflcvsd.c>>_package.lst
    fi
    if [ -f "sfl/sflcvsn.c" ]; then
        echo sfl/sflcvsn.c>>_package.lst
    fi
    if [ -f "sfl/sflcvst.c" ]; then
        echo sfl/sflcvst.c>>_package.lst
    fi
    if [ -f "sfl/sflcvtp.c" ]; then
        echo sfl/sflcvtp.c>>_package.lst
    fi
    if [ -f "sfl/sflcvts.c" ]; then
        echo sfl/sflcvts.c>>_package.lst
    fi
    if [ -f "sfl/sflscrit.c" ]; then
        echo sfl/sflscrit.c>>_package.lst
    fi
    if [ -f "sfl/sflproco.imp" ]; then
        echo sfl/sflproco.imp>>_package.lst
    fi
    if [ -f "sfl/sflprocu.imp" ]; then
        echo sfl/sflprocu.imp>>_package.lst
    fi
    if [ -f "sfl/sflprocv.imp" ]; then
        echo sfl/sflprocv.imp>>_package.lst
    fi
    if [ -f "sfl/sflprocw.imp" ]; then
        echo sfl/sflprocw.imp>>_package.lst
    fi
    if [ -f "sfl/sflprocx.h" ]; then
        echo sfl/sflprocx.h>>_package.lst
    fi
    if [ -f "sfl/sflprocx.imp" ]; then
        echo sfl/sflprocx.imp>>_package.lst
    fi
    if [ -f "sfl/testall.c" ]; then
        echo sfl/testall.c>>_package.lst
    fi
    if [ -f "sfl/testbits.c" ]; then
        echo sfl/testbits.c>>_package.lst
    fi
    if [ -f "sfl/testcgi.c" ]; then
        echo sfl/testcgi.c>>_package.lst
    fi
    if [ -f "sfl/testcomp.c" ]; then
        echo sfl/testcomp.c>>_package.lst
    fi
    if [ -f "sfl/testconv.c" ]; then
        echo sfl/testconv.c>>_package.lst
    fi
    if [ -f "sfl/testcryp.c" ]; then
        echo sfl/testcryp.c>>_package.lst
    fi
    if [ -f "sfl/testdate.c" ]; then
        echo sfl/testdate.c>>_package.lst
    fi
    if [ -f "sfl/testdir.c" ]; then
        echo sfl/testdir.c>>_package.lst
    fi
    if [ -f "sfl/testenv.c" ]; then
        echo sfl/testenv.c>>_package.lst
    fi
    if [ -f "sfl/testexdr.c" ]; then
        echo sfl/testexdr.c>>_package.lst
    fi
    if [ -f "sfl/testfile.c" ]; then
        echo sfl/testfile.c>>_package.lst
    fi
    if [ -f "sfl/testfind.c" ]; then
        echo sfl/testfind.c>>_package.lst
    fi
    if [ -f "sfl/testfort.c" ]; then
        echo sfl/testfort.c>>_package.lst
    fi
    if [ -f "sfl/testheap.c" ]; then
        echo sfl/testheap.c>>_package.lst
    fi
    if [ -f "sfl/testhttp.c" ]; then
        echo sfl/testhttp.c>>_package.lst
    fi
    if [ -f "sfl/testini.c" ]; then
        echo sfl/testini.c>>_package.lst
    fi
    if [ -f "sfl/testlang.c" ]; then
        echo sfl/testlang.c>>_package.lst
    fi
    if [ -f "sfl/testmem.c" ]; then
        echo sfl/testmem.c>>_package.lst
    fi
    if [ -f "sfl/testmime.c" ]; then
        echo sfl/testmime.c>>_package.lst
    fi
    if [ -f "sfl/testproc.c" ]; then
        echo sfl/testproc.c>>_package.lst
    fi
    if [ -f "sfl/teststr.c" ]; then
        echo sfl/teststr.c>>_package.lst
    fi
    if [ -f "sfl/testsym.c" ]; then
        echo sfl/testsym.c>>_package.lst
    fi
    if [ -f "sfl/testtok.c" ]; then
        echo sfl/testtok.c>>_package.lst
    fi
    if [ -f "sfl/testtree.c" ]; then
        echo sfl/testtree.c>>_package.lst
    fi
    if [ -f "sfl/testtron.c" ]; then
        echo sfl/testtron.c>>_package.lst
    fi
    if [ -f "sfl/testuid.c" ]; then
        echo sfl/testuid.c>>_package.lst
    fi
    if [ -f "sfl/testxml.c" ]; then
        echo sfl/testxml.c>>_package.lst
    fi
    if [ -f "sfl/testxmls.c" ]; then
        echo sfl/testxmls.c>>_package.lst
    fi
    if [ -f "sfl/testsearch.c" ]; then
        echo sfl/testsearch.c>>_package.lst
    fi
    if [ -f "sfl/testconv.dat" ]; then
        echo sfl/testconv.dat>>_package.lst
    fi
    if [ -f "sfl/testfort.txt" ]; then
        echo sfl/testfort.txt>>_package.lst
    fi
    if [ -f "sfl/dos2unix.c" ]; then
        echo sfl/dos2unix.c>>_package.lst
    fi
    if [ -f "sfl/prelude.pdl" ]; then
        echo sfl/prelude.pdl>>_package.lst
    fi
    if [ -f "sfl/license.gpl" ]; then
        echo sfl/license.gpl>>_package.lst
    fi
    if [ -f "sfl/project.pdl" ]; then
        echo sfl/project.pdl>>_package.lst
    fi
    if [ -f "sfl/readme.txt" ]; then
        echo sfl/readme.txt>>_package.lst
    fi
    if [ -f "sfl/sflbits.h" ]; then
        echo sfl/sflbits.h>>_package.lst
    fi
    if [ -f "sfl/sflcomp.h" ]; then
        echo sfl/sflcomp.h>>_package.lst
    fi
    if [ -f "sfl/sflcons.h" ]; then
        echo sfl/sflcons.h>>_package.lst
    fi
    if [ -f "sfl/sflconv.h" ]; then
        echo sfl/sflconv.h>>_package.lst
    fi
    if [ -f "sfl/sflcryp.h" ]; then
        echo sfl/sflcryp.h>>_package.lst
    fi
    if [ -f "sfl/sfldate.h" ]; then
        echo sfl/sfldate.h>>_package.lst
    fi
    if [ -f "sfl/sfldescr.h" ]; then
        echo sfl/sfldescr.h>>_package.lst
    fi
    if [ -f "sfl/sfldir.h" ]; then
        echo sfl/sfldir.h>>_package.lst
    fi
    if [ -f "sfl/sflenv.h" ]; then
        echo sfl/sflenv.h>>_package.lst
    fi
    if [ -f "sfl/sflexdr.h" ]; then
        echo sfl/sflexdr.h>>_package.lst
    fi
    if [ -f "sfl/sflfile.h" ]; then
        echo sfl/sflfile.h>>_package.lst
    fi
    if [ -f "sfl/sflfind.h" ]; then
        echo sfl/sflfind.h>>_package.lst
    fi
    if [ -f "sfl/sflfort.h" ]; then
        echo sfl/sflfort.h>>_package.lst
    fi
    if [ -f "sfl/sflheap.h" ]; then
        echo sfl/sflheap.h>>_package.lst
    fi
    if [ -f "sfl/sflhttp.h" ]; then
        echo sfl/sflhttp.h>>_package.lst
    fi
    if [ -f "sfl/sflini.h" ]; then
        echo sfl/sflini.h>>_package.lst
    fi
    if [ -f "sfl/sfllang.h" ]; then
        echo sfl/sfllang.h>>_package.lst
    fi
    if [ -f "sfl/sfllbuf.h" ]; then
        echo sfl/sfllbuf.h>>_package.lst
    fi
    if [ -f "sfl/sfllist.h" ]; then
        echo sfl/sfllist.h>>_package.lst
    fi
    if [ -f "sfl/sflmail.h" ]; then
        echo sfl/sflmail.h>>_package.lst
    fi
    if [ -f "sfl/sflmath.h" ]; then
        echo sfl/sflmath.h>>_package.lst
    fi
    if [ -f "sfl/sflmem.h" ]; then
        echo sfl/sflmem.h>>_package.lst
    fi
    if [ -f "sfl/sflmesg.h" ]; then
        echo sfl/sflmesg.h>>_package.lst
    fi
    if [ -f "sfl/sflmime.h" ]; then
        echo sfl/sflmime.h>>_package.lst
    fi
    if [ -f "sfl/sflnode.h" ]; then
        echo sfl/sflnode.h>>_package.lst
    fi
    if [ -f "sfl/sflprint.h" ]; then
        echo sfl/sflprint.h>>_package.lst
    fi
    if [ -f "sfl/sflproc.h" ]; then
        echo sfl/sflproc.h>>_package.lst
    fi
    if [ -f "sfl/sflsearch.h" ]; then
        echo sfl/sflsearch.h>>_package.lst
    fi
    if [ -f "sfl/sflsha.h" ]; then
        echo sfl/sflsha.h>>_package.lst
    fi
    if [ -f "sfl/sflslot.h" ]; then
        echo sfl/sflslot.h>>_package.lst
    fi
    if [ -f "sfl/sflsort.h" ]; then
        echo sfl/sflsort.h>>_package.lst
    fi
    if [ -f "sfl/sflstr.h" ]; then
        echo sfl/sflstr.h>>_package.lst
    fi
    if [ -f "sfl/sflsymb.h" ]; then
        echo sfl/sflsymb.h>>_package.lst
    fi
    if [ -f "sfl/sflsyst.h" ]; then
        echo sfl/sflsyst.h>>_package.lst
    fi
    if [ -f "sfl/sfltok.h" ]; then
        echo sfl/sfltok.h>>_package.lst
    fi
    if [ -f "sfl/sfltree.h" ]; then
        echo sfl/sfltree.h>>_package.lst
    fi
    if [ -f "sfl/sfltron.h" ]; then
        echo sfl/sfltron.h>>_package.lst
    fi
    if [ -f "sfl/sfluid.h" ]; then
        echo sfl/sfluid.h>>_package.lst
    fi
    if [ -f "sfl/sflxml.h" ]; then
        echo sfl/sflxml.h>>_package.lst
    fi
    if [ -f "sfl/sflxmll.h" ]; then
        echo sfl/sflxmll.h>>_package.lst
    fi
    if [ -f "sfl/sflxmls.h" ]; then
        echo sfl/sflxmls.h>>_package.lst
    fi
    if [ -f "sfl/sflsock.h" ]; then
        echo sfl/sflsock.h>>_package.lst
    fi
    if [ -f "sfl/sflcvst.l" ]; then
        echo sfl/sflcvst.l>>_package.lst
    fi
    if [ -f "sfl/sflcvst.i" ]; then
        echo sfl/sflcvst.i>>_package.lst
    fi
    if [ -f "sfl/sflcvst.d" ]; then
        echo sfl/sflcvst.d>>_package.lst
    fi
    if [ -f "sfl/sflscrit.l" ]; then
        echo sfl/sflscrit.l>>_package.lst
    fi
    if [ -f "sfl/sflscrit.i" ]; then
        echo sfl/sflscrit.i>>_package.lst
    fi
    if [ -f "sfl/sflscrit.d" ]; then
        echo sfl/sflscrit.d>>_package.lst
    fi
    if [ -f "sfl/sfl.h" ]; then
        echo sfl/sfl.h>>_package.lst
    fi
    if [ -f "sfl/stamp_generate" ]; then
        echo sfl/stamp_generate>>_package.lst
    fi
    if [ -f "sfl/configure" ]; then
        echo sfl/configure>>_package.lst
    fi
    if [ -f "sfl/Makefile.unix" ]; then
        echo sfl/Makefile.unix>>_package.lst
    fi
    if [ -f "sfl/boomake" ]; then
        echo sfl/boomake>>_package.lst
    fi
    if [ -f "sfl/configure.bat" ]; then
        echo sfl/configure.bat>>_package.lst
    fi
    if [ -f "sfl/Makefile.win32" ]; then
        echo sfl/Makefile.win32>>_package.lst
    fi
    if [ -f "sfl/boomake.bat" ]; then
        echo sfl/boomake.bat>>_package.lst
    fi
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    carp "Building sfl-$MY_VERSION-src.tar.gz..."
    zip  -rq _package.zip -@<_package.lst
    unzip -q _package.zip -d sfl-$MY_VERSION
    rm -f sfl-$MY_VERSION-src.tar.gz
    tar -cf  sfl-$MY_VERSION-src.tar sfl-$MY_VERSION
    gzip sfl-$MY_VERSION-src.tar
    rm -f sfl-$MY_VERSION-src.zip
    carp "Building sfl-$MY_VERSION-src.zip..."
    zip -lrmq sfl-$MY_VERSION-src.zip sfl-$MY_VERSION
    rm _package.zip
    rm _package.lst
    rm stamp_source
}

# ---------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

a_check_all_source_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "prelude.h" ]; then
        croak "prelude.h is missing"
    fi
    if [ ! -f "sflhead.h" ]; then
        croak "sflhead.h is missing"
    fi
    if [ ! -f "sflbits.c" ]; then
        croak "sflbits.c is missing"
    fi
    if [ ! -f "sflcomp.c" ]; then
        croak "sflcomp.c is missing"
    fi
    if [ ! -f "sflcons.c" ]; then
        croak "sflcons.c is missing"
    fi
    if [ ! -f "sflconv.c" ]; then
        croak "sflconv.c is missing"
    fi
    if [ ! -f "sflcryp.c" ]; then
        croak "sflcryp.c is missing"
    fi
    if [ ! -f "sfldate.c" ]; then
        croak "sfldate.c is missing"
    fi
    if [ ! -f "sfldescr.c" ]; then
        croak "sfldescr.c is missing"
    fi
    if [ ! -f "sfldir.c" ]; then
        croak "sfldir.c is missing"
    fi
    if [ ! -f "sflenv.c" ]; then
        croak "sflenv.c is missing"
    fi
    if [ ! -f "sflexdr.c" ]; then
        croak "sflexdr.c is missing"
    fi
    if [ ! -f "sflfile.c" ]; then
        croak "sflfile.c is missing"
    fi
    if [ ! -f "sflfind.c" ]; then
        croak "sflfind.c is missing"
    fi
    if [ ! -f "sflfort.c" ]; then
        croak "sflfort.c is missing"
    fi
    if [ ! -f "sflheap.c" ]; then
        croak "sflheap.c is missing"
    fi
    if [ ! -f "sflhttp.c" ]; then
        croak "sflhttp.c is missing"
    fi
    if [ ! -f "sflini.c" ]; then
        croak "sflini.c is missing"
    fi
    if [ ! -f "sfllang.c" ]; then
        croak "sfllang.c is missing"
    fi
    if [ ! -f "sfllbuf.c" ]; then
        croak "sfllbuf.c is missing"
    fi
    if [ ! -f "sfllist.c" ]; then
        croak "sfllist.c is missing"
    fi
    if [ ! -f "sflmail.c" ]; then
        croak "sflmail.c is missing"
    fi
    if [ ! -f "sflmath.c" ]; then
        croak "sflmath.c is missing"
    fi
    if [ ! -f "sflmem.c" ]; then
        croak "sflmem.c is missing"
    fi
    if [ ! -f "sflmesg.c" ]; then
        croak "sflmesg.c is missing"
    fi
    if [ ! -f "sflmime.c" ]; then
        croak "sflmime.c is missing"
    fi
    if [ ! -f "sflnode.c" ]; then
        croak "sflnode.c is missing"
    fi
    if [ ! -f "sflprint.c" ]; then
        croak "sflprint.c is missing"
    fi
    if [ ! -f "sflproc.c" ]; then
        croak "sflproc.c is missing"
    fi
    if [ ! -f "sflsearch.c" ]; then
        croak "sflsearch.c is missing"
    fi
    if [ ! -f "sflsha.c" ]; then
        croak "sflsha.c is missing"
    fi
    if [ ! -f "sflslot.c" ]; then
        croak "sflslot.c is missing"
    fi
    if [ ! -f "sflsort.c" ]; then
        croak "sflsort.c is missing"
    fi
    if [ ! -f "sflstr.c" ]; then
        croak "sflstr.c is missing"
    fi
    if [ ! -f "sflsymb.c" ]; then
        croak "sflsymb.c is missing"
    fi
    if [ ! -f "sflsyst.c" ]; then
        croak "sflsyst.c is missing"
    fi
    if [ ! -f "sfltok.c" ]; then
        croak "sfltok.c is missing"
    fi
    if [ ! -f "sfltree.c" ]; then
        croak "sfltree.c is missing"
    fi
    if [ ! -f "sfltron.c" ]; then
        croak "sfltron.c is missing"
    fi
    if [ ! -f "sfluid.c" ]; then
        croak "sfluid.c is missing"
    fi
    if [ ! -f "sflxml.c" ]; then
        croak "sflxml.c is missing"
    fi
    if [ ! -f "sflxmll.c" ]; then
        croak "sflxmll.c is missing"
    fi
    if [ ! -f "sflxmls.c" ]; then
        croak "sflxmls.c is missing"
    fi
    if [ ! -f "sflsock.c" ]; then
        croak "sflsock.c is missing"
    fi
    if [ ! -f "sflcvbs.c" ]; then
        croak "sflcvbs.c is missing"
    fi
    if [ ! -f "sflcvdp.c" ]; then
        croak "sflcvdp.c is missing"
    fi
    if [ ! -f "sflcvds.c" ]; then
        croak "sflcvds.c is missing"
    fi
    if [ ! -f "sflcvns.c" ]; then
        croak "sflcvns.c is missing"
    fi
    if [ ! -f "sflcvsb.c" ]; then
        croak "sflcvsb.c is missing"
    fi
    if [ ! -f "sflcvsd.c" ]; then
        croak "sflcvsd.c is missing"
    fi
    if [ ! -f "sflcvsn.c" ]; then
        croak "sflcvsn.c is missing"
    fi
    if [ ! -f "sflcvst.c" ]; then
        croak "sflcvst.c is missing"
    fi
    if [ ! -f "sflcvtp.c" ]; then
        croak "sflcvtp.c is missing"
    fi
    if [ ! -f "sflcvts.c" ]; then
        croak "sflcvts.c is missing"
    fi
    if [ ! -f "sflscrit.c" ]; then
        croak "sflscrit.c is missing"
    fi
    if [ ! -f "sflproco.imp" ]; then
        croak "sflproco.imp is missing"
    fi
    if [ ! -f "sflprocu.imp" ]; then
        croak "sflprocu.imp is missing"
    fi
    if [ ! -f "sflprocv.imp" ]; then
        croak "sflprocv.imp is missing"
    fi
    if [ ! -f "sflprocw.imp" ]; then
        croak "sflprocw.imp is missing"
    fi
    if [ ! -f "sflprocx.h" ]; then
        croak "sflprocx.h is missing"
    fi
    if [ ! -f "sflprocx.imp" ]; then
        croak "sflprocx.imp is missing"
    fi
    if [ ! -f "testall.c" ]; then
        croak "testall.c is missing"
    fi
    if [ ! -f "testbits.c" ]; then
        croak "testbits.c is missing"
    fi
    if [ ! -f "testcgi.c" ]; then
        croak "testcgi.c is missing"
    fi
    if [ ! -f "testcomp.c" ]; then
        croak "testcomp.c is missing"
    fi
    if [ ! -f "testconv.c" ]; then
        croak "testconv.c is missing"
    fi
    if [ ! -f "testcryp.c" ]; then
        croak "testcryp.c is missing"
    fi
    if [ ! -f "testdate.c" ]; then
        croak "testdate.c is missing"
    fi
    if [ ! -f "testdir.c" ]; then
        croak "testdir.c is missing"
    fi
    if [ ! -f "testenv.c" ]; then
        croak "testenv.c is missing"
    fi
    if [ ! -f "testexdr.c" ]; then
        croak "testexdr.c is missing"
    fi
    if [ ! -f "testfile.c" ]; then
        croak "testfile.c is missing"
    fi
    if [ ! -f "testfind.c" ]; then
        croak "testfind.c is missing"
    fi
    if [ ! -f "testfort.c" ]; then
        croak "testfort.c is missing"
    fi
    if [ ! -f "testheap.c" ]; then
        croak "testheap.c is missing"
    fi
    if [ ! -f "testhttp.c" ]; then
        croak "testhttp.c is missing"
    fi
    if [ ! -f "testini.c" ]; then
        croak "testini.c is missing"
    fi
    if [ ! -f "testlang.c" ]; then
        croak "testlang.c is missing"
    fi
    if [ ! -f "testmem.c" ]; then
        croak "testmem.c is missing"
    fi
    if [ ! -f "testmime.c" ]; then
        croak "testmime.c is missing"
    fi
    if [ ! -f "testproc.c" ]; then
        croak "testproc.c is missing"
    fi
    if [ ! -f "teststr.c" ]; then
        croak "teststr.c is missing"
    fi
    if [ ! -f "testsym.c" ]; then
        croak "testsym.c is missing"
    fi
    if [ ! -f "testtok.c" ]; then
        croak "testtok.c is missing"
    fi
    if [ ! -f "testtree.c" ]; then
        croak "testtree.c is missing"
    fi
    if [ ! -f "testtron.c" ]; then
        croak "testtron.c is missing"
    fi
    if [ ! -f "testuid.c" ]; then
        croak "testuid.c is missing"
    fi
    if [ ! -f "testxml.c" ]; then
        croak "testxml.c is missing"
    fi
    if [ ! -f "testxmls.c" ]; then
        croak "testxmls.c is missing"
    fi
    if [ ! -f "testsearch.c" ]; then
        croak "testsearch.c is missing"
    fi
    if [ ! -f "testconv.dat" ]; then
        croak "testconv.dat is missing"
    fi
    if [ ! -f "testfort.txt" ]; then
        croak "testfort.txt is missing"
    fi
    if [ ! -f "dos2unix.c" ]; then
        croak "dos2unix.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "sflbits.h" ]; then
        croak "sflbits.h is missing"
    fi
    if [ ! -f "sflcomp.h" ]; then
        croak "sflcomp.h is missing"
    fi
    if [ ! -f "sflcons.h" ]; then
        croak "sflcons.h is missing"
    fi
    if [ ! -f "sflconv.h" ]; then
        croak "sflconv.h is missing"
    fi
    if [ ! -f "sflcryp.h" ]; then
        croak "sflcryp.h is missing"
    fi
    if [ ! -f "sfldate.h" ]; then
        croak "sfldate.h is missing"
    fi
    if [ ! -f "sfldescr.h" ]; then
        croak "sfldescr.h is missing"
    fi
    if [ ! -f "sfldir.h" ]; then
        croak "sfldir.h is missing"
    fi
    if [ ! -f "sflenv.h" ]; then
        croak "sflenv.h is missing"
    fi
    if [ ! -f "sflexdr.h" ]; then
        croak "sflexdr.h is missing"
    fi
    if [ ! -f "sflfile.h" ]; then
        croak "sflfile.h is missing"
    fi
    if [ ! -f "sflfind.h" ]; then
        croak "sflfind.h is missing"
    fi
    if [ ! -f "sflfort.h" ]; then
        croak "sflfort.h is missing"
    fi
    if [ ! -f "sflheap.h" ]; then
        croak "sflheap.h is missing"
    fi
    if [ ! -f "sflhttp.h" ]; then
        croak "sflhttp.h is missing"
    fi
    if [ ! -f "sflini.h" ]; then
        croak "sflini.h is missing"
    fi
    if [ ! -f "sfllang.h" ]; then
        croak "sfllang.h is missing"
    fi
    if [ ! -f "sfllbuf.h" ]; then
        croak "sfllbuf.h is missing"
    fi
    if [ ! -f "sfllist.h" ]; then
        croak "sfllist.h is missing"
    fi
    if [ ! -f "sflmail.h" ]; then
        croak "sflmail.h is missing"
    fi
    if [ ! -f "sflmath.h" ]; then
        croak "sflmath.h is missing"
    fi
    if [ ! -f "sflmem.h" ]; then
        croak "sflmem.h is missing"
    fi
    if [ ! -f "sflmesg.h" ]; then
        croak "sflmesg.h is missing"
    fi
    if [ ! -f "sflmime.h" ]; then
        croak "sflmime.h is missing"
    fi
    if [ ! -f "sflnode.h" ]; then
        croak "sflnode.h is missing"
    fi
    if [ ! -f "sflprint.h" ]; then
        croak "sflprint.h is missing"
    fi
    if [ ! -f "sflproc.h" ]; then
        croak "sflproc.h is missing"
    fi
    if [ ! -f "sflsearch.h" ]; then
        croak "sflsearch.h is missing"
    fi
    if [ ! -f "sflsha.h" ]; then
        croak "sflsha.h is missing"
    fi
    if [ ! -f "sflslot.h" ]; then
        croak "sflslot.h is missing"
    fi
    if [ ! -f "sflsort.h" ]; then
        croak "sflsort.h is missing"
    fi
    if [ ! -f "sflstr.h" ]; then
        croak "sflstr.h is missing"
    fi
    if [ ! -f "sflsymb.h" ]; then
        croak "sflsymb.h is missing"
    fi
    if [ ! -f "sflsyst.h" ]; then
        croak "sflsyst.h is missing"
    fi
    if [ ! -f "sfltok.h" ]; then
        croak "sfltok.h is missing"
    fi
    if [ ! -f "sfltree.h" ]; then
        croak "sfltree.h is missing"
    fi
    if [ ! -f "sfltron.h" ]; then
        croak "sfltron.h is missing"
    fi
    if [ ! -f "sfluid.h" ]; then
        croak "sfluid.h is missing"
    fi
    if [ ! -f "sflxml.h" ]; then
        croak "sflxml.h is missing"
    fi
    if [ ! -f "sflxmll.h" ]; then
        croak "sflxmll.h is missing"
    fi
    if [ ! -f "sflxmls.h" ]; then
        croak "sflxmls.h is missing"
    fi
    if [ ! -f "sflsock.h" ]; then
        croak "sflsock.h is missing"
    fi
    if [ ! -f "sflcvst.l" ]; then
        croak "sflcvst.l is missing"
    fi
    if [ ! -f "sflcvst.i" ]; then
        croak "sflcvst.i is missing"
    fi
    if [ ! -f "sflcvst.d" ]; then
        croak "sflcvst.d is missing"
    fi
    if [ ! -f "sflscrit.l" ]; then
        croak "sflscrit.l is missing"
    fi
    if [ ! -f "sflscrit.i" ]; then
        croak "sflscrit.i is missing"
    fi
    if [ ! -f "sflscrit.d" ]; then
        croak "sflscrit.d is missing"
    fi
    if [ ! -f "sfl.h" ]; then
        croak "sfl.h is missing"
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
}

# -----------------------   CHECK BINARY FILES EXIST   ------------------------

a_check_binary_files_exist() {
:
    if [ ! -f "libsfl.a" ]; then
        croak "libsfl.a is missing"
    fi
    if [ ! -f "dos2unix" ]; then
        croak "dos2unix is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "sfl.h" ]; then
        croak "sfl.h is missing"
    fi
}

# ------------------------   CHECK OPERATING CONTEXT   ------------------------

a_check_operating_context() {
:
    if [ -f ./stamp_stripped ]; then
        event=stripped
    elif [ -f ./stamp_source ]; then
        event=source
    else
        event=repository
    fi
}

# -----------------------   CHECK PROJECT FILES EXIST   -----------------------

a_check_project_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "prelude.h" ]; then
        croak "prelude.h is missing"
    fi
    if [ ! -f "sflhead.h" ]; then
        croak "sflhead.h is missing"
    fi
    if [ ! -f "sflbits.c" ]; then
        croak "sflbits.c is missing"
    fi
    if [ ! -f "sflcomp.c" ]; then
        croak "sflcomp.c is missing"
    fi
    if [ ! -f "sflcons.c" ]; then
        croak "sflcons.c is missing"
    fi
    if [ ! -f "sflconv.c" ]; then
        croak "sflconv.c is missing"
    fi
    if [ ! -f "sflcryp.c" ]; then
        croak "sflcryp.c is missing"
    fi
    if [ ! -f "sfldate.c" ]; then
        croak "sfldate.c is missing"
    fi
    if [ ! -f "sfldescr.c" ]; then
        croak "sfldescr.c is missing"
    fi
    if [ ! -f "sfldir.c" ]; then
        croak "sfldir.c is missing"
    fi
    if [ ! -f "sflenv.c" ]; then
        croak "sflenv.c is missing"
    fi
    if [ ! -f "sflexdr.c" ]; then
        croak "sflexdr.c is missing"
    fi
    if [ ! -f "sflfile.c" ]; then
        croak "sflfile.c is missing"
    fi
    if [ ! -f "sflfind.c" ]; then
        croak "sflfind.c is missing"
    fi
    if [ ! -f "sflfort.c" ]; then
        croak "sflfort.c is missing"
    fi
    if [ ! -f "sflheap.c" ]; then
        croak "sflheap.c is missing"
    fi
    if [ ! -f "sflhttp.c" ]; then
        croak "sflhttp.c is missing"
    fi
    if [ ! -f "sflini.c" ]; then
        croak "sflini.c is missing"
    fi
    if [ ! -f "sfllang.c" ]; then
        croak "sfllang.c is missing"
    fi
    if [ ! -f "sfllbuf.c" ]; then
        croak "sfllbuf.c is missing"
    fi
    if [ ! -f "sfllist.c" ]; then
        croak "sfllist.c is missing"
    fi
    if [ ! -f "sflmail.c" ]; then
        croak "sflmail.c is missing"
    fi
    if [ ! -f "sflmath.c" ]; then
        croak "sflmath.c is missing"
    fi
    if [ ! -f "sflmem.c" ]; then
        croak "sflmem.c is missing"
    fi
    if [ ! -f "sflmesg.c" ]; then
        croak "sflmesg.c is missing"
    fi
    if [ ! -f "sflmime.c" ]; then
        croak "sflmime.c is missing"
    fi
    if [ ! -f "sflnode.c" ]; then
        croak "sflnode.c is missing"
    fi
    if [ ! -f "sflprint.c" ]; then
        croak "sflprint.c is missing"
    fi
    if [ ! -f "sflproc.c" ]; then
        croak "sflproc.c is missing"
    fi
    if [ ! -f "sflsearch.c" ]; then
        croak "sflsearch.c is missing"
    fi
    if [ ! -f "sflsha.c" ]; then
        croak "sflsha.c is missing"
    fi
    if [ ! -f "sflslot.c" ]; then
        croak "sflslot.c is missing"
    fi
    if [ ! -f "sflsort.c" ]; then
        croak "sflsort.c is missing"
    fi
    if [ ! -f "sflstr.c" ]; then
        croak "sflstr.c is missing"
    fi
    if [ ! -f "sflsymb.c" ]; then
        croak "sflsymb.c is missing"
    fi
    if [ ! -f "sflsyst.c" ]; then
        croak "sflsyst.c is missing"
    fi
    if [ ! -f "sfltok.c" ]; then
        croak "sfltok.c is missing"
    fi
    if [ ! -f "sfltree.c" ]; then
        croak "sfltree.c is missing"
    fi
    if [ ! -f "sfltron.c" ]; then
        croak "sfltron.c is missing"
    fi
    if [ ! -f "sfluid.c" ]; then
        croak "sfluid.c is missing"
    fi
    if [ ! -f "sflxml.c" ]; then
        croak "sflxml.c is missing"
    fi
    if [ ! -f "sflxmll.c" ]; then
        croak "sflxmll.c is missing"
    fi
    if [ ! -f "sflxmls.c" ]; then
        croak "sflxmls.c is missing"
    fi
    if [ ! -f "sflsock.c" ]; then
        croak "sflsock.c is missing"
    fi
    if [ ! -f "sflcvbs.c" ]; then
        croak "sflcvbs.c is missing"
    fi
    if [ ! -f "sflcvdp.c" ]; then
        croak "sflcvdp.c is missing"
    fi
    if [ ! -f "sflcvds.c" ]; then
        croak "sflcvds.c is missing"
    fi
    if [ ! -f "sflcvns.c" ]; then
        croak "sflcvns.c is missing"
    fi
    if [ ! -f "sflcvsb.c" ]; then
        croak "sflcvsb.c is missing"
    fi
    if [ ! -f "sflcvsd.c" ]; then
        croak "sflcvsd.c is missing"
    fi
    if [ ! -f "sflcvsn.c" ]; then
        croak "sflcvsn.c is missing"
    fi
    if [ ! -f "sflcvst.c" ]; then
        croak "sflcvst.c is missing"
    fi
    if [ ! -f "sflcvtp.c" ]; then
        croak "sflcvtp.c is missing"
    fi
    if [ ! -f "sflcvts.c" ]; then
        croak "sflcvts.c is missing"
    fi
    if [ ! -f "sflscrit.c" ]; then
        croak "sflscrit.c is missing"
    fi
    if [ ! -f "sflproco.imp" ]; then
        croak "sflproco.imp is missing"
    fi
    if [ ! -f "sflprocu.imp" ]; then
        croak "sflprocu.imp is missing"
    fi
    if [ ! -f "sflprocv.imp" ]; then
        croak "sflprocv.imp is missing"
    fi
    if [ ! -f "sflprocw.imp" ]; then
        croak "sflprocw.imp is missing"
    fi
    if [ ! -f "sflprocx.h" ]; then
        croak "sflprocx.h is missing"
    fi
    if [ ! -f "sflprocx.imp" ]; then
        croak "sflprocx.imp is missing"
    fi
    if [ ! -f "testall.c" ]; then
        croak "testall.c is missing"
    fi
    if [ ! -f "testbits.c" ]; then
        croak "testbits.c is missing"
    fi
    if [ ! -f "testcgi.c" ]; then
        croak "testcgi.c is missing"
    fi
    if [ ! -f "testcomp.c" ]; then
        croak "testcomp.c is missing"
    fi
    if [ ! -f "testconv.c" ]; then
        croak "testconv.c is missing"
    fi
    if [ ! -f "testcryp.c" ]; then
        croak "testcryp.c is missing"
    fi
    if [ ! -f "testdate.c" ]; then
        croak "testdate.c is missing"
    fi
    if [ ! -f "testdir.c" ]; then
        croak "testdir.c is missing"
    fi
    if [ ! -f "testenv.c" ]; then
        croak "testenv.c is missing"
    fi
    if [ ! -f "testexdr.c" ]; then
        croak "testexdr.c is missing"
    fi
    if [ ! -f "testfile.c" ]; then
        croak "testfile.c is missing"
    fi
    if [ ! -f "testfind.c" ]; then
        croak "testfind.c is missing"
    fi
    if [ ! -f "testfort.c" ]; then
        croak "testfort.c is missing"
    fi
    if [ ! -f "testheap.c" ]; then
        croak "testheap.c is missing"
    fi
    if [ ! -f "testhttp.c" ]; then
        croak "testhttp.c is missing"
    fi
    if [ ! -f "testini.c" ]; then
        croak "testini.c is missing"
    fi
    if [ ! -f "testlang.c" ]; then
        croak "testlang.c is missing"
    fi
    if [ ! -f "testmem.c" ]; then
        croak "testmem.c is missing"
    fi
    if [ ! -f "testmime.c" ]; then
        croak "testmime.c is missing"
    fi
    if [ ! -f "testproc.c" ]; then
        croak "testproc.c is missing"
    fi
    if [ ! -f "teststr.c" ]; then
        croak "teststr.c is missing"
    fi
    if [ ! -f "testsym.c" ]; then
        croak "testsym.c is missing"
    fi
    if [ ! -f "testtok.c" ]; then
        croak "testtok.c is missing"
    fi
    if [ ! -f "testtree.c" ]; then
        croak "testtree.c is missing"
    fi
    if [ ! -f "testtron.c" ]; then
        croak "testtron.c is missing"
    fi
    if [ ! -f "testuid.c" ]; then
        croak "testuid.c is missing"
    fi
    if [ ! -f "testxml.c" ]; then
        croak "testxml.c is missing"
    fi
    if [ ! -f "testxmls.c" ]; then
        croak "testxmls.c is missing"
    fi
    if [ ! -f "testsearch.c" ]; then
        croak "testsearch.c is missing"
    fi
    if [ ! -f "testconv.dat" ]; then
        croak "testconv.dat is missing"
    fi
    if [ ! -f "testfort.txt" ]; then
        croak "testfort.txt is missing"
    fi
    if [ ! -f "dos2unix.c" ]; then
        croak "dos2unix.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "sflbits.h" ]; then
        croak "sflbits.h is missing"
    fi
    if [ ! -f "sflcomp.h" ]; then
        croak "sflcomp.h is missing"
    fi
    if [ ! -f "sflcons.h" ]; then
        croak "sflcons.h is missing"
    fi
    if [ ! -f "sflconv.h" ]; then
        croak "sflconv.h is missing"
    fi
    if [ ! -f "sflcryp.h" ]; then
        croak "sflcryp.h is missing"
    fi
    if [ ! -f "sfldate.h" ]; then
        croak "sfldate.h is missing"
    fi
    if [ ! -f "sfldescr.h" ]; then
        croak "sfldescr.h is missing"
    fi
    if [ ! -f "sfldir.h" ]; then
        croak "sfldir.h is missing"
    fi
    if [ ! -f "sflenv.h" ]; then
        croak "sflenv.h is missing"
    fi
    if [ ! -f "sflexdr.h" ]; then
        croak "sflexdr.h is missing"
    fi
    if [ ! -f "sflfile.h" ]; then
        croak "sflfile.h is missing"
    fi
    if [ ! -f "sflfind.h" ]; then
        croak "sflfind.h is missing"
    fi
    if [ ! -f "sflfort.h" ]; then
        croak "sflfort.h is missing"
    fi
    if [ ! -f "sflheap.h" ]; then
        croak "sflheap.h is missing"
    fi
    if [ ! -f "sflhttp.h" ]; then
        croak "sflhttp.h is missing"
    fi
    if [ ! -f "sflini.h" ]; then
        croak "sflini.h is missing"
    fi
    if [ ! -f "sfllang.h" ]; then
        croak "sfllang.h is missing"
    fi
    if [ ! -f "sfllbuf.h" ]; then
        croak "sfllbuf.h is missing"
    fi
    if [ ! -f "sfllist.h" ]; then
        croak "sfllist.h is missing"
    fi
    if [ ! -f "sflmail.h" ]; then
        croak "sflmail.h is missing"
    fi
    if [ ! -f "sflmath.h" ]; then
        croak "sflmath.h is missing"
    fi
    if [ ! -f "sflmem.h" ]; then
        croak "sflmem.h is missing"
    fi
    if [ ! -f "sflmesg.h" ]; then
        croak "sflmesg.h is missing"
    fi
    if [ ! -f "sflmime.h" ]; then
        croak "sflmime.h is missing"
    fi
    if [ ! -f "sflnode.h" ]; then
        croak "sflnode.h is missing"
    fi
    if [ ! -f "sflprint.h" ]; then
        croak "sflprint.h is missing"
    fi
    if [ ! -f "sflproc.h" ]; then
        croak "sflproc.h is missing"
    fi
    if [ ! -f "sflsearch.h" ]; then
        croak "sflsearch.h is missing"
    fi
    if [ ! -f "sflsha.h" ]; then
        croak "sflsha.h is missing"
    fi
    if [ ! -f "sflslot.h" ]; then
        croak "sflslot.h is missing"
    fi
    if [ ! -f "sflsort.h" ]; then
        croak "sflsort.h is missing"
    fi
    if [ ! -f "sflstr.h" ]; then
        croak "sflstr.h is missing"
    fi
    if [ ! -f "sflsymb.h" ]; then
        croak "sflsymb.h is missing"
    fi
    if [ ! -f "sflsyst.h" ]; then
        croak "sflsyst.h is missing"
    fi
    if [ ! -f "sfltok.h" ]; then
        croak "sfltok.h is missing"
    fi
    if [ ! -f "sfltree.h" ]; then
        croak "sfltree.h is missing"
    fi
    if [ ! -f "sfltron.h" ]; then
        croak "sfltron.h is missing"
    fi
    if [ ! -f "sfluid.h" ]; then
        croak "sfluid.h is missing"
    fi
    if [ ! -f "sflxml.h" ]; then
        croak "sflxml.h is missing"
    fi
    if [ ! -f "sflxmll.h" ]; then
        croak "sflxmll.h is missing"
    fi
    if [ ! -f "sflxmls.h" ]; then
        croak "sflxmls.h is missing"
    fi
    if [ ! -f "sflsock.h" ]; then
        croak "sflsock.h is missing"
    fi
    if [ ! -f "sflcvst.l" ]; then
        croak "sflcvst.l is missing"
    fi
    if [ ! -f "sflscrit.l" ]; then
        croak "sflscrit.l is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
}

# -----------------------   CHECK SOURCE FILES EXIST   ------------------------

a_check_source_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "prelude.h" ]; then
        croak "prelude.h is missing"
    fi
    if [ ! -f "sflhead.h" ]; then
        croak "sflhead.h is missing"
    fi
    if [ ! -f "sflbits.c" ]; then
        croak "sflbits.c is missing"
    fi
    if [ ! -f "sflcomp.c" ]; then
        croak "sflcomp.c is missing"
    fi
    if [ ! -f "sflcons.c" ]; then
        croak "sflcons.c is missing"
    fi
    if [ ! -f "sflconv.c" ]; then
        croak "sflconv.c is missing"
    fi
    if [ ! -f "sflcryp.c" ]; then
        croak "sflcryp.c is missing"
    fi
    if [ ! -f "sfldate.c" ]; then
        croak "sfldate.c is missing"
    fi
    if [ ! -f "sfldescr.c" ]; then
        croak "sfldescr.c is missing"
    fi
    if [ ! -f "sfldir.c" ]; then
        croak "sfldir.c is missing"
    fi
    if [ ! -f "sflenv.c" ]; then
        croak "sflenv.c is missing"
    fi
    if [ ! -f "sflexdr.c" ]; then
        croak "sflexdr.c is missing"
    fi
    if [ ! -f "sflfile.c" ]; then
        croak "sflfile.c is missing"
    fi
    if [ ! -f "sflfind.c" ]; then
        croak "sflfind.c is missing"
    fi
    if [ ! -f "sflfort.c" ]; then
        croak "sflfort.c is missing"
    fi
    if [ ! -f "sflheap.c" ]; then
        croak "sflheap.c is missing"
    fi
    if [ ! -f "sflhttp.c" ]; then
        croak "sflhttp.c is missing"
    fi
    if [ ! -f "sflini.c" ]; then
        croak "sflini.c is missing"
    fi
    if [ ! -f "sfllang.c" ]; then
        croak "sfllang.c is missing"
    fi
    if [ ! -f "sfllbuf.c" ]; then
        croak "sfllbuf.c is missing"
    fi
    if [ ! -f "sfllist.c" ]; then
        croak "sfllist.c is missing"
    fi
    if [ ! -f "sflmail.c" ]; then
        croak "sflmail.c is missing"
    fi
    if [ ! -f "sflmath.c" ]; then
        croak "sflmath.c is missing"
    fi
    if [ ! -f "sflmem.c" ]; then
        croak "sflmem.c is missing"
    fi
    if [ ! -f "sflmesg.c" ]; then
        croak "sflmesg.c is missing"
    fi
    if [ ! -f "sflmime.c" ]; then
        croak "sflmime.c is missing"
    fi
    if [ ! -f "sflnode.c" ]; then
        croak "sflnode.c is missing"
    fi
    if [ ! -f "sflprint.c" ]; then
        croak "sflprint.c is missing"
    fi
    if [ ! -f "sflproc.c" ]; then
        croak "sflproc.c is missing"
    fi
    if [ ! -f "sflsearch.c" ]; then
        croak "sflsearch.c is missing"
    fi
    if [ ! -f "sflsha.c" ]; then
        croak "sflsha.c is missing"
    fi
    if [ ! -f "sflslot.c" ]; then
        croak "sflslot.c is missing"
    fi
    if [ ! -f "sflsort.c" ]; then
        croak "sflsort.c is missing"
    fi
    if [ ! -f "sflstr.c" ]; then
        croak "sflstr.c is missing"
    fi
    if [ ! -f "sflsymb.c" ]; then
        croak "sflsymb.c is missing"
    fi
    if [ ! -f "sflsyst.c" ]; then
        croak "sflsyst.c is missing"
    fi
    if [ ! -f "sfltok.c" ]; then
        croak "sfltok.c is missing"
    fi
    if [ ! -f "sfltree.c" ]; then
        croak "sfltree.c is missing"
    fi
    if [ ! -f "sfltron.c" ]; then
        croak "sfltron.c is missing"
    fi
    if [ ! -f "sfluid.c" ]; then
        croak "sfluid.c is missing"
    fi
    if [ ! -f "sflxml.c" ]; then
        croak "sflxml.c is missing"
    fi
    if [ ! -f "sflxmll.c" ]; then
        croak "sflxmll.c is missing"
    fi
    if [ ! -f "sflxmls.c" ]; then
        croak "sflxmls.c is missing"
    fi
    if [ ! -f "sflsock.c" ]; then
        croak "sflsock.c is missing"
    fi
    if [ ! -f "sflcvbs.c" ]; then
        croak "sflcvbs.c is missing"
    fi
    if [ ! -f "sflcvdp.c" ]; then
        croak "sflcvdp.c is missing"
    fi
    if [ ! -f "sflcvds.c" ]; then
        croak "sflcvds.c is missing"
    fi
    if [ ! -f "sflcvns.c" ]; then
        croak "sflcvns.c is missing"
    fi
    if [ ! -f "sflcvsb.c" ]; then
        croak "sflcvsb.c is missing"
    fi
    if [ ! -f "sflcvsd.c" ]; then
        croak "sflcvsd.c is missing"
    fi
    if [ ! -f "sflcvsn.c" ]; then
        croak "sflcvsn.c is missing"
    fi
    if [ ! -f "sflcvst.c" ]; then
        croak "sflcvst.c is missing"
    fi
    if [ ! -f "sflcvtp.c" ]; then
        croak "sflcvtp.c is missing"
    fi
    if [ ! -f "sflcvts.c" ]; then
        croak "sflcvts.c is missing"
    fi
    if [ ! -f "sflscrit.c" ]; then
        croak "sflscrit.c is missing"
    fi
    if [ ! -f "sflproco.imp" ]; then
        croak "sflproco.imp is missing"
    fi
    if [ ! -f "sflprocu.imp" ]; then
        croak "sflprocu.imp is missing"
    fi
    if [ ! -f "sflprocv.imp" ]; then
        croak "sflprocv.imp is missing"
    fi
    if [ ! -f "sflprocw.imp" ]; then
        croak "sflprocw.imp is missing"
    fi
    if [ ! -f "sflprocx.h" ]; then
        croak "sflprocx.h is missing"
    fi
    if [ ! -f "sflprocx.imp" ]; then
        croak "sflprocx.imp is missing"
    fi
    if [ ! -f "testall.c" ]; then
        croak "testall.c is missing"
    fi
    if [ ! -f "testbits.c" ]; then
        croak "testbits.c is missing"
    fi
    if [ ! -f "testcgi.c" ]; then
        croak "testcgi.c is missing"
    fi
    if [ ! -f "testcomp.c" ]; then
        croak "testcomp.c is missing"
    fi
    if [ ! -f "testconv.c" ]; then
        croak "testconv.c is missing"
    fi
    if [ ! -f "testcryp.c" ]; then
        croak "testcryp.c is missing"
    fi
    if [ ! -f "testdate.c" ]; then
        croak "testdate.c is missing"
    fi
    if [ ! -f "testdir.c" ]; then
        croak "testdir.c is missing"
    fi
    if [ ! -f "testenv.c" ]; then
        croak "testenv.c is missing"
    fi
    if [ ! -f "testexdr.c" ]; then
        croak "testexdr.c is missing"
    fi
    if [ ! -f "testfile.c" ]; then
        croak "testfile.c is missing"
    fi
    if [ ! -f "testfind.c" ]; then
        croak "testfind.c is missing"
    fi
    if [ ! -f "testfort.c" ]; then
        croak "testfort.c is missing"
    fi
    if [ ! -f "testheap.c" ]; then
        croak "testheap.c is missing"
    fi
    if [ ! -f "testhttp.c" ]; then
        croak "testhttp.c is missing"
    fi
    if [ ! -f "testini.c" ]; then
        croak "testini.c is missing"
    fi
    if [ ! -f "testlang.c" ]; then
        croak "testlang.c is missing"
    fi
    if [ ! -f "testmem.c" ]; then
        croak "testmem.c is missing"
    fi
    if [ ! -f "testmime.c" ]; then
        croak "testmime.c is missing"
    fi
    if [ ! -f "testproc.c" ]; then
        croak "testproc.c is missing"
    fi
    if [ ! -f "teststr.c" ]; then
        croak "teststr.c is missing"
    fi
    if [ ! -f "testsym.c" ]; then
        croak "testsym.c is missing"
    fi
    if [ ! -f "testtok.c" ]; then
        croak "testtok.c is missing"
    fi
    if [ ! -f "testtree.c" ]; then
        croak "testtree.c is missing"
    fi
    if [ ! -f "testtron.c" ]; then
        croak "testtron.c is missing"
    fi
    if [ ! -f "testuid.c" ]; then
        croak "testuid.c is missing"
    fi
    if [ ! -f "testxml.c" ]; then
        croak "testxml.c is missing"
    fi
    if [ ! -f "testxmls.c" ]; then
        croak "testxmls.c is missing"
    fi
    if [ ! -f "testsearch.c" ]; then
        croak "testsearch.c is missing"
    fi
    if [ ! -f "testconv.dat" ]; then
        croak "testconv.dat is missing"
    fi
    if [ ! -f "testfort.txt" ]; then
        croak "testfort.txt is missing"
    fi
    if [ ! -f "dos2unix.c" ]; then
        croak "dos2unix.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "sflbits.h" ]; then
        croak "sflbits.h is missing"
    fi
    if [ ! -f "sflcomp.h" ]; then
        croak "sflcomp.h is missing"
    fi
    if [ ! -f "sflcons.h" ]; then
        croak "sflcons.h is missing"
    fi
    if [ ! -f "sflconv.h" ]; then
        croak "sflconv.h is missing"
    fi
    if [ ! -f "sflcryp.h" ]; then
        croak "sflcryp.h is missing"
    fi
    if [ ! -f "sfldate.h" ]; then
        croak "sfldate.h is missing"
    fi
    if [ ! -f "sfldescr.h" ]; then
        croak "sfldescr.h is missing"
    fi
    if [ ! -f "sfldir.h" ]; then
        croak "sfldir.h is missing"
    fi
    if [ ! -f "sflenv.h" ]; then
        croak "sflenv.h is missing"
    fi
    if [ ! -f "sflexdr.h" ]; then
        croak "sflexdr.h is missing"
    fi
    if [ ! -f "sflfile.h" ]; then
        croak "sflfile.h is missing"
    fi
    if [ ! -f "sflfind.h" ]; then
        croak "sflfind.h is missing"
    fi
    if [ ! -f "sflfort.h" ]; then
        croak "sflfort.h is missing"
    fi
    if [ ! -f "sflheap.h" ]; then
        croak "sflheap.h is missing"
    fi
    if [ ! -f "sflhttp.h" ]; then
        croak "sflhttp.h is missing"
    fi
    if [ ! -f "sflini.h" ]; then
        croak "sflini.h is missing"
    fi
    if [ ! -f "sfllang.h" ]; then
        croak "sfllang.h is missing"
    fi
    if [ ! -f "sfllbuf.h" ]; then
        croak "sfllbuf.h is missing"
    fi
    if [ ! -f "sfllist.h" ]; then
        croak "sfllist.h is missing"
    fi
    if [ ! -f "sflmail.h" ]; then
        croak "sflmail.h is missing"
    fi
    if [ ! -f "sflmath.h" ]; then
        croak "sflmath.h is missing"
    fi
    if [ ! -f "sflmem.h" ]; then
        croak "sflmem.h is missing"
    fi
    if [ ! -f "sflmesg.h" ]; then
        croak "sflmesg.h is missing"
    fi
    if [ ! -f "sflmime.h" ]; then
        croak "sflmime.h is missing"
    fi
    if [ ! -f "sflnode.h" ]; then
        croak "sflnode.h is missing"
    fi
    if [ ! -f "sflprint.h" ]; then
        croak "sflprint.h is missing"
    fi
    if [ ! -f "sflproc.h" ]; then
        croak "sflproc.h is missing"
    fi
    if [ ! -f "sflsearch.h" ]; then
        croak "sflsearch.h is missing"
    fi
    if [ ! -f "sflsha.h" ]; then
        croak "sflsha.h is missing"
    fi
    if [ ! -f "sflslot.h" ]; then
        croak "sflslot.h is missing"
    fi
    if [ ! -f "sflsort.h" ]; then
        croak "sflsort.h is missing"
    fi
    if [ ! -f "sflstr.h" ]; then
        croak "sflstr.h is missing"
    fi
    if [ ! -f "sflsymb.h" ]; then
        croak "sflsymb.h is missing"
    fi
    if [ ! -f "sflsyst.h" ]; then
        croak "sflsyst.h is missing"
    fi
    if [ ! -f "sfltok.h" ]; then
        croak "sfltok.h is missing"
    fi
    if [ ! -f "sfltree.h" ]; then
        croak "sfltree.h is missing"
    fi
    if [ ! -f "sfltron.h" ]; then
        croak "sfltron.h is missing"
    fi
    if [ ! -f "sfluid.h" ]; then
        croak "sfluid.h is missing"
    fi
    if [ ! -f "sflxml.h" ]; then
        croak "sflxml.h is missing"
    fi
    if [ ! -f "sflxmll.h" ]; then
        croak "sflxmll.h is missing"
    fi
    if [ ! -f "sflxmls.h" ]; then
        croak "sflxmls.h is missing"
    fi
    if [ ! -f "sflsock.h" ]; then
        croak "sflsock.h is missing"
    fi
    if [ ! -f "sflcvst.l" ]; then
        croak "sflcvst.l is missing"
    fi
    if [ ! -f "sflcvst.i" ]; then
        croak "sflcvst.i is missing"
    fi
    if [ ! -f "sflcvst.d" ]; then
        croak "sflcvst.d is missing"
    fi
    if [ ! -f "sflscrit.l" ]; then
        croak "sflscrit.l is missing"
    fi
    if [ ! -f "sflscrit.i" ]; then
        croak "sflscrit.i is missing"
    fi
    if [ ! -f "sflscrit.d" ]; then
        croak "sflscrit.d is missing"
    fi
    if [ ! -f "sfl.h" ]; then
        croak "sfl.h is missing"
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
}

# -------------------------   INSTALL DELIVERABLES   --------------------------

a_install_deliverables() {
:
    carp "Installing SFL into $_INSTALL_ROOT..."
    if [ ! -d "$_INSTALL_ROOT" ]; then
        if mkdir -p $_INSTALL_ROOT; then
            :
        else
            croak "Could not create directory \"$_INSTALL_ROOT\""
        fi
    fi
    mkdir -p $_INSTALL_ROOT/lib/
    [ "$BOOM_TRACE" ] && echo "cp libsfl.a $_INSTALL_ROOT/lib/"
    cp libsfl.a $_INSTALL_ROOT/lib/ || croak "\"cp libsfl.a $_INSTALL_ROOT/lib/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/lib/libsfl.a"
    chmod 0644 $_INSTALL_ROOT/lib/libsfl.a || croak "\"chmod 0644 $_INSTALL_ROOT/lib/libsfl.a\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp dos2unix $_INSTALL_ROOT/bin/"
    cp dos2unix $_INSTALL_ROOT/bin/ || croak "\"cp dos2unix $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0755 $_INSTALL_ROOT/bin/dos2unix"
    chmod 0755 $_INSTALL_ROOT/bin/dos2unix || croak "\"chmod 0755 $_INSTALL_ROOT/bin/dos2unix\" failed"
    mkdir -p $_INSTALL_ROOT/doc/SFL/
    [ "$BOOM_TRACE" ] && echo "cp readme.txt $_INSTALL_ROOT/doc/SFL/"
    cp readme.txt $_INSTALL_ROOT/doc/SFL/ || croak "\"cp readme.txt $_INSTALL_ROOT/doc/SFL/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/doc/SFL/readme.txt"
    chmod 0644 $_INSTALL_ROOT/doc/SFL/readme.txt || croak "\"chmod 0644 $_INSTALL_ROOT/doc/SFL/readme.txt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp sfl.h $_INSTALL_ROOT/include/"
    cp sfl.h $_INSTALL_ROOT/include/ || croak "\"cp sfl.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/sfl.h"
    chmod 0644 $_INSTALL_ROOT/include/sfl.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/sfl.h\" failed"
    if [ -f ./installer ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./installer"
    sh ./installer || croak "\"sh ./installer\" failed"
    fi
}

# ----------------------   PRODUCE ALL GENERATED FILES   ----------------------

a_produce_all_generated_files() {
:
    carp "Generating files..."
    rm -f sfl.h
    [ "$BOOM_TRACE" ] && echo "cat sflhead.h>>sfl.h"
    cat sflhead.h>>sfl.h || croak "\"cat sflhead.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat prelude.h>>sfl.h"
    cat prelude.h>>sfl.h || croak "\"cat prelude.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflbits.h>>sfl.h"
    cat sflbits.h>>sfl.h || croak "\"cat sflbits.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflcomp.h>>sfl.h"
    cat sflcomp.h>>sfl.h || croak "\"cat sflcomp.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflcons.h>>sfl.h"
    cat sflcons.h>>sfl.h || croak "\"cat sflcons.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflconv.h>>sfl.h"
    cat sflconv.h>>sfl.h || croak "\"cat sflconv.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflcryp.h>>sfl.h"
    cat sflcryp.h>>sfl.h || croak "\"cat sflcryp.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfldate.h>>sfl.h"
    cat sfldate.h>>sfl.h || croak "\"cat sfldate.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfldescr.h>>sfl.h"
    cat sfldescr.h>>sfl.h || croak "\"cat sfldescr.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflexdr.h>>sfl.h"
    cat sflexdr.h>>sfl.h || croak "\"cat sflexdr.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflfile.h>>sfl.h"
    cat sflfile.h>>sfl.h || croak "\"cat sflfile.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflfind.h>>sfl.h"
    cat sflfind.h>>sfl.h || croak "\"cat sflfind.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflfort.h>>sfl.h"
    cat sflfort.h>>sfl.h || croak "\"cat sflfort.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflheap.h>>sfl.h"
    cat sflheap.h>>sfl.h || croak "\"cat sflheap.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfllang.h>>sfl.h"
    cat sfllang.h>>sfl.h || croak "\"cat sfllang.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfllbuf.h>>sfl.h"
    cat sfllbuf.h>>sfl.h || croak "\"cat sfllbuf.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfllist.h>>sfl.h"
    cat sfllist.h>>sfl.h || croak "\"cat sfllist.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflnode.h>>sfl.h"
    cat sflnode.h>>sfl.h || croak "\"cat sflnode.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmath.h>>sfl.h"
    cat sflmath.h>>sfl.h || croak "\"cat sflmath.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmem.h>>sfl.h"
    cat sflmem.h>>sfl.h || croak "\"cat sflmem.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmesg.h>>sfl.h"
    cat sflmesg.h>>sfl.h || croak "\"cat sflmesg.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmime.h>>sfl.h"
    cat sflmime.h>>sfl.h || croak "\"cat sflmime.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflnode.h>>sfl.h"
    cat sflnode.h>>sfl.h || croak "\"cat sflnode.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfldir.h>>sfl.h"
    cat sfldir.h>>sfl.h || croak "\"cat sfldir.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflslot.h>>sfl.h"
    cat sflslot.h>>sfl.h || croak "\"cat sflslot.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsock.h>>sfl.h"
    cat sflsock.h>>sfl.h || croak "\"cat sflsock.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmail.h>>sfl.h"
    cat sflmail.h>>sfl.h || croak "\"cat sflmail.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsort.h>>sfl.h"
    cat sflsort.h>>sfl.h || croak "\"cat sflsort.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsha.h>>sfl.h"
    cat sflsha.h>>sfl.h || croak "\"cat sflsha.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflstr.h>>sfl.h"
    cat sflstr.h>>sfl.h || croak "\"cat sflstr.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsymb.h>>sfl.h"
    cat sflsymb.h>>sfl.h || croak "\"cat sflsymb.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflproc.h>>sfl.h"
    cat sflproc.h>>sfl.h || croak "\"cat sflproc.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflprint.h>>sfl.h"
    cat sflprint.h>>sfl.h || croak "\"cat sflprint.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsyst.h>>sfl.h"
    cat sflsyst.h>>sfl.h || croak "\"cat sflsyst.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsearch.h>>sfl.h"
    cat sflsearch.h>>sfl.h || croak "\"cat sflsearch.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflhttp.h>>sfl.h"
    cat sflhttp.h>>sfl.h || croak "\"cat sflhttp.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflini.h>>sfl.h"
    cat sflini.h>>sfl.h || croak "\"cat sflini.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflenv.h>>sfl.h"
    cat sflenv.h>>sfl.h || croak "\"cat sflenv.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfltok.h>>sfl.h"
    cat sfltok.h>>sfl.h || croak "\"cat sfltok.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfltree.h>>sfl.h"
    cat sfltree.h>>sfl.h || croak "\"cat sfltree.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfltron.h>>sfl.h"
    cat sfltron.h>>sfl.h || croak "\"cat sfltron.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfluid.h>>sfl.h"
    cat sfluid.h>>sfl.h || croak "\"cat sfluid.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflxml.h>>sfl.h"
    cat sflxml.h>>sfl.h || croak "\"cat sflxml.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflxmll.h>>sfl.h"
    cat sflxmll.h>>sfl.h || croak "\"cat sflxmll.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflxmls.h>>sfl.h"
    cat sflxmls.h>>sfl.h || croak "\"cat sflxmls.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sflcvst.l"
    lr -quiet sflcvst.l || croak "\"lr -quiet sflcvst.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sflscrit.l"
    lr -quiet sflscrit.l || croak "\"lr -quiet sflscrit.l\" failed"
    echo "Source files successfully generated">stamp_generate
}

# ------------------------   PRODUCE GENERATED FILES   ------------------------

a_produce_generated_files() {
:
    carp "Generating files..."
    rm -f sfl.h
    [ "$BOOM_TRACE" ] && echo "cat sflhead.h>>sfl.h"
    cat sflhead.h>>sfl.h || croak "\"cat sflhead.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat prelude.h>>sfl.h"
    cat prelude.h>>sfl.h || croak "\"cat prelude.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflbits.h>>sfl.h"
    cat sflbits.h>>sfl.h || croak "\"cat sflbits.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflcomp.h>>sfl.h"
    cat sflcomp.h>>sfl.h || croak "\"cat sflcomp.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflcons.h>>sfl.h"
    cat sflcons.h>>sfl.h || croak "\"cat sflcons.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflconv.h>>sfl.h"
    cat sflconv.h>>sfl.h || croak "\"cat sflconv.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflcryp.h>>sfl.h"
    cat sflcryp.h>>sfl.h || croak "\"cat sflcryp.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfldate.h>>sfl.h"
    cat sfldate.h>>sfl.h || croak "\"cat sfldate.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfldescr.h>>sfl.h"
    cat sfldescr.h>>sfl.h || croak "\"cat sfldescr.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflexdr.h>>sfl.h"
    cat sflexdr.h>>sfl.h || croak "\"cat sflexdr.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflfile.h>>sfl.h"
    cat sflfile.h>>sfl.h || croak "\"cat sflfile.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflfind.h>>sfl.h"
    cat sflfind.h>>sfl.h || croak "\"cat sflfind.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflfort.h>>sfl.h"
    cat sflfort.h>>sfl.h || croak "\"cat sflfort.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflheap.h>>sfl.h"
    cat sflheap.h>>sfl.h || croak "\"cat sflheap.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfllang.h>>sfl.h"
    cat sfllang.h>>sfl.h || croak "\"cat sfllang.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfllbuf.h>>sfl.h"
    cat sfllbuf.h>>sfl.h || croak "\"cat sfllbuf.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfllist.h>>sfl.h"
    cat sfllist.h>>sfl.h || croak "\"cat sfllist.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflnode.h>>sfl.h"
    cat sflnode.h>>sfl.h || croak "\"cat sflnode.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmath.h>>sfl.h"
    cat sflmath.h>>sfl.h || croak "\"cat sflmath.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmem.h>>sfl.h"
    cat sflmem.h>>sfl.h || croak "\"cat sflmem.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmesg.h>>sfl.h"
    cat sflmesg.h>>sfl.h || croak "\"cat sflmesg.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmime.h>>sfl.h"
    cat sflmime.h>>sfl.h || croak "\"cat sflmime.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflnode.h>>sfl.h"
    cat sflnode.h>>sfl.h || croak "\"cat sflnode.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfldir.h>>sfl.h"
    cat sfldir.h>>sfl.h || croak "\"cat sfldir.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflslot.h>>sfl.h"
    cat sflslot.h>>sfl.h || croak "\"cat sflslot.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsock.h>>sfl.h"
    cat sflsock.h>>sfl.h || croak "\"cat sflsock.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflmail.h>>sfl.h"
    cat sflmail.h>>sfl.h || croak "\"cat sflmail.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsort.h>>sfl.h"
    cat sflsort.h>>sfl.h || croak "\"cat sflsort.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsha.h>>sfl.h"
    cat sflsha.h>>sfl.h || croak "\"cat sflsha.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflstr.h>>sfl.h"
    cat sflstr.h>>sfl.h || croak "\"cat sflstr.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsymb.h>>sfl.h"
    cat sflsymb.h>>sfl.h || croak "\"cat sflsymb.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflproc.h>>sfl.h"
    cat sflproc.h>>sfl.h || croak "\"cat sflproc.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflprint.h>>sfl.h"
    cat sflprint.h>>sfl.h || croak "\"cat sflprint.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsyst.h>>sfl.h"
    cat sflsyst.h>>sfl.h || croak "\"cat sflsyst.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflsearch.h>>sfl.h"
    cat sflsearch.h>>sfl.h || croak "\"cat sflsearch.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflhttp.h>>sfl.h"
    cat sflhttp.h>>sfl.h || croak "\"cat sflhttp.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflini.h>>sfl.h"
    cat sflini.h>>sfl.h || croak "\"cat sflini.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflenv.h>>sfl.h"
    cat sflenv.h>>sfl.h || croak "\"cat sflenv.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfltok.h>>sfl.h"
    cat sfltok.h>>sfl.h || croak "\"cat sfltok.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfltree.h>>sfl.h"
    cat sfltree.h>>sfl.h || croak "\"cat sfltree.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfltron.h>>sfl.h"
    cat sfltron.h>>sfl.h || croak "\"cat sfltron.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sfluid.h>>sfl.h"
    cat sfluid.h>>sfl.h || croak "\"cat sfluid.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflxml.h>>sfl.h"
    cat sflxml.h>>sfl.h || croak "\"cat sflxml.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflxmll.h>>sfl.h"
    cat sflxmll.h>>sfl.h || croak "\"cat sflxmll.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat sflxmls.h>>sfl.h"
    cat sflxmls.h>>sfl.h || croak "\"cat sflxmls.h>>sfl.h\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sflcvst.l"
    lr -quiet sflcvst.l || croak "\"lr -quiet sflcvst.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sflscrit.l"
    lr -quiet sflscrit.l || croak "\"lr -quiet sflscrit.l\" failed"
    echo "Source files successfully generated">stamp_generate
}

# -----------------------   REMOVE GENERATED BINARIES   -----------------------

a_remove_generated_binaries() {
:
    rm -f libsfl.a
    rm -f dos2unix
    rm -f sflbits.o
    rm -f sflcomp.o
    rm -f sflcons.o
    rm -f sflconv.o
    rm -f sflcryp.o
    rm -f sfldate.o
    rm -f sfldescr.o
    rm -f sfldir.o
    rm -f sflenv.o
    rm -f sflexdr.o
    rm -f sflfile.o
    rm -f sflfind.o
    rm -f sflfort.o
    rm -f sflheap.o
    rm -f sflhttp.o
    rm -f sflini.o
    rm -f sfllang.o
    rm -f sfllbuf.o
    rm -f sfllist.o
    rm -f sflmail.o
    rm -f sflmath.o
    rm -f sflmem.o
    rm -f sflmesg.o
    rm -f sflmime.o
    rm -f sflnode.o
    rm -f sflprint.o
    rm -f sflproc.o
    rm -f sflsearch.o
    rm -f sflsha.o
    rm -f sflslot.o
    rm -f sflsort.o
    rm -f sflstr.o
    rm -f sflsymb.o
    rm -f sflsyst.o
    rm -f sfltok.o
    rm -f sfltree.o
    rm -f sfltron.o
    rm -f sfluid.o
    rm -f sflxml.o
    rm -f sflxmll.o
    rm -f sflxmls.o
    rm -f sflsock.o
    rm -f sflcvbs.o
    rm -f sflcvdp.o
    rm -f sflcvds.o
    rm -f sflcvns.o
    rm -f sflcvsb.o
    rm -f sflcvsd.o
    rm -f sflcvsn.o
    rm -f sflcvst.o
    rm -f sflcvtp.o
    rm -f sflcvts.o
    rm -f sflscrit.o
    rm -f testall.o
    rm -f testall
    rm -f testbits.o
    rm -f testbits
    rm -f testcgi.o
    rm -f testcgi
    rm -f testcomp.o
    rm -f testcomp
    rm -f testconv.o
    rm -f testconv
    rm -f testcryp.o
    rm -f testcryp
    rm -f testdate.o
    rm -f testdate
    rm -f testdir.o
    rm -f testdir
    rm -f testenv.o
    rm -f testenv
    rm -f testexdr.o
    rm -f testexdr
    rm -f testfile.o
    rm -f testfile
    rm -f testfind.o
    rm -f testfind
    rm -f testfort.o
    rm -f testfort
    rm -f testheap.o
    rm -f testheap
    rm -f testhttp.o
    rm -f testhttp
    rm -f testini.o
    rm -f testini
    rm -f testlang.o
    rm -f testlang
    rm -f testmem.o
    rm -f testmem
    rm -f testmime.o
    rm -f testmime
    rm -f testproc.o
    rm -f testproc
    rm -f teststr.o
    rm -f teststr
    rm -f testsym.o
    rm -f testsym
    rm -f testtok.o
    rm -f testtok
    rm -f testtree.o
    rm -f testtree
    rm -f testtron.o
    rm -f testtron
    rm -f testuid.o
    rm -f testuid
    rm -f testxml.o
    rm -f testxml
    rm -f testxmls.o
    rm -f testxmls
    rm -f testsearch.o
    rm -f testsearch
    rm -f dos2unix.o
    rm -f dos2unix
    #   Remove byproducts of typical work
    rm -f core* 
}

# -----------------------   REMOVE GENERATED SOURCES   ------------------------

a_remove_generated_sources() {
:
    rm -f sflcvst.i
    rm -f sflcvst.d
    rm -f sflscrit.i
    rm -f sflscrit.d
    rm -f sfl.h
    rm -f stamp_generate
    rm -f sfl_*.zip
    rm -f sfl_*.tar.gz
}

# ------------------------   REPORT HELP INFORMATION   ------------------------

a_report_help_information() {
:
    echo "The commands you can currently use on this project are:"
    echo ""
    eval "actions_$state"
}

# ------------------------   REPORT PROJECT VERSION   -------------------------

a_report_project_version() {
:
    echo "sfl-3.31"
}

# -------------------------   RUN REGRESSION TESTS   --------------------------

a_run_regression_tests() {
:
    #   Run local selftest script if present
    if [ -f ./selftest ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./selftest"
    sh ./selftest || croak "\"sh ./selftest\" failed"
    fi
}

# ----------------------   USE SOURCE CONTROL REVISION   ----------------------

a_use_source_control_revision() {
:
    if [ -d .svn ]; then
        SVN_REVISION="`svn info | awk '/^Revision:/ { print $2 }'`"
    else
        SVN_REVISION="svn"
    fi
    MY_VERSION=${MY_VERSION}-${SVN_REVISION}
}

actions_initial() {
    return
}

actions_initial_check() {
    return
}

actions_repository() {
echo "build:"
    echo "  From the raw project sources, produces all generated files, and"
    echo "    compiles all source files."
echo "compile:"
    echo "  From the raw project sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the raw project sources, removes all generated"
    echo "    source and binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
echo "distrib:"
    echo "  Creates a source distribution for the project.  Note that binary"
    echo "    distributions can only be created at the product level."
echo "distsrc:"
    echo "  Equivalent to distrib, provided for compatibility."
echo "distrev:"
    echo "  Creates a source distribution for the project.  Builds distribution"
    echo "    packages based on source control version number. Note that binary"
    echo "    distributions can only be created at the product level."
actions_default
    return
}

actions_source() {
echo "build:"
    echo "  From the packaged sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
actions_default
    return
}

actions_stripped() {
echo "build:"
    echo "  From the stripped-down packaged sources, compiles all source files"
    echo "    without any code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
actions_default
    return
}

actions_default() {
echo "install:"
    echo "  Installs deliverables into the final or temporary install tree."
    echo "    This action is only valid after a successful build."
echo "test:"
    echo "  Runs regression tests for the project."
echo "help:"
    echo "  Shows a list of the commands allowed on the project."
echo "version:"
    echo "  Show project version."
    return
}

#   State machine starts here
#
firsttime=true
while [ "$1" -o "$firsttime" ]; do
  firsttime=
  state=initial
  event=ok
  debug=
  export state event debug
  while [ -n "$state" ]; do
    if [ "$inherit_state" ]; then
        check_state=$inherit_state
        inherit_state=
    else
        check_state=$state
    fi
    case "$check_state" in
    initial)
        if [ -n "$debug" ]; then
            echo "State: initial"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        ok)
            if [ -n "$debug" ]; then
                echo "Event: ok"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check operating context"
            fi
            if [ -z "$exception" ]; then
                a_check_operating_context
            fi
            state=initial_check
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    initial_check)
        if [ -n "$debug" ]; then
            echo "State: initial check"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        repository)
            if [ -n "$debug" ]; then
                echo "Event: repository"
            fi
            event=
            exception=
            state=repository
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        source)
            if [ -n "$debug" ]; then
                echo "Event: source"
            fi
            event=
            exception=
            state=source
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        stripped)
            if [ -n "$debug" ]; then
                echo "Event: stripped"
            fi
            event=
            exception=
            state=stripped
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    repository)
        if [ -n "$debug" ]; then
            echo "State: repository"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        compile)
            if [ -n "$debug" ]; then
                echo "Event: compile"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated sources"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_sources
            fi
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrib)
            if [ -n "$debug" ]; then
                echo "Event: distrib"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distsrc)
            if [ -n "$debug" ]; then
                echo "Event: distsrc"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrev)
            if [ -n "$debug" ]; then
                echo "Event: distrev"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: use source control revision"
            fi
            if [ -z "$exception" ]; then
                a_use_source_control_revision
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    source)
        if [ -n "$debug" ]; then
            echo "State: source"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    stripped)
        if [ -n "$debug" ]; then
            echo "State: stripped"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    default)
        if [ -n "$debug" ]; then
            echo "State: default"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        install)
            if [ -n "$debug" ]; then
                echo "Event: install"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: install deliverables"
            fi
            if [ -z "$exception" ]; then
                a_install_deliverables
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        test)
            if [ -n "$debug" ]; then
                echo "Event: test"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: run regression tests"
            fi
            if [ -z "$exception" ]; then
                a_run_regression_tests
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        help)
            if [ -n "$debug" ]; then
                echo "Event: help"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        version)
            if [ -n "$debug" ]; then
                echo "Event: version"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report project version"
            fi
            if [ -z "$exception" ]; then
                a_report_project_version
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        empty)
            if [ -n "$debug" ]; then
                echo "Event: empty"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    esac
  done
done
