#
#   Copyright (c) 2007 iMatix Corporation
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or (at
#   your option) any later version.
# 
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
# 
#   For information on alternative licensing for OEMs, please contact
#   iMatix Corporation.
#

#   This script extracts the console schema by walking the OpenAMQ
#   class definitions, starting with amq_broker.
#
#   <data>
#     <class name = "" label = "">
#       <field name = "" label = "" type = "string | int | bool | time">
#         <get>copy into field_value</get>
#         <put>copy from field_value</put>
#       </field>
#       <class name = "" label = "" [source = ""] [repeat = "1"]>
#         <local></local>
#         <get>copy id into field_value</get>
#         <next>get next id into field_value</next>
#       </class>
#       <method>
#         <exec>...</exec>
#       </method>
#     </class>
#  </data>

schema_name = "openamq.org/kernel"
schema_version = "0.3"

#   Formatting
shuffle = 0
indent  = "   "
ignorecase = 0

function process_field (field, margin)
    >$(my.margin)<field name = "$(name)"\
    if defined (my.field.label)
        > label = "$(label)"\
    endif
    if defined (my.field.type)
        > type = "$(type)"\
    endif
    if defined (my.field.repeat)
        > repeat = "$(repeat)"\
    endif
    if count (my.field.get) = 0
        echo "W: write-only field $(name) - not recommended usage"
        > inspect = "0"\
    endif
    if count (my.field.put)
        > modify = "1"\
    endif
    > />
    for values
        echo "Field values are not supported yet"
    endfor
endfunction

function process_method (method, margin)
    >$(my.margin)<method name = "$(name)" label = "$(label?name)">
    for field
        >$(my.margin)<field name = "$(name)"\
        if defined (field.label)
            > label = "$(label)"\
        endif
        if defined (field.type)
            > type = "$(type)"\
        endif
        > />
    endfor
    >$(my.margin)</method>
endfunction

function process_class (class_name, margin)
    xml from "$(my.class_name).icl"
    for ->class.data where name = "cml"
        for class
            for class as child
                child.source ?= "amq_" + name
            endfor
            copy class to root
            >$(my.margin)<class name = "$(name)" label = "$(label?name)">
            if count (field, name = "name") = 0
                echo "E: please define a 'name' field in the $(class.name) class"
            endif
            for field
                process_field (field, my.margin + indent)
            endfor
            for class
                class.type = "objref"
                process_field (class, my.margin + indent)
            endfor
            for method
                process_method (method, my.margin + indent)
            endfor
            >$(my.margin)</class>
            for class as child
                if count (root.class, count.name = child.name, count) = 0
                    process_class (child.source, my.margin)
                endif
            endfor
        endfor
    endfor
    delete ->class
endfunction

output "amq_console_schema.cml"
><?xml version="1.0"?>
><cml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
> xsi:schemaLocation="http://www.openamq.org/schema/cml cml.xsd"
> xmlns="http://www.openamq.org/schema/cml"
> version="1.0">
><schema-reply name = "$(schema_name)" version = "$(schema_version)" status = "ok">
process_class ("amq_broker", indent)
></schema-reply>
></cml>

#   Save XML tree for further code generation processes
save root as "amq_console_schema.xml"
