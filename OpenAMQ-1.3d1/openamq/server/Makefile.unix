#
#   Makefile for OpenAMQ Server
#
#   Generated by iMatix Boom
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   All rights reserved.
#   
#   This file is licensed under the BSD license as follows:
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of iMatix Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#   Default values for object, library, and executable extensions.
#
OBJ = .o
LIB = .a
EXE =
CC  = c -q

#   Reset the suffixes that will be considered to just our own list.
#
#   Make programs use the .SUFFIXES psuedo rule for this

.SUFFIXES:
.SUFFIXES: $(EXE) $(LIB) $(OBJ) .c .d .i .l

#   Objects depend on source files with the same name; and are compiled
#   with the iMatix c script without any arguments.
#
.c$(OBJ):
	$(CC) $<
#   And .c files _do_not_ depend on .l files (.l files are Libero files,
#   not lex input files as the default rules think).
#
#   The semicolon forces make to accept the rule as an override.
#
.l.c: ;

#
#   Default rule -- all depends on everything.
#   We do this so that we can define the rule at the end.
#
all: everything
#
#   The following targets are not files. Mark them as such.
#
.PHONY: all generate everything install regen clean
#
#   Dependencies
#
libamq_server$(LIB): amq_server_config$(OBJ) amq_server_agent$(OBJ) amq_server_classes$(OBJ) amq_server_connection$(OBJ) amq_server_connection_table$(OBJ) amq_server_connection_list$(OBJ) amq_server_channel$(OBJ) amq_server_channel_agent$(OBJ) amq_server_channel_table$(OBJ) amq_server_resource$(OBJ) amq_broker$(OBJ) amq_broker_agent$(OBJ) amq_peering$(OBJ) amq_peering_agent$(OBJ) amq_peer_method$(OBJ) amq_peer_config$(OBJ) amq_peer_agent$(OBJ) amq_vhost$(OBJ) amq_vhost_agent$(OBJ) amq_vhost_config$(OBJ) amq_exchange$(OBJ) amq_exchange_table$(OBJ) amq_exchange_by_vhost$(OBJ) amq_exchange_agent$(OBJ) amq_exchange_system$(OBJ) amq_exchange_fanout$(OBJ) amq_exchange_direct$(OBJ) amq_exchange_topic$(OBJ) amq_exchange_headers$(OBJ) amq_binding$(OBJ) amq_binding_list$(OBJ) amq_queue_bindings_list$(OBJ) amq_queue_bindings_list_table$(OBJ) amq_binding_mgt$(OBJ) amq_binding_mgt_agent$(OBJ) amq_hitset$(OBJ) amq_index$(OBJ) amq_index_hash$(OBJ) amq_index_array$(OBJ) amq_queue$(OBJ) amq_queue_table$(OBJ) amq_queue_by_vhost$(OBJ) amq_queue_list$(OBJ) amq_queue_agent$(OBJ) amq_queue_basic$(OBJ) amq_connection$(OBJ) amq_connection_agent$(OBJ) amq_connection_by_broker$(OBJ) amq_consumer$(OBJ) amq_consumer_table$(OBJ) amq_consumer_by_queue$(OBJ) amq_consumer_by_channel$(OBJ) amq_consumer_basic$(OBJ) amq_queue_connection$(OBJ) amq_queue_connection_agent$(OBJ) amq_connection_queue$(OBJ) amq_connection_queue_agent$(OBJ) amq_server_method$(OBJ) amq_federation$(OBJ) amq_federation_agent$(OBJ) amq_failover$(OBJ) amq_failover_agent$(OBJ) amq_lease$(OBJ) amq_lease_table$(OBJ) amq_console$(OBJ) amq_console_agent$(OBJ) amq_console_class$(OBJ) amq_console_config$(OBJ) amq_console_config_agent$(OBJ) amq_cml$(OBJ) 
	$(CC) -r libamq_server$(LIB) amq_server_config$(OBJ) amq_server_agent$(OBJ) amq_server_classes$(OBJ) amq_server_connection$(OBJ) amq_server_connection_table$(OBJ) amq_server_connection_list$(OBJ) amq_server_channel$(OBJ) amq_server_channel_agent$(OBJ) amq_server_channel_table$(OBJ) amq_server_resource$(OBJ) amq_broker$(OBJ) amq_broker_agent$(OBJ) amq_peering$(OBJ) amq_peering_agent$(OBJ) amq_peer_method$(OBJ) amq_peer_config$(OBJ) amq_peer_agent$(OBJ) amq_vhost$(OBJ) amq_vhost_agent$(OBJ) amq_vhost_config$(OBJ) amq_exchange$(OBJ) amq_exchange_table$(OBJ) amq_exchange_by_vhost$(OBJ) amq_exchange_agent$(OBJ) amq_exchange_system$(OBJ) amq_exchange_fanout$(OBJ) amq_exchange_direct$(OBJ) amq_exchange_topic$(OBJ) amq_exchange_headers$(OBJ) amq_binding$(OBJ) amq_binding_list$(OBJ) amq_queue_bindings_list$(OBJ) amq_queue_bindings_list_table$(OBJ) amq_binding_mgt$(OBJ) amq_binding_mgt_agent$(OBJ) amq_hitset$(OBJ) amq_index$(OBJ) amq_index_hash$(OBJ) amq_index_array$(OBJ) amq_queue$(OBJ) amq_queue_table$(OBJ) amq_queue_by_vhost$(OBJ) amq_queue_list$(OBJ) amq_queue_agent$(OBJ) amq_queue_basic$(OBJ) amq_connection$(OBJ) amq_connection_agent$(OBJ) amq_connection_by_broker$(OBJ) amq_consumer$(OBJ) amq_consumer_table$(OBJ) amq_consumer_by_queue$(OBJ) amq_consumer_by_channel$(OBJ) amq_consumer_basic$(OBJ) amq_queue_connection$(OBJ) amq_queue_connection_agent$(OBJ) amq_connection_queue$(OBJ) amq_connection_queue_agent$(OBJ) amq_server_method$(OBJ) amq_federation$(OBJ) amq_federation_agent$(OBJ) amq_failover$(OBJ) amq_failover_agent$(OBJ) amq_lease$(OBJ) amq_lease_table$(OBJ) amq_console$(OBJ) amq_console_agent$(OBJ) amq_console_class$(OBJ) amq_console_config$(OBJ) amq_console_config_agent$(OBJ) amq_cml$(OBJ) 
amq_server$(OBJ): amq_server.c amq_server_main.inc version.h amq_server_classes.h amq_binding.h amq_binding_list.h amq_binding_mgt.h amq_binding_mgt_agent.h amq_broker.h amq_server_agent.h amq_lease.h amq_lease_table.h amq_server_method.h amq_broker_agent.h amq_cml.h amq_console.h amq_console_agent.h amq_console_class.h amq_console_config.h amq_console_config_agent.h amq_consumer.h amq_consumer_table.h amq_consumer_by_queue.h amq_consumer_by_channel.h amq_consumer_basic.h amq_connection.h amq_connection_by_broker.h amq_connection_agent.h amq_connection_queue.h amq_connection_queue_agent.h amq_exchange.h amq_queue_bindings_list_table.h amq_queue_bindings_list.h amq_exchange_table.h amq_exchange_by_vhost.h amq_exchange_agent.h amq_exchange_direct.h amq_exchange_topic.h amq_exchange_headers.h amq_exchange_fanout.h amq_exchange_system.h amq_failover.h amq_failover_agent.h amq_federation.h amq_federation_agent.h amq_hitset.h amq_index_hash.h amq_index.h amq_index_array.h amq_queue.h amq_queue_table.h amq_queue_by_vhost.h amq_queue_agent.h amq_queue_basic.h amq_queue_list.h amq_queue_connection.h amq_queue_connection_agent.h amq_peer_agent.h amq_peer_method.h amq_peer_config.h amq_peering.h amq_peering_agent.h amq_server_channel.h amq_server_channel_table.h amq_server_channel_agent.h amq_server_config.h amq_server_connection.h amq_server_connection_table.h amq_server_connection_list.h amq_server_resource.h amq_vhost.h amq_vhost_agent.h amq_vhost_config.h
amq_server$(EXE): amq_server$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server
amq_server_config_test$(OBJ): amq_server_config_test.c
amq_server_config_test$(EXE): amq_server_config_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_config_test
amq_server_config_test.c: amq_server_config.icl
	gsl -q -quiet:1 amq_server_config.icl
amq_server_config.h: amq_server_config.icl
	gsl -q -quiet:1 amq_server_config.icl
amq_server_config$(OBJ): amq_server_config.c
amq_server_config.c: amq_server_config.icl
	gsl -q -quiet:1 amq_server_config.icl
amq_server_agent.h: amq_server_agent.smt
	gsl -q -quiet:1 amq_server_agent.smt
amq_server_agent$(OBJ): amq_server_agent.c
amq_server_agent.c: amq_server_agent.smt
	gsl -q -quiet:1 amq_server_agent.smt
amq_server_classes.h: amq_server_classes.icl
	gsl -q -quiet:1 amq_server_classes.icl
amq_server_classes$(OBJ): amq_server_classes.c
amq_server_classes.c: amq_server_classes.icl
	gsl -q -quiet:1 amq_server_classes.icl
amq_server_connection_test$(OBJ): amq_server_connection_test.c
amq_server_connection_test$(EXE): amq_server_connection_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_connection_test
amq_server_connection_test.c: amq_server_connection.icl
	gsl -q -quiet:1 amq_server_connection.icl
amq_server_connection.h: amq_server_connection.icl
	gsl -q -quiet:1 amq_server_connection.icl
amq_server_connection$(OBJ): amq_server_connection.c
amq_server_connection.c: amq_server_connection.icl
	gsl -q -quiet:1 amq_server_connection.icl
amq_server_connection_table_test$(OBJ): amq_server_connection_table_test.c
amq_server_connection_table_test$(EXE): amq_server_connection_table_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_connection_table_test
amq_server_connection_table_test.c: amq_server_connection_table.icl
	gsl -q -quiet:1 amq_server_connection_table.icl
amq_server_connection_table.h: amq_server_connection_table.icl
	gsl -q -quiet:1 amq_server_connection_table.icl
amq_server_connection_table$(OBJ): amq_server_connection_table.c
amq_server_connection_table.c: amq_server_connection_table.icl
	gsl -q -quiet:1 amq_server_connection_table.icl
amq_server_connection_list_test$(OBJ): amq_server_connection_list_test.c
amq_server_connection_list_test$(EXE): amq_server_connection_list_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_connection_list_test
amq_server_connection_list_test.c: amq_server_connection_list.icl
	gsl -q -quiet:1 amq_server_connection_list.icl
amq_server_connection_list.h: amq_server_connection_list.icl
	gsl -q -quiet:1 amq_server_connection_list.icl
amq_server_connection_list$(OBJ): amq_server_connection_list.c
amq_server_connection_list.c: amq_server_connection_list.icl
	gsl -q -quiet:1 amq_server_connection_list.icl
amq_server_channel_test$(OBJ): amq_server_channel_test.c
amq_server_channel_test$(EXE): amq_server_channel_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_channel_test
amq_server_channel_test.c: amq_server_channel.icl
	gsl -q -quiet:1 amq_server_channel.icl
amq_server_channel.h: amq_server_channel.icl
	gsl -q -quiet:1 amq_server_channel.icl
amq_server_channel$(OBJ): amq_server_channel.c
amq_server_channel.c: amq_server_channel.icl
	gsl -q -quiet:1 amq_server_channel.icl
amq_server_channel_agent.h: amq_server_channel_agent.smt
	gsl -q -quiet:1 amq_server_channel_agent.smt
amq_server_channel_agent$(OBJ): amq_server_channel_agent.c
amq_server_channel_agent.c: amq_server_channel_agent.smt
	gsl -q -quiet:1 amq_server_channel_agent.smt
amq_server_channel_table_test$(OBJ): amq_server_channel_table_test.c
amq_server_channel_table_test$(EXE): amq_server_channel_table_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_channel_table_test
amq_server_channel_table_test.c: amq_server_channel_table.icl
	gsl -q -quiet:1 amq_server_channel_table.icl
amq_server_channel_table.h: amq_server_channel_table.icl
	gsl -q -quiet:1 amq_server_channel_table.icl
amq_server_channel_table$(OBJ): amq_server_channel_table.c
amq_server_channel_table.c: amq_server_channel_table.icl
	gsl -q -quiet:1 amq_server_channel_table.icl
amq_server_resource_test$(OBJ): amq_server_resource_test.c
amq_server_resource_test$(EXE): amq_server_resource_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_resource_test
amq_server_resource_test.c: amq_server_resource.icl
	gsl -q -quiet:1 amq_server_resource.icl
amq_server_resource.h: amq_server_resource.icl
	gsl -q -quiet:1 amq_server_resource.icl
amq_server_resource$(OBJ): amq_server_resource.c
amq_server_resource.c: amq_server_resource.icl
	gsl -q -quiet:1 amq_server_resource.icl
amq_broker_test$(OBJ): amq_broker_test.c
amq_broker_test$(EXE): amq_broker_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_broker_test
amq_broker_test.c: amq_broker.icl
	gsl -q -quiet:1 amq_broker.icl
amq_broker.h: amq_broker.icl
	gsl -q -quiet:1 amq_broker.icl
amq_broker$(OBJ): amq_broker.c
amq_broker.c: amq_broker.icl
	gsl -q -quiet:1 amq_broker.icl
amq_broker_agent.h: amq_broker_agent.smt
	gsl -q -quiet:1 amq_broker_agent.smt
amq_broker_agent$(OBJ): amq_broker_agent.c
amq_broker_agent.c: amq_broker_agent.smt
	gsl -q -quiet:1 amq_broker_agent.smt
amq_peering_test$(OBJ): amq_peering_test.c
amq_peering_test$(EXE): amq_peering_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_peering_test
amq_peering_test.c: amq_peering.icl
	gsl -q -quiet:1 amq_peering.icl
amq_peering.h: amq_peering.icl
	gsl -q -quiet:1 amq_peering.icl
amq_peering$(OBJ): amq_peering.c
amq_peering.c: amq_peering.icl
	gsl -q -quiet:1 amq_peering.icl
amq_peering_agent.h: amq_peering_agent.smt
	gsl -q -quiet:1 amq_peering_agent.smt
amq_peering_agent$(OBJ): amq_peering_agent.c
amq_peering_agent.c: amq_peering_agent.smt
	gsl -q -quiet:1 amq_peering_agent.smt
amq_peer_method_test$(OBJ): amq_peer_method_test.c
amq_peer_method_test$(EXE): amq_peer_method_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_peer_method_test
amq_peer_method_test.c: amq_peer_method.icl
	gsl -q -quiet:1 amq_peer_method.icl
amq_peer_method.h: amq_peer_method.icl
	gsl -q -quiet:1 amq_peer_method.icl
amq_peer_method$(OBJ): amq_peer_method.c
amq_peer_method.c: amq_peer_method.icl
	gsl -q -quiet:1 amq_peer_method.icl
amq_peer_config_test$(OBJ): amq_peer_config_test.c
amq_peer_config_test$(EXE): amq_peer_config_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_peer_config_test
amq_peer_config_test.c: amq_peer_config.icl
	gsl -q -quiet:1 amq_peer_config.icl
amq_peer_config.h: amq_peer_config.icl
	gsl -q -quiet:1 amq_peer_config.icl
amq_peer_config$(OBJ): amq_peer_config.c
amq_peer_config.c: amq_peer_config.icl
	gsl -q -quiet:1 amq_peer_config.icl
amq_peer_agent.h: amq_peer_agent.smt
	gsl -q -quiet:1 amq_peer_agent.smt
amq_peer_agent$(OBJ): amq_peer_agent.c
amq_peer_agent.c: amq_peer_agent.smt
	gsl -q -quiet:1 amq_peer_agent.smt
amq_vhost_test$(OBJ): amq_vhost_test.c
amq_vhost_test$(EXE): amq_vhost_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_vhost_test
amq_vhost_test.c: amq_vhost.icl
	gsl -q -quiet:1 amq_vhost.icl
amq_vhost.h: amq_vhost.icl
	gsl -q -quiet:1 amq_vhost.icl
amq_vhost$(OBJ): amq_vhost.c
amq_vhost.c: amq_vhost.icl
	gsl -q -quiet:1 amq_vhost.icl
amq_vhost_agent.h: amq_vhost_agent.smt
	gsl -q -quiet:1 amq_vhost_agent.smt
amq_vhost_agent$(OBJ): amq_vhost_agent.c
amq_vhost_agent.c: amq_vhost_agent.smt
	gsl -q -quiet:1 amq_vhost_agent.smt
amq_vhost_config_test$(OBJ): amq_vhost_config_test.c
amq_vhost_config_test$(EXE): amq_vhost_config_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_vhost_config_test
amq_vhost_config_test.c: amq_vhost_config.icl
	gsl -q -quiet:1 amq_vhost_config.icl
amq_vhost_config.h: amq_vhost_config.icl
	gsl -q -quiet:1 amq_vhost_config.icl
amq_vhost_config$(OBJ): amq_vhost_config.c
amq_vhost_config.c: amq_vhost_config.icl
	gsl -q -quiet:1 amq_vhost_config.icl
amq_exchange_test$(OBJ): amq_exchange_test.c
amq_exchange_test$(EXE): amq_exchange_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_test
amq_exchange_test.c: amq_exchange.icl
	gsl -q -quiet:1 amq_exchange.icl
amq_exchange.h: amq_exchange.icl
	gsl -q -quiet:1 amq_exchange.icl
amq_exchange$(OBJ): amq_exchange.c
amq_exchange.c: amq_exchange.icl
	gsl -q -quiet:1 amq_exchange.icl
amq_exchange_table_test$(OBJ): amq_exchange_table_test.c
amq_exchange_table_test$(EXE): amq_exchange_table_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_table_test
amq_exchange_table_test.c: amq_exchange_table.icl
	gsl -q -quiet:1 amq_exchange_table.icl
amq_exchange_table.h: amq_exchange_table.icl
	gsl -q -quiet:1 amq_exchange_table.icl
amq_exchange_table$(OBJ): amq_exchange_table.c
amq_exchange_table.c: amq_exchange_table.icl
	gsl -q -quiet:1 amq_exchange_table.icl
amq_exchange_by_vhost_test$(OBJ): amq_exchange_by_vhost_test.c
amq_exchange_by_vhost_test$(EXE): amq_exchange_by_vhost_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_by_vhost_test
amq_exchange_by_vhost_test.c: amq_exchange_by_vhost.icl
	gsl -q -quiet:1 amq_exchange_by_vhost.icl
amq_exchange_by_vhost.h: amq_exchange_by_vhost.icl
	gsl -q -quiet:1 amq_exchange_by_vhost.icl
amq_exchange_by_vhost$(OBJ): amq_exchange_by_vhost.c
amq_exchange_by_vhost.c: amq_exchange_by_vhost.icl
	gsl -q -quiet:1 amq_exchange_by_vhost.icl
amq_exchange_agent.h: amq_exchange_agent.smt
	gsl -q -quiet:1 amq_exchange_agent.smt
amq_exchange_agent$(OBJ): amq_exchange_agent.c
amq_exchange_agent.c: amq_exchange_agent.smt
	gsl -q -quiet:1 amq_exchange_agent.smt
amq_exchange_system_test$(OBJ): amq_exchange_system_test.c
amq_exchange_system_test$(EXE): amq_exchange_system_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_system_test
amq_exchange_system_test.c: amq_exchange_system.icl
	gsl -q -quiet:1 amq_exchange_system.icl
amq_exchange_system.h: amq_exchange_system.icl
	gsl -q -quiet:1 amq_exchange_system.icl
amq_exchange_system$(OBJ): amq_exchange_system.c
amq_exchange_system.c: amq_exchange_system.icl
	gsl -q -quiet:1 amq_exchange_system.icl
amq_exchange_fanout_test$(OBJ): amq_exchange_fanout_test.c
amq_exchange_fanout_test$(EXE): amq_exchange_fanout_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_fanout_test
amq_exchange_fanout_test.c: amq_exchange_fanout.icl
	gsl -q -quiet:1 amq_exchange_fanout.icl
amq_exchange_fanout.h: amq_exchange_fanout.icl
	gsl -q -quiet:1 amq_exchange_fanout.icl
amq_exchange_fanout$(OBJ): amq_exchange_fanout.c
amq_exchange_fanout.c: amq_exchange_fanout.icl
	gsl -q -quiet:1 amq_exchange_fanout.icl
amq_exchange_direct_test$(OBJ): amq_exchange_direct_test.c
amq_exchange_direct_test$(EXE): amq_exchange_direct_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_direct_test
amq_exchange_direct_test.c: amq_exchange_direct.icl
	gsl -q -quiet:1 amq_exchange_direct.icl
amq_exchange_direct.h: amq_exchange_direct.icl
	gsl -q -quiet:1 amq_exchange_direct.icl
amq_exchange_direct$(OBJ): amq_exchange_direct.c
amq_exchange_direct.c: amq_exchange_direct.icl
	gsl -q -quiet:1 amq_exchange_direct.icl
amq_exchange_topic_test$(OBJ): amq_exchange_topic_test.c
amq_exchange_topic_test$(EXE): amq_exchange_topic_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_topic_test
amq_exchange_topic_test.c: amq_exchange_topic.icl
	gsl -q -quiet:1 amq_exchange_topic.icl
amq_exchange_topic.h: amq_exchange_topic.icl
	gsl -q -quiet:1 amq_exchange_topic.icl
amq_exchange_topic$(OBJ): amq_exchange_topic.c
amq_exchange_topic.c: amq_exchange_topic.icl
	gsl -q -quiet:1 amq_exchange_topic.icl
amq_exchange_headers_test$(OBJ): amq_exchange_headers_test.c
amq_exchange_headers_test$(EXE): amq_exchange_headers_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_exchange_headers_test
amq_exchange_headers_test.c: amq_exchange_headers.icl
	gsl -q -quiet:1 amq_exchange_headers.icl
amq_exchange_headers.h: amq_exchange_headers.icl
	gsl -q -quiet:1 amq_exchange_headers.icl
amq_exchange_headers$(OBJ): amq_exchange_headers.c
amq_exchange_headers.c: amq_exchange_headers.icl
	gsl -q -quiet:1 amq_exchange_headers.icl
amq_binding_test$(OBJ): amq_binding_test.c
amq_binding_test$(EXE): amq_binding_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_binding_test
amq_binding_test.c: amq_binding.icl
	gsl -q -quiet:1 amq_binding.icl
amq_binding.h: amq_binding.icl
	gsl -q -quiet:1 amq_binding.icl
amq_binding$(OBJ): amq_binding.c
amq_binding.c: amq_binding.icl
	gsl -q -quiet:1 amq_binding.icl
amq_binding_list_test$(OBJ): amq_binding_list_test.c
amq_binding_list_test$(EXE): amq_binding_list_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_binding_list_test
amq_binding_list_test.c: amq_binding_list.icl
	gsl -q -quiet:1 amq_binding_list.icl
amq_binding_list.h: amq_binding_list.icl
	gsl -q -quiet:1 amq_binding_list.icl
amq_binding_list$(OBJ): amq_binding_list.c
amq_binding_list.c: amq_binding_list.icl
	gsl -q -quiet:1 amq_binding_list.icl
amq_queue_bindings_list_test$(OBJ): amq_queue_bindings_list_test.c
amq_queue_bindings_list_test$(EXE): amq_queue_bindings_list_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_bindings_list_test
amq_queue_bindings_list_test.c: amq_queue_bindings_list.icl
	gsl -q -quiet:1 amq_queue_bindings_list.icl
amq_queue_bindings_list.h: amq_queue_bindings_list.icl
	gsl -q -quiet:1 amq_queue_bindings_list.icl
amq_queue_bindings_list$(OBJ): amq_queue_bindings_list.c
amq_queue_bindings_list.c: amq_queue_bindings_list.icl
	gsl -q -quiet:1 amq_queue_bindings_list.icl
amq_queue_bindings_list_table_test$(OBJ): amq_queue_bindings_list_table_test.c
amq_queue_bindings_list_table_test$(EXE): amq_queue_bindings_list_table_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_bindings_list_table_test
amq_queue_bindings_list_table_test.c: amq_queue_bindings_list_table.icl
	gsl -q -quiet:1 amq_queue_bindings_list_table.icl
amq_queue_bindings_list_table.h: amq_queue_bindings_list_table.icl
	gsl -q -quiet:1 amq_queue_bindings_list_table.icl
amq_queue_bindings_list_table$(OBJ): amq_queue_bindings_list_table.c
amq_queue_bindings_list_table.c: amq_queue_bindings_list_table.icl
	gsl -q -quiet:1 amq_queue_bindings_list_table.icl
amq_binding_mgt_test$(OBJ): amq_binding_mgt_test.c
amq_binding_mgt_test$(EXE): amq_binding_mgt_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_binding_mgt_test
amq_binding_mgt_test.c: amq_binding_mgt.icl
	gsl -q -quiet:1 amq_binding_mgt.icl
amq_binding_mgt.h: amq_binding_mgt.icl
	gsl -q -quiet:1 amq_binding_mgt.icl
amq_binding_mgt$(OBJ): amq_binding_mgt.c
amq_binding_mgt.c: amq_binding_mgt.icl
	gsl -q -quiet:1 amq_binding_mgt.icl
amq_binding_mgt_agent.h: amq_binding_mgt_agent.smt
	gsl -q -quiet:1 amq_binding_mgt_agent.smt
amq_binding_mgt_agent$(OBJ): amq_binding_mgt_agent.c
amq_binding_mgt_agent.c: amq_binding_mgt_agent.smt
	gsl -q -quiet:1 amq_binding_mgt_agent.smt
amq_hitset_test$(OBJ): amq_hitset_test.c
amq_hitset_test$(EXE): amq_hitset_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_hitset_test
amq_hitset_test.c: amq_hitset.icl
	gsl -q -quiet:1 amq_hitset.icl
amq_hitset.h: amq_hitset.icl
	gsl -q -quiet:1 amq_hitset.icl
amq_hitset$(OBJ): amq_hitset.c
amq_hitset.c: amq_hitset.icl
	gsl -q -quiet:1 amq_hitset.icl
amq_index_test$(OBJ): amq_index_test.c
amq_index_test$(EXE): amq_index_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_index_test
amq_index_test.c: amq_index.icl
	gsl -q -quiet:1 amq_index.icl
amq_index.h: amq_index.icl
	gsl -q -quiet:1 amq_index.icl
amq_index$(OBJ): amq_index.c
amq_index.c: amq_index.icl
	gsl -q -quiet:1 amq_index.icl
amq_index_hash_test$(OBJ): amq_index_hash_test.c
amq_index_hash_test$(EXE): amq_index_hash_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_index_hash_test
amq_index_hash_test.c: amq_index_hash.icl
	gsl -q -quiet:1 amq_index_hash.icl
amq_index_hash.h: amq_index_hash.icl
	gsl -q -quiet:1 amq_index_hash.icl
amq_index_hash$(OBJ): amq_index_hash.c
amq_index_hash.c: amq_index_hash.icl
	gsl -q -quiet:1 amq_index_hash.icl
amq_index_array_test$(OBJ): amq_index_array_test.c
amq_index_array_test$(EXE): amq_index_array_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_index_array_test
amq_index_array_test.c: amq_index_array.icl
	gsl -q -quiet:1 amq_index_array.icl
amq_index_array.h: amq_index_array.icl
	gsl -q -quiet:1 amq_index_array.icl
amq_index_array$(OBJ): amq_index_array.c
amq_index_array.c: amq_index_array.icl
	gsl -q -quiet:1 amq_index_array.icl
amq_queue_test$(OBJ): amq_queue_test.c
amq_queue_test$(EXE): amq_queue_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_test
amq_queue_test.c: amq_queue.icl
	gsl -q -quiet:1 amq_queue.icl
amq_queue.h: amq_queue.icl
	gsl -q -quiet:1 amq_queue.icl
amq_queue$(OBJ): amq_queue.c
amq_queue.c: amq_queue.icl
	gsl -q -quiet:1 amq_queue.icl
amq_queue_table_test$(OBJ): amq_queue_table_test.c
amq_queue_table_test$(EXE): amq_queue_table_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_table_test
amq_queue_table_test.c: amq_queue_table.icl
	gsl -q -quiet:1 amq_queue_table.icl
amq_queue_table.h: amq_queue_table.icl
	gsl -q -quiet:1 amq_queue_table.icl
amq_queue_table$(OBJ): amq_queue_table.c
amq_queue_table.c: amq_queue_table.icl
	gsl -q -quiet:1 amq_queue_table.icl
amq_queue_by_vhost_test$(OBJ): amq_queue_by_vhost_test.c
amq_queue_by_vhost_test$(EXE): amq_queue_by_vhost_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_by_vhost_test
amq_queue_by_vhost_test.c: amq_queue_by_vhost.icl
	gsl -q -quiet:1 amq_queue_by_vhost.icl
amq_queue_by_vhost.h: amq_queue_by_vhost.icl
	gsl -q -quiet:1 amq_queue_by_vhost.icl
amq_queue_by_vhost$(OBJ): amq_queue_by_vhost.c
amq_queue_by_vhost.c: amq_queue_by_vhost.icl
	gsl -q -quiet:1 amq_queue_by_vhost.icl
amq_queue_list_test$(OBJ): amq_queue_list_test.c
amq_queue_list_test$(EXE): amq_queue_list_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_list_test
amq_queue_list_test.c: amq_queue_list.icl
	gsl -q -quiet:1 amq_queue_list.icl
amq_queue_list.h: amq_queue_list.icl
	gsl -q -quiet:1 amq_queue_list.icl
amq_queue_list$(OBJ): amq_queue_list.c
amq_queue_list.c: amq_queue_list.icl
	gsl -q -quiet:1 amq_queue_list.icl
amq_queue_agent.h: amq_queue_agent.smt
	gsl -q -quiet:1 amq_queue_agent.smt
amq_queue_agent$(OBJ): amq_queue_agent.c
amq_queue_agent.c: amq_queue_agent.smt
	gsl -q -quiet:1 amq_queue_agent.smt
amq_queue_basic_test$(OBJ): amq_queue_basic_test.c
amq_queue_basic_test$(EXE): amq_queue_basic_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_basic_test
amq_queue_basic_test.c: amq_queue_basic.icl
	gsl -q -quiet:1 amq_queue_basic.icl
amq_queue_basic.h: amq_queue_basic.icl
	gsl -q -quiet:1 amq_queue_basic.icl
amq_queue_basic$(OBJ): amq_queue_basic.c
amq_queue_basic.c: amq_queue_basic.icl
	gsl -q -quiet:1 amq_queue_basic.icl
amq_connection_test$(OBJ): amq_connection_test.c
amq_connection_test$(EXE): amq_connection_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_connection_test
amq_connection_test.c: amq_connection.icl
	gsl -q -quiet:1 amq_connection.icl
amq_connection.h: amq_connection.icl
	gsl -q -quiet:1 amq_connection.icl
amq_connection$(OBJ): amq_connection.c
amq_connection.c: amq_connection.icl
	gsl -q -quiet:1 amq_connection.icl
amq_connection_agent.h: amq_connection_agent.smt
	gsl -q -quiet:1 amq_connection_agent.smt
amq_connection_agent$(OBJ): amq_connection_agent.c
amq_connection_agent.c: amq_connection_agent.smt
	gsl -q -quiet:1 amq_connection_agent.smt
amq_connection_by_broker_test$(OBJ): amq_connection_by_broker_test.c
amq_connection_by_broker_test$(EXE): amq_connection_by_broker_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_connection_by_broker_test
amq_connection_by_broker_test.c: amq_connection_by_broker.icl
	gsl -q -quiet:1 amq_connection_by_broker.icl
amq_connection_by_broker.h: amq_connection_by_broker.icl
	gsl -q -quiet:1 amq_connection_by_broker.icl
amq_connection_by_broker$(OBJ): amq_connection_by_broker.c
amq_connection_by_broker.c: amq_connection_by_broker.icl
	gsl -q -quiet:1 amq_connection_by_broker.icl
amq_consumer_test$(OBJ): amq_consumer_test.c
amq_consumer_test$(EXE): amq_consumer_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_consumer_test
amq_consumer_test.c: amq_consumer.icl
	gsl -q -quiet:1 amq_consumer.icl
amq_consumer.h: amq_consumer.icl
	gsl -q -quiet:1 amq_consumer.icl
amq_consumer$(OBJ): amq_consumer.c
amq_consumer.c: amq_consumer.icl
	gsl -q -quiet:1 amq_consumer.icl
amq_consumer_table_test$(OBJ): amq_consumer_table_test.c
amq_consumer_table_test$(EXE): amq_consumer_table_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_consumer_table_test
amq_consumer_table_test.c: amq_consumer_table.icl
	gsl -q -quiet:1 amq_consumer_table.icl
amq_consumer_table.h: amq_consumer_table.icl
	gsl -q -quiet:1 amq_consumer_table.icl
amq_consumer_table$(OBJ): amq_consumer_table.c
amq_consumer_table.c: amq_consumer_table.icl
	gsl -q -quiet:1 amq_consumer_table.icl
amq_consumer_by_queue_test$(OBJ): amq_consumer_by_queue_test.c
amq_consumer_by_queue_test$(EXE): amq_consumer_by_queue_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_consumer_by_queue_test
amq_consumer_by_queue_test.c: amq_consumer_by_queue.icl
	gsl -q -quiet:1 amq_consumer_by_queue.icl
amq_consumer_by_queue.h: amq_consumer_by_queue.icl
	gsl -q -quiet:1 amq_consumer_by_queue.icl
amq_consumer_by_queue$(OBJ): amq_consumer_by_queue.c
amq_consumer_by_queue.c: amq_consumer_by_queue.icl
	gsl -q -quiet:1 amq_consumer_by_queue.icl
amq_consumer_by_channel_test$(OBJ): amq_consumer_by_channel_test.c
amq_consumer_by_channel_test$(EXE): amq_consumer_by_channel_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_consumer_by_channel_test
amq_consumer_by_channel_test.c: amq_consumer_by_channel.icl
	gsl -q -quiet:1 amq_consumer_by_channel.icl
amq_consumer_by_channel.h: amq_consumer_by_channel.icl
	gsl -q -quiet:1 amq_consumer_by_channel.icl
amq_consumer_by_channel$(OBJ): amq_consumer_by_channel.c
amq_consumer_by_channel.c: amq_consumer_by_channel.icl
	gsl -q -quiet:1 amq_consumer_by_channel.icl
amq_consumer_basic_test$(OBJ): amq_consumer_basic_test.c
amq_consumer_basic_test$(EXE): amq_consumer_basic_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_consumer_basic_test
amq_consumer_basic_test.c: amq_consumer_basic.icl
	gsl -q -quiet:1 amq_consumer_basic.icl
amq_consumer_basic.h: amq_consumer_basic.icl
	gsl -q -quiet:1 amq_consumer_basic.icl
amq_consumer_basic$(OBJ): amq_consumer_basic.c
amq_consumer_basic.c: amq_consumer_basic.icl
	gsl -q -quiet:1 amq_consumer_basic.icl
amq_queue_connection_test$(OBJ): amq_queue_connection_test.c
amq_queue_connection_test$(EXE): amq_queue_connection_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_queue_connection_test
amq_queue_connection_test.c: amq_queue_connection.icl
	gsl -q -quiet:1 amq_queue_connection.icl
amq_queue_connection.h: amq_queue_connection.icl
	gsl -q -quiet:1 amq_queue_connection.icl
amq_queue_connection$(OBJ): amq_queue_connection.c
amq_queue_connection.c: amq_queue_connection.icl
	gsl -q -quiet:1 amq_queue_connection.icl
amq_queue_connection_agent.h: amq_queue_connection_agent.smt
	gsl -q -quiet:1 amq_queue_connection_agent.smt
amq_queue_connection_agent$(OBJ): amq_queue_connection_agent.c
amq_queue_connection_agent.c: amq_queue_connection_agent.smt
	gsl -q -quiet:1 amq_queue_connection_agent.smt
amq_connection_queue_test$(OBJ): amq_connection_queue_test.c
amq_connection_queue_test$(EXE): amq_connection_queue_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_connection_queue_test
amq_connection_queue_test.c: amq_connection_queue.icl
	gsl -q -quiet:1 amq_connection_queue.icl
amq_connection_queue.h: amq_connection_queue.icl
	gsl -q -quiet:1 amq_connection_queue.icl
amq_connection_queue$(OBJ): amq_connection_queue.c
amq_connection_queue.c: amq_connection_queue.icl
	gsl -q -quiet:1 amq_connection_queue.icl
amq_connection_queue_agent.h: amq_connection_queue_agent.smt
	gsl -q -quiet:1 amq_connection_queue_agent.smt
amq_connection_queue_agent$(OBJ): amq_connection_queue_agent.c
amq_connection_queue_agent.c: amq_connection_queue_agent.smt
	gsl -q -quiet:1 amq_connection_queue_agent.smt
amq_server_method_test$(OBJ): amq_server_method_test.c
amq_server_method_test$(EXE): amq_server_method_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_server_method_test
amq_server_method_test.c: amq_server_method.icl
	gsl -q -quiet:1 amq_server_method.icl
amq_server_method.h: amq_server_method.icl
	gsl -q -quiet:1 amq_server_method.icl
amq_server_method$(OBJ): amq_server_method.c
amq_server_method.c: amq_server_method.icl
	gsl -q -quiet:1 amq_server_method.icl
amq_federation_test$(OBJ): amq_federation_test.c
amq_federation_test$(EXE): amq_federation_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_federation_test
amq_federation_test.c: amq_federation.icl
	gsl -q -quiet:1 amq_federation.icl
amq_federation.h: amq_federation.icl
	gsl -q -quiet:1 amq_federation.icl
amq_federation$(OBJ): amq_federation.c
amq_federation.c: amq_federation.icl
	gsl -q -quiet:1 amq_federation.icl
amq_federation_agent.h: amq_federation_agent.smt
	gsl -q -quiet:1 amq_federation_agent.smt
amq_federation_agent$(OBJ): amq_federation_agent.c
amq_federation_agent.c: amq_federation_agent.smt
	gsl -q -quiet:1 amq_federation_agent.smt
amq_failover_test$(OBJ): amq_failover_test.c
amq_failover_test$(EXE): amq_failover_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_failover_test
amq_failover_test.c: amq_failover.icl
	gsl -q -quiet:1 amq_failover.icl
amq_failover.h: amq_failover.icl
	gsl -q -quiet:1 amq_failover.icl
amq_failover$(OBJ): amq_failover.c
amq_failover.c: amq_failover.icl
	gsl -q -quiet:1 amq_failover.icl
amq_failover_agent.h: amq_failover_agent.smt
	gsl -q -quiet:1 amq_failover_agent.smt
amq_failover_agent$(OBJ): amq_failover_agent.c
amq_failover_agent.c: amq_failover_agent.smt
	gsl -q -quiet:1 amq_failover_agent.smt
amq_lease_test$(OBJ): amq_lease_test.c
amq_lease_test$(EXE): amq_lease_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_lease_test
amq_lease_test.c: amq_lease.icl
	gsl -q -quiet:1 amq_lease.icl
amq_lease.h: amq_lease.icl
	gsl -q -quiet:1 amq_lease.icl
amq_lease$(OBJ): amq_lease.c
amq_lease.c: amq_lease.icl
	gsl -q -quiet:1 amq_lease.icl
amq_lease_table_test$(OBJ): amq_lease_table_test.c
amq_lease_table_test$(EXE): amq_lease_table_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_lease_table_test
amq_lease_table_test.c: amq_lease_table.icl
	gsl -q -quiet:1 amq_lease_table.icl
amq_lease_table.h: amq_lease_table.icl
	gsl -q -quiet:1 amq_lease_table.icl
amq_lease_table$(OBJ): amq_lease_table.c
amq_lease_table.c: amq_lease_table.icl
	gsl -q -quiet:1 amq_lease_table.icl
amq_console_test$(OBJ): amq_console_test.c
amq_console_test$(EXE): amq_console_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_console_test
amq_console_test.c: amq_console.icl
	gsl -q -quiet:1 amq_console.icl
amq_console.h: amq_console.icl
	gsl -q -quiet:1 amq_console.icl
amq_console$(OBJ): amq_console.c
amq_console.c: amq_console.icl
	gsl -q -quiet:1 amq_console.icl
amq_console_agent.h: amq_console_agent.smt
	gsl -q -quiet:1 amq_console_agent.smt
amq_console_agent$(OBJ): amq_console_agent.c
amq_console_agent.c: amq_console_agent.smt
	gsl -q -quiet:1 amq_console_agent.smt
amq_console_class_test$(OBJ): amq_console_class_test.c
amq_console_class_test$(EXE): amq_console_class_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_console_class_test
amq_console_class_test.c: amq_console_class.icl
	gsl -q -quiet:1 amq_console_class.icl
amq_console_class.h: amq_console_class.icl
	gsl -q -quiet:1 amq_console_class.icl
amq_console_class$(OBJ): amq_console_class.c
amq_console_class.c: amq_console_class.icl
	gsl -q -quiet:1 amq_console_class.icl
amq_console_config_test$(OBJ): amq_console_config_test.c
amq_console_config_test$(EXE): amq_console_config_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_console_config_test
amq_console_config_test.c: amq_console_config.icl
	gsl -q -quiet:1 amq_console_config.icl
amq_console_config.h: amq_console_config.icl
	gsl -q -quiet:1 amq_console_config.icl
amq_console_config$(OBJ): amq_console_config.c
amq_console_config.c: amq_console_config.icl
	gsl -q -quiet:1 amq_console_config.icl
amq_console_config_agent.h: amq_console_config_agent.smt
	gsl -q -quiet:1 amq_console_config_agent.smt
amq_console_config_agent$(OBJ): amq_console_config_agent.c
amq_console_config_agent.c: amq_console_config_agent.smt
	gsl -q -quiet:1 amq_console_config_agent.smt
amq_cml_test$(OBJ): amq_cml_test.c
amq_cml_test$(EXE): amq_cml_test$(OBJ) libamq_server$(LIB) 
	$(CC) -L amq_cml_test
amq_cml_test.c: amq_cml.icl
	gsl -q -quiet:1 amq_cml.icl
amq_cml.h: amq_cml.icl
	gsl -q -quiet:1 amq_cml.icl
amq_cml$(OBJ): amq_cml.c
amq_cml.c: amq_cml.icl
	gsl -q -quiet:1 amq_cml.icl

everything: generate libamq_server$(LIB) amq_server$(EXE) amq_server_config_test$(EXE) amq_server_connection_test$(EXE) amq_server_connection_table_test$(EXE) amq_server_connection_list_test$(EXE) amq_server_channel_test$(EXE) amq_server_channel_table_test$(EXE) amq_server_resource_test$(EXE) amq_broker_test$(EXE) amq_peering_test$(EXE) amq_peer_method_test$(EXE) amq_peer_config_test$(EXE) amq_vhost_test$(EXE) amq_vhost_config_test$(EXE) amq_exchange_test$(EXE) amq_exchange_table_test$(EXE) amq_exchange_by_vhost_test$(EXE) amq_exchange_system_test$(EXE) amq_exchange_fanout_test$(EXE) amq_exchange_direct_test$(EXE) amq_exchange_topic_test$(EXE) amq_exchange_headers_test$(EXE) amq_binding_test$(EXE) amq_binding_list_test$(EXE) amq_queue_bindings_list_test$(EXE) amq_queue_bindings_list_table_test$(EXE) amq_binding_mgt_test$(EXE) amq_hitset_test$(EXE) amq_index_test$(EXE) amq_index_hash_test$(EXE) amq_index_array_test$(EXE) amq_queue_test$(EXE) amq_queue_table_test$(EXE) amq_queue_by_vhost_test$(EXE) amq_queue_list_test$(EXE) amq_queue_basic_test$(EXE) amq_connection_test$(EXE) amq_connection_by_broker_test$(EXE) amq_consumer_test$(EXE) amq_consumer_table_test$(EXE) amq_consumer_by_queue_test$(EXE) amq_consumer_by_channel_test$(EXE) amq_consumer_basic_test$(EXE) amq_queue_connection_test$(EXE) amq_connection_queue_test$(EXE) amq_server_method_test$(EXE) amq_federation_test$(EXE) amq_failover_test$(EXE) amq_lease_test$(EXE) amq_lease_table_test$(EXE) amq_console_test$(EXE) amq_console_class_test$(EXE) amq_console_config_test$(EXE) amq_cml_test$(EXE) 
install:
	sh boomake install
generate: stamp_generate
stamp_generate:
	sh boomake regen
regen:
	sh boomake regen
clean:
	sh boomake clean

