#!/bin/sh
#
#   Boom builder for OpenAMQ Operate 1.3d1
#   Generated by iMatix Boom from standard.pwl
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   All rights reserved.
#   
#   This file is licensed under the BSD license as follows:
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of iMatix Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#   Force environment variables to point to install location
#   Start by using final IBASE, then handle local -install path
#
boom_model_list () {
    set |
        awk 'BEGIN                      { FS="[=_]" }
             /^BOOM_MODEL_[A-Z0-9]*=1$/ { print $3  }'
}
boom_model_expand () {
    for MODEL in `boom_model_list`; do
        eval unset BOOM_MODEL_$MODEL
    done
    OLD_IFS=$IFS
    IFS=,
    for MODEL in $BOOM_MODEL; do
        MODEL=`echo $MODEL | tr \[a-z\] \[A-Z\]`
        eval BOOM_MODEL_$MODEL=1
        eval export BOOM_MODEL_$MODEL
    done
    IFS=$OLD_IFS
}
croak() {
    if [ -n "$*" ]; then
        echo "boom E: [OpenAMQ_Operate]: $* - stop" 1>&2
    else
        echo "boom E: [OpenAMQ_Operate]: stop" 1>&2
    fi
    exit 1
}
carp() {
    echo "boom I: [OpenAMQ_Operate]: $*" 1>&2
}
trap 'croak "Interrupted"' INT
trap 'croak "Terminated"' TERM
trap 'croak "Quit"' QUIT
self=$0
MY_VERSION="1.3d1"
#
#   Set default values for BOOM_MODEL
#
#   Default is release,st on all platforms except Linux and Solaris.
#
if [ -s /usr/bin/uname ]; then BOOM_PLATFORM=`/usr/bin/uname`; fi
if [ -s /bin/uname ];     then BOOM_PLATFORM=`/bin/uname`;     fi
if [ -z "$BOOM_MODEL" ]; then
    if [ "$BOOM_PLATFORM" = "Linux" -o "$BOOM_PLATFORM" = "SunOS" ]; then
        BOOM_MODEL=release,mt
    else
        BOOM_MODEL=release,st
    fi
fi
boom_model_expand
if [ "$BOOM_MODEL_RELEASE" != "1" ]; then
    if [ "$BOOM_MODEL_DEBUG" != "1" ]; then
        BOOM_MODEL_RELEASE=1
        BOOM_MODEL="$BOOM_MODEL,release"
    fi
fi
if [ "$BOOM_MODEL_ST" != "1" ]; then
    if [ "$BOOM_MODEL_MT" != "1" ]; then
        if [ "$BOOM_PLATFORM" = "Linux" -o "$BOOM_PLATFORM" = "SunOS" ]; then
            BOOM_MODEL_MT=1
            BOOM_MODEL="$BOOM_MODEL,mt"
        else
            BOOM_MODEL_ST=1
            BOOM_MODEL="$BOOM_MODEL,st"
        fi
    fi
fi
if [ -z "$IBASE" ]; then
    carp "The IBASE variable is not set.  Please set it to the location where OpenAMQ Operate should be installed."
    exit 1
fi
if [ "$1" = "-v" ]; then
    BOOM_TRACE=1
    export BOOM_TRACE
    shift
fi
if [ "$1" != "-install" ]; then
    #   Normal use, use IBASE
    PATH=.:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$IBASE/include; export INCDIR_ALT
    _LOCAL_BASE=
    _INSTALL_ROOT=$IBASE
else
    #   Building product, we use -install directory first, then IBASE
    CURDIR=`pwd`
    cd $2
    _LOCAL_BASE=`pwd`
    cd $CURDIR
    PATH=.:$_LOCAL_BASE/bin:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$_LOCAL_BASE/bin:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$_LOCAL_BASE/include:$IBASE/include; export INCDIR_ALT
    shift
    shift
    _INSTALL_ROOT=$_LOCAL_BASE
fi

# --------------------------   BUILD BINARY FILES   ---------------------------

a_build_binary_files() {
:
    carp "Building OpenAMQ Operate..."
    #   To prevent compatibility warnings...
    INCDIR=
    LIBDIR=
    export LIBDIR INCDIR
    if [ "$BOOM_TRACE" ]; then
        MY_COPTS=-v
    else
        MY_COPTS=-q
    fi
    if [ ! -z "$_LOCAL_BASE" ]; then
        MY_COPTS="$MY_COPTS -li $_LOCAL_BASE/include -ll $_LOCAL_BASE/lib"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_shell"
    c $MY_COPTS amq_shell || croak "\"c $MY_COPTS amq_shell\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_console_test"
    c $MY_COPTS amq_mgt_console_test || croak "\"c $MY_COPTS amq_mgt_console_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_console"
    c $MY_COPTS amq_mgt_console || croak "\"c $MY_COPTS amq_mgt_console\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_console"
    c -p $MY_COPTS amq_mgt_console || croak "\"c -p $MY_COPTS amq_mgt_console\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_broker_test"
    c $MY_COPTS amq_mgt_broker_test || croak "\"c $MY_COPTS amq_mgt_broker_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_broker"
    c $MY_COPTS amq_mgt_broker || croak "\"c $MY_COPTS amq_mgt_broker\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_broker"
    c -p $MY_COPTS amq_mgt_broker || croak "\"c -p $MY_COPTS amq_mgt_broker\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_exchange_test"
    c $MY_COPTS amq_mgt_exchange_test || croak "\"c $MY_COPTS amq_mgt_exchange_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_exchange"
    c $MY_COPTS amq_mgt_exchange || croak "\"c $MY_COPTS amq_mgt_exchange\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_exchange"
    c -p $MY_COPTS amq_mgt_exchange || croak "\"c -p $MY_COPTS amq_mgt_exchange\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_binding_test"
    c $MY_COPTS amq_mgt_binding_test || croak "\"c $MY_COPTS amq_mgt_binding_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_binding"
    c $MY_COPTS amq_mgt_binding || croak "\"c $MY_COPTS amq_mgt_binding\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_binding"
    c -p $MY_COPTS amq_mgt_binding || croak "\"c -p $MY_COPTS amq_mgt_binding\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_queue_test"
    c $MY_COPTS amq_mgt_queue_test || croak "\"c $MY_COPTS amq_mgt_queue_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_queue"
    c $MY_COPTS amq_mgt_queue || croak "\"c $MY_COPTS amq_mgt_queue\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_queue"
    c -p $MY_COPTS amq_mgt_queue || croak "\"c -p $MY_COPTS amq_mgt_queue\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_config_test"
    c $MY_COPTS amq_mgt_config_test || croak "\"c $MY_COPTS amq_mgt_config_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_config"
    c $MY_COPTS amq_mgt_config || croak "\"c $MY_COPTS amq_mgt_config\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_config"
    c -p $MY_COPTS amq_mgt_config || croak "\"c -p $MY_COPTS amq_mgt_config\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_connection_test"
    c $MY_COPTS amq_mgt_connection_test || croak "\"c $MY_COPTS amq_mgt_connection_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_connection"
    c $MY_COPTS amq_mgt_connection || croak "\"c $MY_COPTS amq_mgt_connection\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_connection"
    c -p $MY_COPTS amq_mgt_connection || croak "\"c -p $MY_COPTS amq_mgt_connection\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_queue_connection_test"
    c $MY_COPTS amq_mgt_queue_connection_test || croak "\"c $MY_COPTS amq_mgt_queue_connection_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_queue_connection"
    c $MY_COPTS amq_mgt_queue_connection || croak "\"c $MY_COPTS amq_mgt_queue_connection\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_queue_connection"
    c -p $MY_COPTS amq_mgt_queue_connection || croak "\"c -p $MY_COPTS amq_mgt_queue_connection\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_connection_queue_test"
    c $MY_COPTS amq_mgt_connection_queue_test || croak "\"c $MY_COPTS amq_mgt_connection_queue_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS amq_mgt_connection_queue"
    c $MY_COPTS amq_mgt_connection_queue || croak "\"c $MY_COPTS amq_mgt_connection_queue\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS amq_mgt_connection_queue"
    c -p $MY_COPTS amq_mgt_connection_queue || croak "\"c -p $MY_COPTS amq_mgt_connection_queue\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_console"
    c $MY_COPTS -r libamq_operate amq_mgt_console || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_console\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_console"
    c -p $MY_COPTS -r libamq_operate amq_mgt_console || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_console\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_broker"
    c $MY_COPTS -r libamq_operate amq_mgt_broker || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_broker\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_broker"
    c -p $MY_COPTS -r libamq_operate amq_mgt_broker || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_broker\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_exchange"
    c $MY_COPTS -r libamq_operate amq_mgt_exchange || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_exchange\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_exchange"
    c -p $MY_COPTS -r libamq_operate amq_mgt_exchange || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_exchange\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_binding"
    c $MY_COPTS -r libamq_operate amq_mgt_binding || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_binding\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_binding"
    c -p $MY_COPTS -r libamq_operate amq_mgt_binding || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_binding\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_queue"
    c $MY_COPTS -r libamq_operate amq_mgt_queue || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_queue\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_queue"
    c -p $MY_COPTS -r libamq_operate amq_mgt_queue || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_queue\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_config"
    c $MY_COPTS -r libamq_operate amq_mgt_config || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_config\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_config"
    c -p $MY_COPTS -r libamq_operate amq_mgt_config || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_config\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_connection"
    c $MY_COPTS -r libamq_operate amq_mgt_connection || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_connection\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_connection"
    c -p $MY_COPTS -r libamq_operate amq_mgt_connection || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_connection\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_queue_connection"
    c $MY_COPTS -r libamq_operate amq_mgt_queue_connection || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_queue_connection\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_queue_connection"
    c -p $MY_COPTS -r libamq_operate amq_mgt_queue_connection || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_queue_connection\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libamq_operate amq_mgt_connection_queue"
    c $MY_COPTS -r libamq_operate amq_mgt_connection_queue || croak "\"c $MY_COPTS -r libamq_operate amq_mgt_connection_queue\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "c -p $MY_COPTS -r libamq_operate amq_mgt_connection_queue"
    c -p $MY_COPTS -r libamq_operate amq_mgt_connection_queue || croak "\"c -p $MY_COPTS -r libamq_operate amq_mgt_connection_queue\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_shell"
    c $MY_COPTS -L amq_shell || croak "\"c $MY_COPTS -L amq_shell\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_console_test"
    c $MY_COPTS -L amq_mgt_console_test || croak "\"c $MY_COPTS -L amq_mgt_console_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_broker_test"
    c $MY_COPTS -L amq_mgt_broker_test || croak "\"c $MY_COPTS -L amq_mgt_broker_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_exchange_test"
    c $MY_COPTS -L amq_mgt_exchange_test || croak "\"c $MY_COPTS -L amq_mgt_exchange_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_binding_test"
    c $MY_COPTS -L amq_mgt_binding_test || croak "\"c $MY_COPTS -L amq_mgt_binding_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_queue_test"
    c $MY_COPTS -L amq_mgt_queue_test || croak "\"c $MY_COPTS -L amq_mgt_queue_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_config_test"
    c $MY_COPTS -L amq_mgt_config_test || croak "\"c $MY_COPTS -L amq_mgt_config_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_connection_test"
    c $MY_COPTS -L amq_mgt_connection_test || croak "\"c $MY_COPTS -L amq_mgt_connection_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_queue_connection_test"
    c $MY_COPTS -L amq_mgt_queue_connection_test || croak "\"c $MY_COPTS -L amq_mgt_queue_connection_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L amq_mgt_connection_queue_test"
    c $MY_COPTS -L amq_mgt_connection_queue_test || croak "\"c $MY_COPTS -L amq_mgt_connection_queue_test\" failed"
}

# -------------------------   BUILD SOURCE PACKAGES   -------------------------

a_build_source_packages() {
:
    rm -f _package.lst
    if [ -f "operate/gpl_output" ]; then
        echo operate/gpl_output>>_package.lst
    fi
    if [ -f "operate/version.h" ]; then
        echo operate/version.h>>_package.lst
    fi
    if [ -f "operate/amq_shell.c" ]; then
        echo operate/amq_shell.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_console.icl" ]; then
        echo operate/amq_mgt_console.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_broker.icl" ]; then
        echo operate/amq_mgt_broker.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_exchange.icl" ]; then
        echo operate/amq_mgt_exchange.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_binding.icl" ]; then
        echo operate/amq_mgt_binding.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue.icl" ]; then
        echo operate/amq_mgt_queue.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_config.icl" ]; then
        echo operate/amq_mgt_config.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection.icl" ]; then
        echo operate/amq_mgt_connection.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue_connection.icl" ]; then
        echo operate/amq_mgt_queue_connection.icl>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection_queue.icl" ]; then
        echo operate/amq_mgt_connection_queue.icl>>_package.lst
    fi
    if [ -f "operate/amq_operate_api.gsl" ]; then
        echo operate/amq_operate_api.gsl>>_package.lst
    fi
    if [ -f "operate/prelude.pdl" ]; then
        echo operate/prelude.pdl>>_package.lst
    fi
    if [ -f "operate/license.gpl" ]; then
        echo operate/license.gpl>>_package.lst
    fi
    if [ -f "operate/project.pdl" ]; then
        echo operate/project.pdl>>_package.lst
    fi
    if [ -f "operate/readme.txt" ]; then
        echo operate/readme.txt>>_package.lst
    fi
    if [ -f "operate/amq_mgt_console_test.c" ]; then
        echo operate/amq_mgt_console_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_console.h" ]; then
        echo operate/amq_mgt_console.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_console.c" ]; then
        echo operate/amq_mgt_console.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_console.hpp" ]; then
        echo operate/amq_mgt_console.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_console.cpp" ]; then
        echo operate/amq_mgt_console.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_broker_test.c" ]; then
        echo operate/amq_mgt_broker_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_broker.h" ]; then
        echo operate/amq_mgt_broker.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_broker.c" ]; then
        echo operate/amq_mgt_broker.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_broker.hpp" ]; then
        echo operate/amq_mgt_broker.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_broker.cpp" ]; then
        echo operate/amq_mgt_broker.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_exchange_test.c" ]; then
        echo operate/amq_mgt_exchange_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_exchange.h" ]; then
        echo operate/amq_mgt_exchange.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_exchange.c" ]; then
        echo operate/amq_mgt_exchange.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_exchange.hpp" ]; then
        echo operate/amq_mgt_exchange.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_exchange.cpp" ]; then
        echo operate/amq_mgt_exchange.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_binding_test.c" ]; then
        echo operate/amq_mgt_binding_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_binding.h" ]; then
        echo operate/amq_mgt_binding.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_binding.c" ]; then
        echo operate/amq_mgt_binding.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_binding.hpp" ]; then
        echo operate/amq_mgt_binding.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_binding.cpp" ]; then
        echo operate/amq_mgt_binding.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue_test.c" ]; then
        echo operate/amq_mgt_queue_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue.h" ]; then
        echo operate/amq_mgt_queue.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue.c" ]; then
        echo operate/amq_mgt_queue.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue.hpp" ]; then
        echo operate/amq_mgt_queue.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue.cpp" ]; then
        echo operate/amq_mgt_queue.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_config_test.c" ]; then
        echo operate/amq_mgt_config_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_config.h" ]; then
        echo operate/amq_mgt_config.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_config.c" ]; then
        echo operate/amq_mgt_config.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_config.hpp" ]; then
        echo operate/amq_mgt_config.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_config.cpp" ]; then
        echo operate/amq_mgt_config.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection_test.c" ]; then
        echo operate/amq_mgt_connection_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection.h" ]; then
        echo operate/amq_mgt_connection.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection.c" ]; then
        echo operate/amq_mgt_connection.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection.hpp" ]; then
        echo operate/amq_mgt_connection.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection.cpp" ]; then
        echo operate/amq_mgt_connection.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue_connection_test.c" ]; then
        echo operate/amq_mgt_queue_connection_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue_connection.h" ]; then
        echo operate/amq_mgt_queue_connection.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue_connection.c" ]; then
        echo operate/amq_mgt_queue_connection.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue_connection.hpp" ]; then
        echo operate/amq_mgt_queue_connection.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_queue_connection.cpp" ]; then
        echo operate/amq_mgt_queue_connection.cpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection_queue_test.c" ]; then
        echo operate/amq_mgt_connection_queue_test.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection_queue.h" ]; then
        echo operate/amq_mgt_connection_queue.h>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection_queue.c" ]; then
        echo operate/amq_mgt_connection_queue.c>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection_queue.hpp" ]; then
        echo operate/amq_mgt_connection_queue.hpp>>_package.lst
    fi
    if [ -f "operate/amq_mgt_connection_queue.cpp" ]; then
        echo operate/amq_mgt_connection_queue.cpp>>_package.lst
    fi
    if [ -f "operate/stamp_generate" ]; then
        echo operate/stamp_generate>>_package.lst
    fi
    if [ -f "operate/configure" ]; then
        echo operate/configure>>_package.lst
    fi
    if [ -f "operate/Makefile.unix" ]; then
        echo operate/Makefile.unix>>_package.lst
    fi
    if [ -f "operate/boomake" ]; then
        echo operate/boomake>>_package.lst
    fi
    if [ -f "operate/configure.bat" ]; then
        echo operate/configure.bat>>_package.lst
    fi
    if [ -f "operate/Makefile.win32" ]; then
        echo operate/Makefile.win32>>_package.lst
    fi
    if [ -f "operate/boomake.bat" ]; then
        echo operate/boomake.bat>>_package.lst
    fi
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    carp "Building OpenAMQ_Operate-$MY_VERSION-src.tar.gz..."
    zip  -rq _package.zip -@<_package.lst
    unzip -q _package.zip -d OpenAMQ_Operate-$MY_VERSION
    rm -f OpenAMQ_Operate-$MY_VERSION-src.tar.gz
    tar -cf  OpenAMQ_Operate-$MY_VERSION-src.tar OpenAMQ_Operate-$MY_VERSION
    gzip OpenAMQ_Operate-$MY_VERSION-src.tar
    rm -f OpenAMQ_Operate-$MY_VERSION-src.zip
    carp "Building OpenAMQ_Operate-$MY_VERSION-src.zip..."
    zip -lrmq OpenAMQ_Operate-$MY_VERSION-src.zip OpenAMQ_Operate-$MY_VERSION
    rm _package.zip
    rm _package.lst
    rm stamp_source
}

# ---------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

a_check_all_source_files_exist() {
:
    if [ ! -f "gpl_output" ]; then
        croak "gpl_output is missing"
    fi
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "amq_shell.c" ]; then
        croak "amq_shell.c is missing"
    fi
    if [ ! -f "amq_mgt_console.icl" ]; then
        croak "amq_mgt_console.icl is missing"
    fi
    if [ ! -f "amq_mgt_broker.icl" ]; then
        croak "amq_mgt_broker.icl is missing"
    fi
    if [ ! -f "amq_mgt_exchange.icl" ]; then
        croak "amq_mgt_exchange.icl is missing"
    fi
    if [ ! -f "amq_mgt_binding.icl" ]; then
        croak "amq_mgt_binding.icl is missing"
    fi
    if [ ! -f "amq_mgt_queue.icl" ]; then
        croak "amq_mgt_queue.icl is missing"
    fi
    if [ ! -f "amq_mgt_config.icl" ]; then
        croak "amq_mgt_config.icl is missing"
    fi
    if [ ! -f "amq_mgt_connection.icl" ]; then
        croak "amq_mgt_connection.icl is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.icl" ]; then
        croak "amq_mgt_queue_connection.icl is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.icl" ]; then
        croak "amq_mgt_connection_queue.icl is missing"
    fi
    if [ ! -f "amq_operate_api.gsl" ]; then
        croak "amq_operate_api.gsl is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "amq_mgt_console_test.c" ]; then
        croak "amq_mgt_console_test.c is missing"
    fi
    if [ ! -f "amq_mgt_console.h" ]; then
        croak "amq_mgt_console.h is missing"
    fi
    if [ ! -f "amq_mgt_console.c" ]; then
        croak "amq_mgt_console.c is missing"
    fi
    if [ ! -f "amq_mgt_console.hpp" ]; then
        croak "amq_mgt_console.hpp is missing"
    fi
    if [ ! -f "amq_mgt_console.cpp" ]; then
        croak "amq_mgt_console.cpp is missing"
    fi
    if [ ! -f "amq_mgt_broker_test.c" ]; then
        croak "amq_mgt_broker_test.c is missing"
    fi
    if [ ! -f "amq_mgt_broker.h" ]; then
        croak "amq_mgt_broker.h is missing"
    fi
    if [ ! -f "amq_mgt_broker.c" ]; then
        croak "amq_mgt_broker.c is missing"
    fi
    if [ ! -f "amq_mgt_broker.hpp" ]; then
        croak "amq_mgt_broker.hpp is missing"
    fi
    if [ ! -f "amq_mgt_broker.cpp" ]; then
        croak "amq_mgt_broker.cpp is missing"
    fi
    if [ ! -f "amq_mgt_exchange_test.c" ]; then
        croak "amq_mgt_exchange_test.c is missing"
    fi
    if [ ! -f "amq_mgt_exchange.h" ]; then
        croak "amq_mgt_exchange.h is missing"
    fi
    if [ ! -f "amq_mgt_exchange.c" ]; then
        croak "amq_mgt_exchange.c is missing"
    fi
    if [ ! -f "amq_mgt_exchange.hpp" ]; then
        croak "amq_mgt_exchange.hpp is missing"
    fi
    if [ ! -f "amq_mgt_exchange.cpp" ]; then
        croak "amq_mgt_exchange.cpp is missing"
    fi
    if [ ! -f "amq_mgt_binding_test.c" ]; then
        croak "amq_mgt_binding_test.c is missing"
    fi
    if [ ! -f "amq_mgt_binding.h" ]; then
        croak "amq_mgt_binding.h is missing"
    fi
    if [ ! -f "amq_mgt_binding.c" ]; then
        croak "amq_mgt_binding.c is missing"
    fi
    if [ ! -f "amq_mgt_binding.hpp" ]; then
        croak "amq_mgt_binding.hpp is missing"
    fi
    if [ ! -f "amq_mgt_binding.cpp" ]; then
        croak "amq_mgt_binding.cpp is missing"
    fi
    if [ ! -f "amq_mgt_queue_test.c" ]; then
        croak "amq_mgt_queue_test.c is missing"
    fi
    if [ ! -f "amq_mgt_queue.h" ]; then
        croak "amq_mgt_queue.h is missing"
    fi
    if [ ! -f "amq_mgt_queue.c" ]; then
        croak "amq_mgt_queue.c is missing"
    fi
    if [ ! -f "amq_mgt_queue.hpp" ]; then
        croak "amq_mgt_queue.hpp is missing"
    fi
    if [ ! -f "amq_mgt_queue.cpp" ]; then
        croak "amq_mgt_queue.cpp is missing"
    fi
    if [ ! -f "amq_mgt_config_test.c" ]; then
        croak "amq_mgt_config_test.c is missing"
    fi
    if [ ! -f "amq_mgt_config.h" ]; then
        croak "amq_mgt_config.h is missing"
    fi
    if [ ! -f "amq_mgt_config.c" ]; then
        croak "amq_mgt_config.c is missing"
    fi
    if [ ! -f "amq_mgt_config.hpp" ]; then
        croak "amq_mgt_config.hpp is missing"
    fi
    if [ ! -f "amq_mgt_config.cpp" ]; then
        croak "amq_mgt_config.cpp is missing"
    fi
    if [ ! -f "amq_mgt_connection_test.c" ]; then
        croak "amq_mgt_connection_test.c is missing"
    fi
    if [ ! -f "amq_mgt_connection.h" ]; then
        croak "amq_mgt_connection.h is missing"
    fi
    if [ ! -f "amq_mgt_connection.c" ]; then
        croak "amq_mgt_connection.c is missing"
    fi
    if [ ! -f "amq_mgt_connection.hpp" ]; then
        croak "amq_mgt_connection.hpp is missing"
    fi
    if [ ! -f "amq_mgt_connection.cpp" ]; then
        croak "amq_mgt_connection.cpp is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection_test.c" ]; then
        croak "amq_mgt_queue_connection_test.c is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.h" ]; then
        croak "amq_mgt_queue_connection.h is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.c" ]; then
        croak "amq_mgt_queue_connection.c is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.hpp" ]; then
        croak "amq_mgt_queue_connection.hpp is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.cpp" ]; then
        croak "amq_mgt_queue_connection.cpp is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue_test.c" ]; then
        croak "amq_mgt_connection_queue_test.c is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.h" ]; then
        croak "amq_mgt_connection_queue.h is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.c" ]; then
        croak "amq_mgt_connection_queue.c is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.hpp" ]; then
        croak "amq_mgt_connection_queue.hpp is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.cpp" ]; then
        croak "amq_mgt_connection_queue.cpp is missing"
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
}

# -----------------------   CHECK BINARY FILES EXIST   ------------------------

a_check_binary_files_exist() {
:
    if [ ! -f "libamq_operate.a" ]; then
        croak "libamq_operate.a is missing"
    fi
    if [ ! -f "amq_shell" ]; then
        croak "amq_shell is missing"
    fi
    if [ ! -f "amq_mgt_console.icl" ]; then
        croak "amq_mgt_console.icl is missing"
    fi
    if [ ! -f "amq_mgt_broker.icl" ]; then
        croak "amq_mgt_broker.icl is missing"
    fi
    if [ ! -f "amq_mgt_exchange.icl" ]; then
        croak "amq_mgt_exchange.icl is missing"
    fi
    if [ ! -f "amq_mgt_binding.icl" ]; then
        croak "amq_mgt_binding.icl is missing"
    fi
    if [ ! -f "amq_mgt_queue.icl" ]; then
        croak "amq_mgt_queue.icl is missing"
    fi
    if [ ! -f "amq_mgt_config.icl" ]; then
        croak "amq_mgt_config.icl is missing"
    fi
    if [ ! -f "amq_mgt_connection.icl" ]; then
        croak "amq_mgt_connection.icl is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.icl" ]; then
        croak "amq_mgt_queue_connection.icl is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.icl" ]; then
        croak "amq_mgt_connection_queue.icl is missing"
    fi
    if [ ! -f "amq_operate_api.gsl" ]; then
        croak "amq_operate_api.gsl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "amq_mgt_console.h" ]; then
        croak "amq_mgt_console.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_console.hpp" ]; then
        croak "amq_mgt_console.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_broker.h" ]; then
        croak "amq_mgt_broker.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_broker.hpp" ]; then
        croak "amq_mgt_broker.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_exchange.h" ]; then
        croak "amq_mgt_exchange.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_exchange.hpp" ]; then
        croak "amq_mgt_exchange.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_binding.h" ]; then
        croak "amq_mgt_binding.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_binding.hpp" ]; then
        croak "amq_mgt_binding.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_queue.h" ]; then
        croak "amq_mgt_queue.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_queue.hpp" ]; then
        croak "amq_mgt_queue.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_config.h" ]; then
        croak "amq_mgt_config.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_config.hpp" ]; then
        croak "amq_mgt_config.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_connection.h" ]; then
        croak "amq_mgt_connection.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_connection.hpp" ]; then
        croak "amq_mgt_connection.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_queue_connection.h" ]; then
        croak "amq_mgt_queue_connection.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_queue_connection.hpp" ]; then
        croak "amq_mgt_queue_connection.hpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_connection_queue.h" ]; then
        croak "amq_mgt_connection_queue.h is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_connection_queue.hpp" ]; then
        croak "amq_mgt_connection_queue.hpp is missing"
    fi
    fi
}

# ------------------------   CHECK OPERATING CONTEXT   ------------------------

a_check_operating_context() {
:
    if [ -f ./stamp_stripped ]; then
        event=stripped
    elif [ -f ./stamp_source ]; then
        event=source
    else
        event=repository
    fi
}

# -----------------------   CHECK PROJECT FILES EXIST   -----------------------

a_check_project_files_exist() {
:
    if [ ! -f "gpl_output" ]; then
        croak "gpl_output is missing"
    fi
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "amq_shell.c" ]; then
        croak "amq_shell.c is missing"
    fi
    if [ ! -f "amq_mgt_console.icl" ]; then
        croak "amq_mgt_console.icl is missing"
    fi
    if [ ! -f "amq_operate_api.gsl" ]; then
        croak "amq_operate_api.gsl is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
}

# -----------------------   CHECK SOURCE FILES EXIST   ------------------------

a_check_source_files_exist() {
:
    if [ ! -f "gpl_output" ]; then
        croak "gpl_output is missing"
    fi
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "amq_shell.c" ]; then
        croak "amq_shell.c is missing"
    fi
    if [ ! -f "amq_mgt_console.icl" ]; then
        croak "amq_mgt_console.icl is missing"
    fi
    if [ ! -f "amq_mgt_broker.icl" ]; then
        croak "amq_mgt_broker.icl is missing"
    fi
    if [ ! -f "amq_mgt_exchange.icl" ]; then
        croak "amq_mgt_exchange.icl is missing"
    fi
    if [ ! -f "amq_mgt_binding.icl" ]; then
        croak "amq_mgt_binding.icl is missing"
    fi
    if [ ! -f "amq_mgt_queue.icl" ]; then
        croak "amq_mgt_queue.icl is missing"
    fi
    if [ ! -f "amq_mgt_config.icl" ]; then
        croak "amq_mgt_config.icl is missing"
    fi
    if [ ! -f "amq_mgt_connection.icl" ]; then
        croak "amq_mgt_connection.icl is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.icl" ]; then
        croak "amq_mgt_queue_connection.icl is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.icl" ]; then
        croak "amq_mgt_connection_queue.icl is missing"
    fi
    if [ ! -f "amq_operate_api.gsl" ]; then
        croak "amq_operate_api.gsl is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "amq_mgt_console_test.c" ]; then
        croak "amq_mgt_console_test.c is missing"
    fi
    if [ ! -f "amq_mgt_console.h" ]; then
        croak "amq_mgt_console.h is missing"
    fi
    if [ ! -f "amq_mgt_console.c" ]; then
        croak "amq_mgt_console.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_console.hpp" ]; then
        croak "amq_mgt_console.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_console.cpp" ]; then
        croak "amq_mgt_console.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_broker_test.c" ]; then
        croak "amq_mgt_broker_test.c is missing"
    fi
    if [ ! -f "amq_mgt_broker.h" ]; then
        croak "amq_mgt_broker.h is missing"
    fi
    if [ ! -f "amq_mgt_broker.c" ]; then
        croak "amq_mgt_broker.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_broker.hpp" ]; then
        croak "amq_mgt_broker.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_broker.cpp" ]; then
        croak "amq_mgt_broker.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_exchange_test.c" ]; then
        croak "amq_mgt_exchange_test.c is missing"
    fi
    if [ ! -f "amq_mgt_exchange.h" ]; then
        croak "amq_mgt_exchange.h is missing"
    fi
    if [ ! -f "amq_mgt_exchange.c" ]; then
        croak "amq_mgt_exchange.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_exchange.hpp" ]; then
        croak "amq_mgt_exchange.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_exchange.cpp" ]; then
        croak "amq_mgt_exchange.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_binding_test.c" ]; then
        croak "amq_mgt_binding_test.c is missing"
    fi
    if [ ! -f "amq_mgt_binding.h" ]; then
        croak "amq_mgt_binding.h is missing"
    fi
    if [ ! -f "amq_mgt_binding.c" ]; then
        croak "amq_mgt_binding.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_binding.hpp" ]; then
        croak "amq_mgt_binding.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_binding.cpp" ]; then
        croak "amq_mgt_binding.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_queue_test.c" ]; then
        croak "amq_mgt_queue_test.c is missing"
    fi
    if [ ! -f "amq_mgt_queue.h" ]; then
        croak "amq_mgt_queue.h is missing"
    fi
    if [ ! -f "amq_mgt_queue.c" ]; then
        croak "amq_mgt_queue.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_queue.hpp" ]; then
        croak "amq_mgt_queue.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_queue.cpp" ]; then
        croak "amq_mgt_queue.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_config_test.c" ]; then
        croak "amq_mgt_config_test.c is missing"
    fi
    if [ ! -f "amq_mgt_config.h" ]; then
        croak "amq_mgt_config.h is missing"
    fi
    if [ ! -f "amq_mgt_config.c" ]; then
        croak "amq_mgt_config.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_config.hpp" ]; then
        croak "amq_mgt_config.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_config.cpp" ]; then
        croak "amq_mgt_config.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_connection_test.c" ]; then
        croak "amq_mgt_connection_test.c is missing"
    fi
    if [ ! -f "amq_mgt_connection.h" ]; then
        croak "amq_mgt_connection.h is missing"
    fi
    if [ ! -f "amq_mgt_connection.c" ]; then
        croak "amq_mgt_connection.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_connection.hpp" ]; then
        croak "amq_mgt_connection.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_connection.cpp" ]; then
        croak "amq_mgt_connection.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_queue_connection_test.c" ]; then
        croak "amq_mgt_queue_connection_test.c is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.h" ]; then
        croak "amq_mgt_queue_connection.h is missing"
    fi
    if [ ! -f "amq_mgt_queue_connection.c" ]; then
        croak "amq_mgt_queue_connection.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_queue_connection.hpp" ]; then
        croak "amq_mgt_queue_connection.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_queue_connection.cpp" ]; then
        croak "amq_mgt_queue_connection.cpp is missing"
    fi
    fi
    if [ ! -f "amq_mgt_connection_queue_test.c" ]; then
        croak "amq_mgt_connection_queue_test.c is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.h" ]; then
        croak "amq_mgt_connection_queue.h is missing"
    fi
    if [ ! -f "amq_mgt_connection_queue.c" ]; then
        croak "amq_mgt_connection_queue.c is missing"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_connection_queue.hpp" ]; then
        croak "amq_mgt_connection_queue.hpp is missing"
    fi
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    if [ ! -f "amq_mgt_connection_queue.cpp" ]; then
        croak "amq_mgt_connection_queue.cpp is missing"
    fi
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
}

# -------------------------   INSTALL DELIVERABLES   --------------------------

a_install_deliverables() {
:
    carp "Installing OpenAMQ Operate into $_INSTALL_ROOT..."
    if [ ! -d "$_INSTALL_ROOT" ]; then
        if mkdir -p $_INSTALL_ROOT; then
            :
        else
            croak "Could not create directory \"$_INSTALL_ROOT\""
        fi
    fi
    mkdir -p $_INSTALL_ROOT/lib/
    [ "$BOOM_TRACE" ] && echo "cp libamq_operate.a $_INSTALL_ROOT/lib/"
    cp libamq_operate.a $_INSTALL_ROOT/lib/ || croak "\"cp libamq_operate.a $_INSTALL_ROOT/lib/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/lib/libamq_operate.a"
    chmod 0644 $_INSTALL_ROOT/lib/libamq_operate.a || croak "\"chmod 0644 $_INSTALL_ROOT/lib/libamq_operate.a\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp amq_shell $_INSTALL_ROOT/bin/"
    cp amq_shell $_INSTALL_ROOT/bin/ || croak "\"cp amq_shell $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0755 $_INSTALL_ROOT/bin/amq_shell"
    chmod 0755 $_INSTALL_ROOT/bin/amq_shell || croak "\"chmod 0755 $_INSTALL_ROOT/bin/amq_shell\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_console.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_console.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_console.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_console.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_console.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_console.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_broker.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_broker.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_broker.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_broker.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_broker.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_broker.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_exchange.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_exchange.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_exchange.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_exchange.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_exchange.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_exchange.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_binding.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_binding.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_binding.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_binding.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_binding.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_binding.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_queue.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_queue.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_queue.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_queue.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_queue.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_queue.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_config.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_config.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_config.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_config.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_config.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_config.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_connection.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_connection.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_connection.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_connection.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_connection.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_connection.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_queue_connection.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_queue_connection.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_queue_connection.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_queue_connection.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_queue_connection.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_queue_connection.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_connection_queue.icl $_INSTALL_ROOT/bin/"
    cp amq_mgt_connection_queue.icl $_INSTALL_ROOT/bin/ || croak "\"cp amq_mgt_connection_queue.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_connection_queue.icl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_connection_queue.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_mgt_connection_queue.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp amq_operate_api.gsl $_INSTALL_ROOT/bin/"
    cp amq_operate_api.gsl $_INSTALL_ROOT/bin/ || croak "\"cp amq_operate_api.gsl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/amq_operate_api.gsl"
    chmod 0644 $_INSTALL_ROOT/bin/amq_operate_api.gsl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/amq_operate_api.gsl\" failed"
    mkdir -p $_INSTALL_ROOT/doc/OpenAMQ_Operate/
    [ "$BOOM_TRACE" ] && echo "cp readme.txt $_INSTALL_ROOT/doc/OpenAMQ_Operate/"
    cp readme.txt $_INSTALL_ROOT/doc/OpenAMQ_Operate/ || croak "\"cp readme.txt $_INSTALL_ROOT/doc/OpenAMQ_Operate/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/doc/OpenAMQ_Operate/readme.txt"
    chmod 0644 $_INSTALL_ROOT/doc/OpenAMQ_Operate/readme.txt || croak "\"chmod 0644 $_INSTALL_ROOT/doc/OpenAMQ_Operate/readme.txt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_console.h $_INSTALL_ROOT/include/"
    cp amq_mgt_console.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_console.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_console.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_console.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_console.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_console.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_console.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_console.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_console.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_console.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_console.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_broker.h $_INSTALL_ROOT/include/"
    cp amq_mgt_broker.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_broker.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_broker.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_broker.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_broker.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_broker.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_broker.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_broker.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_broker.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_broker.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_broker.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_exchange.h $_INSTALL_ROOT/include/"
    cp amq_mgt_exchange.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_exchange.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_exchange.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_exchange.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_exchange.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_exchange.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_exchange.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_exchange.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_exchange.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_exchange.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_exchange.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_binding.h $_INSTALL_ROOT/include/"
    cp amq_mgt_binding.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_binding.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_binding.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_binding.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_binding.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_binding.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_binding.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_binding.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_binding.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_binding.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_binding.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_queue.h $_INSTALL_ROOT/include/"
    cp amq_mgt_queue.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_queue.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_queue.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_queue.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_queue.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_config.h $_INSTALL_ROOT/include/"
    cp amq_mgt_config.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_config.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_config.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_config.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_config.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_config.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_config.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_config.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_config.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_config.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_config.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_connection.h $_INSTALL_ROOT/include/"
    cp amq_mgt_connection.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_connection.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_connection.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_connection.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_connection.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_queue_connection.h $_INSTALL_ROOT/include/"
    cp amq_mgt_queue_connection.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_queue_connection.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue_connection.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue_connection.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue_connection.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_queue_connection.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_queue_connection.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_queue_connection.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue_connection.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue_connection.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_queue_connection.hpp\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_connection_queue.h $_INSTALL_ROOT/include/"
    cp amq_mgt_connection_queue.h $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_connection_queue.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection_queue.h"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection_queue.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection_queue.h\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "cp amq_mgt_connection_queue.hpp $_INSTALL_ROOT/include/"
    cp amq_mgt_connection_queue.hpp $_INSTALL_ROOT/include/ || croak "\"cp amq_mgt_connection_queue.hpp $_INSTALL_ROOT/include/\" failed"
    fi
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection_queue.hpp"
    chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection_queue.hpp || croak "\"chmod 0644 $_INSTALL_ROOT/include/amq_mgt_connection_queue.hpp\" failed"
    fi
    if [ -f ./installer ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./installer"
    sh ./installer || croak "\"sh ./installer\" failed"
    fi
}

# ----------------------   PRODUCE ALL GENERATED FILES   ----------------------

a_produce_all_generated_files() {
:
    carp "Generating files..."

    gsl -q -quiet:1 amq_operate_api.gsl
    
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_console.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_console.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_console.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_console.icl"
    gsl -q -quiet:1 amq_mgt_console.icl || croak "\"gsl -q -quiet:1 amq_mgt_console.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_broker.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_broker.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_broker.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_broker.icl"
    gsl -q -quiet:1 amq_mgt_broker.icl || croak "\"gsl -q -quiet:1 amq_mgt_broker.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_exchange.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_exchange.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_exchange.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_exchange.icl"
    gsl -q -quiet:1 amq_mgt_exchange.icl || croak "\"gsl -q -quiet:1 amq_mgt_exchange.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_binding.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_binding.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_binding.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_binding.icl"
    gsl -q -quiet:1 amq_mgt_binding.icl || croak "\"gsl -q -quiet:1 amq_mgt_binding.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_queue.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_queue.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_queue.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_queue.icl"
    gsl -q -quiet:1 amq_mgt_queue.icl || croak "\"gsl -q -quiet:1 amq_mgt_queue.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_config.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_config.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_config.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_config.icl"
    gsl -q -quiet:1 amq_mgt_config.icl || croak "\"gsl -q -quiet:1 amq_mgt_config.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_connection.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_connection.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_connection.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_connection.icl"
    gsl -q -quiet:1 amq_mgt_connection.icl || croak "\"gsl -q -quiet:1 amq_mgt_connection.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_queue_connection.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_queue_connection.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_queue_connection.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_queue_connection.icl"
    gsl -q -quiet:1 amq_mgt_queue_connection.icl || croak "\"gsl -q -quiet:1 amq_mgt_queue_connection.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_connection_queue.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_connection_queue.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_connection_queue.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_connection_queue.icl"
    gsl -q -quiet:1 amq_mgt_connection_queue.icl || croak "\"gsl -q -quiet:1 amq_mgt_connection_queue.icl\" failed"
    echo "Source files successfully generated">stamp_generate
}

# ------------------------   PRODUCE GENERATED FILES   ------------------------

a_produce_generated_files() {
:
    carp "Generating files..."

    gsl -q -quiet:1 amq_operate_api.gsl
    
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_console.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_console.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_console.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_console.icl"
    gsl -q -quiet:1 amq_mgt_console.icl || croak "\"gsl -q -quiet:1 amq_mgt_console.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_broker.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_broker.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_broker.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_broker.icl"
    gsl -q -quiet:1 amq_mgt_broker.icl || croak "\"gsl -q -quiet:1 amq_mgt_broker.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_exchange.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_exchange.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_exchange.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_exchange.icl"
    gsl -q -quiet:1 amq_mgt_exchange.icl || croak "\"gsl -q -quiet:1 amq_mgt_exchange.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_binding.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_binding.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_binding.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_binding.icl"
    gsl -q -quiet:1 amq_mgt_binding.icl || croak "\"gsl -q -quiet:1 amq_mgt_binding.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_queue.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_queue.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_queue.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_queue.icl"
    gsl -q -quiet:1 amq_mgt_queue.icl || croak "\"gsl -q -quiet:1 amq_mgt_queue.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_config.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_config.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_config.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_config.icl"
    gsl -q -quiet:1 amq_mgt_config.icl || croak "\"gsl -q -quiet:1 amq_mgt_config.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_connection.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_connection.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_connection.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_connection.icl"
    gsl -q -quiet:1 amq_mgt_connection.icl || croak "\"gsl -q -quiet:1 amq_mgt_connection.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_queue_connection.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_queue_connection.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_queue_connection.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_queue_connection.icl"
    gsl -q -quiet:1 amq_mgt_queue_connection.icl || croak "\"gsl -q -quiet:1 amq_mgt_queue_connection.icl\" failed"
    if [ "$BOOM_MODEL_CPP" ]; then
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 -target:stdcpp amq_mgt_connection_queue.icl"
    gsl -q -quiet:1 -target:stdcpp amq_mgt_connection_queue.icl || croak "\"gsl -q -quiet:1 -target:stdcpp amq_mgt_connection_queue.icl\" failed"
    fi
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 amq_mgt_connection_queue.icl"
    gsl -q -quiet:1 amq_mgt_connection_queue.icl || croak "\"gsl -q -quiet:1 amq_mgt_connection_queue.icl\" failed"
    echo "Source files successfully generated">stamp_generate
}

# -----------------------   REMOVE GENERATED BINARIES   -----------------------

a_remove_generated_binaries() {
:
    rm -f libamq_operate.a
    rm -f amq_shell
    rm -f amq_shell.o
    rm -f amq_mgt_console_test_test.o
    rm -f amq_mgt_console_test_test
    rm -f amq_mgt_console.o
    rm -f amq_mgt_console.opp
    rm -f amq_mgt_broker_test_test.o
    rm -f amq_mgt_broker_test_test
    rm -f amq_mgt_broker.o
    rm -f amq_mgt_broker.opp
    rm -f amq_mgt_exchange_test_test.o
    rm -f amq_mgt_exchange_test_test
    rm -f amq_mgt_exchange.o
    rm -f amq_mgt_exchange.opp
    rm -f amq_mgt_binding_test_test.o
    rm -f amq_mgt_binding_test_test
    rm -f amq_mgt_binding.o
    rm -f amq_mgt_binding.opp
    rm -f amq_mgt_queue_test_test.o
    rm -f amq_mgt_queue_test_test
    rm -f amq_mgt_queue.o
    rm -f amq_mgt_queue.opp
    rm -f amq_mgt_config_test_test.o
    rm -f amq_mgt_config_test_test
    rm -f amq_mgt_config.o
    rm -f amq_mgt_config.opp
    rm -f amq_mgt_connection_test_test.o
    rm -f amq_mgt_connection_test_test
    rm -f amq_mgt_connection.o
    rm -f amq_mgt_connection.opp
    rm -f amq_mgt_queue_connection_test_test.o
    rm -f amq_mgt_queue_connection_test_test
    rm -f amq_mgt_queue_connection.o
    rm -f amq_mgt_queue_connection.opp
    rm -f amq_mgt_connection_queue_test_test.o
    rm -f amq_mgt_connection_queue_test_test
    rm -f amq_mgt_connection_queue.o
    rm -f amq_mgt_connection_queue.opp
    rm -f amq_mgt_console_test.o
    rm -f amq_mgt_console_test
    rm -f amq_mgt_console.o
    rm -f amq_mgt_broker_test.o
    rm -f amq_mgt_broker_test
    rm -f amq_mgt_broker.o
    rm -f amq_mgt_exchange_test.o
    rm -f amq_mgt_exchange_test
    rm -f amq_mgt_exchange.o
    rm -f amq_mgt_binding_test.o
    rm -f amq_mgt_binding_test
    rm -f amq_mgt_binding.o
    rm -f amq_mgt_queue_test.o
    rm -f amq_mgt_queue_test
    rm -f amq_mgt_queue.o
    rm -f amq_mgt_config_test.o
    rm -f amq_mgt_config_test
    rm -f amq_mgt_config.o
    rm -f amq_mgt_connection_test.o
    rm -f amq_mgt_connection_test
    rm -f amq_mgt_connection.o
    rm -f amq_mgt_queue_connection_test.o
    rm -f amq_mgt_queue_connection_test
    rm -f amq_mgt_queue_connection.o
    rm -f amq_mgt_connection_queue_test.o
    rm -f amq_mgt_connection_queue_test
    rm -f amq_mgt_connection_queue.o
    #   Remove byproducts of typical work
    rm -f core* 
}

# -----------------------   REMOVE GENERATED SOURCES   ------------------------

a_remove_generated_sources() {
:
    rm -f amq_mgt_broker.icl
    rm -f amq_mgt_exchange.icl
    rm -f amq_mgt_binding.icl
    rm -f amq_mgt_queue.icl
    rm -f amq_mgt_config.icl
    rm -f amq_mgt_connection.icl
    rm -f amq_mgt_queue_connection.icl
    rm -f amq_mgt_connection_queue.icl
    rm -f amq_mgt_console_test.c
    rm -f amq_mgt_console.h
    rm -f amq_mgt_console.c
    rm -f amq_mgt_console.hpp
    rm -f amq_mgt_console.cpp
    rm -f amq_mgt_broker_test.c
    rm -f amq_mgt_broker.h
    rm -f amq_mgt_broker.c
    rm -f amq_mgt_broker.hpp
    rm -f amq_mgt_broker.cpp
    rm -f amq_mgt_exchange_test.c
    rm -f amq_mgt_exchange.h
    rm -f amq_mgt_exchange.c
    rm -f amq_mgt_exchange.hpp
    rm -f amq_mgt_exchange.cpp
    rm -f amq_mgt_binding_test.c
    rm -f amq_mgt_binding.h
    rm -f amq_mgt_binding.c
    rm -f amq_mgt_binding.hpp
    rm -f amq_mgt_binding.cpp
    rm -f amq_mgt_queue_test.c
    rm -f amq_mgt_queue.h
    rm -f amq_mgt_queue.c
    rm -f amq_mgt_queue.hpp
    rm -f amq_mgt_queue.cpp
    rm -f amq_mgt_config_test.c
    rm -f amq_mgt_config.h
    rm -f amq_mgt_config.c
    rm -f amq_mgt_config.hpp
    rm -f amq_mgt_config.cpp
    rm -f amq_mgt_connection_test.c
    rm -f amq_mgt_connection.h
    rm -f amq_mgt_connection.c
    rm -f amq_mgt_connection.hpp
    rm -f amq_mgt_connection.cpp
    rm -f amq_mgt_queue_connection_test.c
    rm -f amq_mgt_queue_connection.h
    rm -f amq_mgt_queue_connection.c
    rm -f amq_mgt_queue_connection.hpp
    rm -f amq_mgt_queue_connection.cpp
    rm -f amq_mgt_connection_queue_test.c
    rm -f amq_mgt_connection_queue.h
    rm -f amq_mgt_connection_queue.c
    rm -f amq_mgt_connection_queue.hpp
    rm -f amq_mgt_connection_queue.cpp
    rm -f stamp_generate
    rm -f OpenAMQ_Operate_*.zip
    rm -f OpenAMQ_Operate_*.tar.gz
}

# ------------------------   REPORT HELP INFORMATION   ------------------------

a_report_help_information() {
:
    echo "The commands you can currently use on this project are:"
    echo ""
    eval "actions_$state"
}

# ------------------------   REPORT PROJECT VERSION   -------------------------

a_report_project_version() {
:
    echo "OpenAMQ_Operate-1.3d1"
}

# -------------------------   RUN REGRESSION TESTS   --------------------------

a_run_regression_tests() {
:
    carp "Running regression tests..."
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_console_test"
    else
        RUN_COMMAND="./amq_mgt_console_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_broker_test"
    else
        RUN_COMMAND="./amq_mgt_broker_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_exchange_test"
    else
        RUN_COMMAND="./amq_mgt_exchange_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_binding_test"
    else
        RUN_COMMAND="./amq_mgt_binding_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_queue_test"
    else
        RUN_COMMAND="./amq_mgt_queue_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_config_test"
    else
        RUN_COMMAND="./amq_mgt_config_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_connection_test"
    else
        RUN_COMMAND="./amq_mgt_connection_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_queue_connection_test"
    else
        RUN_COMMAND="./amq_mgt_queue_connection_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./amq_mgt_connection_queue_test"
    else
        RUN_COMMAND="./amq_mgt_connection_queue_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    #   Run local selftest script if present
    if [ -f ./selftest ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./selftest"
    sh ./selftest || croak "\"sh ./selftest\" failed"
    fi
}

# ----------------------   USE SOURCE CONTROL REVISION   ----------------------

a_use_source_control_revision() {
:
    if [ -d .svn ]; then
        SVN_REVISION="`svn info | awk '/^Revision:/ { print $2 }'`"
    else
        SVN_REVISION="svn"
    fi
    MY_VERSION=${MY_VERSION}-${SVN_REVISION}
}

actions_initial() {
    return
}

actions_initial_check() {
    return
}

actions_repository() {
echo "build:"
    echo "  From the raw project sources, produces all generated files, and"
    echo "    compiles all source files."
echo "compile:"
    echo "  From the raw project sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the raw project sources, removes all generated"
    echo "    source and binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
echo "distrib:"
    echo "  Creates a source distribution for the project.  Note that binary"
    echo "    distributions can only be created at the product level."
echo "distsrc:"
    echo "  Equivalent to distrib, provided for compatibility."
echo "distrev:"
    echo "  Creates a source distribution for the project.  Builds distribution"
    echo "    packages based on source control version number. Note that binary"
    echo "    distributions can only be created at the product level."
actions_default
    return
}

actions_source() {
echo "build:"
    echo "  From the packaged sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
actions_default
    return
}

actions_stripped() {
echo "build:"
    echo "  From the stripped-down packaged sources, compiles all source files"
    echo "    without any code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
actions_default
    return
}

actions_default() {
echo "install:"
    echo "  Installs deliverables into the final or temporary install tree."
    echo "    This action is only valid after a successful build."
echo "test:"
    echo "  Runs regression tests for the project."
echo "help:"
    echo "  Shows a list of the commands allowed on the project."
echo "version:"
    echo "  Show project version."
    return
}

#   State machine starts here
#
firsttime=true
while [ "$1" -o "$firsttime" ]; do
  firsttime=
  state=initial
  event=ok
  debug=
  export state event debug
  while [ -n "$state" ]; do
    if [ "$inherit_state" ]; then
        check_state=$inherit_state
        inherit_state=
    else
        check_state=$state
    fi
    case "$check_state" in
    initial)
        if [ -n "$debug" ]; then
            echo "State: initial"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        ok)
            if [ -n "$debug" ]; then
                echo "Event: ok"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check operating context"
            fi
            if [ -z "$exception" ]; then
                a_check_operating_context
            fi
            state=initial_check
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    initial_check)
        if [ -n "$debug" ]; then
            echo "State: initial check"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        repository)
            if [ -n "$debug" ]; then
                echo "Event: repository"
            fi
            event=
            exception=
            state=repository
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        source)
            if [ -n "$debug" ]; then
                echo "Event: source"
            fi
            event=
            exception=
            state=source
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        stripped)
            if [ -n "$debug" ]; then
                echo "Event: stripped"
            fi
            event=
            exception=
            state=stripped
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    repository)
        if [ -n "$debug" ]; then
            echo "State: repository"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        compile)
            if [ -n "$debug" ]; then
                echo "Event: compile"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated sources"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_sources
            fi
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrib)
            if [ -n "$debug" ]; then
                echo "Event: distrib"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distsrc)
            if [ -n "$debug" ]; then
                echo "Event: distsrc"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrev)
            if [ -n "$debug" ]; then
                echo "Event: distrev"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: use source control revision"
            fi
            if [ -z "$exception" ]; then
                a_use_source_control_revision
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    source)
        if [ -n "$debug" ]; then
            echo "State: source"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    stripped)
        if [ -n "$debug" ]; then
            echo "State: stripped"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    default)
        if [ -n "$debug" ]; then
            echo "State: default"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        install)
            if [ -n "$debug" ]; then
                echo "Event: install"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: install deliverables"
            fi
            if [ -z "$exception" ]; then
                a_install_deliverables
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        test)
            if [ -n "$debug" ]; then
                echo "Event: test"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: run regression tests"
            fi
            if [ -z "$exception" ]; then
                a_run_regression_tests
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        help)
            if [ -n "$debug" ]; then
                echo "Event: help"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        version)
            if [ -n "$debug" ]; then
                echo "Event: version"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report project version"
            fi
            if [ -z "$exception" ]; then
                a_report_project_version
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        empty)
            if [ -n "$debug" ]; then
                echo "Event: empty"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    esac
  done
done
