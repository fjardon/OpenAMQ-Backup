@echo off
:-
:-  Boom builder for OpenAMQ Server 1.4c1
:-  Generated by iMatix Boom from standard.pwl
:-  
:-  Copyright (c) 1996-2009 iMatix Corporation
:-  All rights reserved.
:-  
:-  This file is licensed under the BSD license as follows:
:-  
:-  Redistribution and use in source and binary forms, with or without
:-  modification, are permitted provided that the following conditions
:-  are met:
:-  
:-  * Redistributions of source code must retain the above copyright
:-    notice, this list of conditions and the following disclaimer.
:-  * Redistributions in binary form must reproduce the above copyright
:-    notice, this list of conditions and the following disclaimer in
:-    the documentation and/or other materials provided with the
:-    distribution.
:-  * Neither the name of iMatix Corporation nor the names of its
:-    contributors may be used to endorse or promote products derived
:-    from this software without specific prior written permission.
:-  
:-  THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
:-  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
:-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
:-  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
:-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
:-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
:-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
:-  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
:-  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
:-  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
:-  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
:-
:-  Start CMD.EXE version detection
verify other 2>nul
setlocal enableextensions
if errorlevel 0 goto __cmd_ok
echo %0: This command requires command extensions version 2 in CMD.EXE.  
echo %0: Please use a supported system (Windows 2000 or newer).
exit
:__cmd_ok
setlocal enabledelayedexpansion
:-  End CMD.EXE version detection
goto :init
:-
:-  Subroutine: boom_model_init
:-  Initialises BOOM_MODEL to default if not set
:-  Expands BOOM_MODEL components into individual environment variables
:-
:boom_model_init
if "!BOOM_MODEL!"=="" (
    set BOOM_MODEL=release,st
)
set BOOM_MODEL__PLACEHOLDER=1
for /f "usebackq delims==" %%v in (`set BOOM_MODEL_`) do set %%v=
set BOOM_MODEL__PLACEHOLDER=
for %%m in (!BOOM_MODEL!) do set BOOM_MODEL_%%m=1
:-  If the user set BOOM_MODEL but did not include release/debug or st/mt
:-  set these to defaults.
if not "!BOOM_MODEL_RELEASE!"=="1" (
    if not "!BOOM_MODEL_DEBUG!"=="1" (
        set BOOM_MODEL_RELEASE=1
        set BOOM_MODEL=!BOOM_MODEL!,release
    )
)
if not "!BOOM_MODEL_ST!"=="1" (
    if not "!BOOM_MODEL_MT!"=="1" (
        set BOOM_MODEL_ST=1
        set BOOM_MODEL=!BOOM_MODEL!,st
    )
)
goto :eof
:init
setlocal
:-
:-  Set environment variables to point to install location
:-  Start by using final IBASE, then handle -install path
set self=%0
set MY_VERSION=1.4c1
set OLDPATH=!PATH!
set OLDPERLLIB=!PERLLIB!
if .!IBASE!==. (
    echo boom E: [OpenAMQ_Server]: The IBASE variable is not set.  Please set it to the location where OpenAMQ Server should be installed.
    exit /b 1
)
if .%1==.-v (
    set BOOM_TRACE=1
    shift
)
call :boom_model_init
if .%1==.-install goto tempinst
:-  Normal use, use IBASE
    set PATH=!IBASE!\bin;!PATH!
    set PERLLIB=!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!IBASE!\include
    set _INSTALL_ROOT=!IBASE!
    goto process

:tempinst
:-  Building product, we use -install directory first, then IBASE
    if not exist %2 (
       echo "Invalid command syntax - please contact imatix-tech"
       exit /b 1
    )
    pushd %2
    set _LOCAL_BASE=!cd!
    popd
    set PATH=!_LOCAL_BASE!\bin;!IBASE!\bin;!PATH!
    set PERLLIB=!_LOCAL_BASE!\bin;!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!_LOCAL_BASE!\include;!IBASE!\include
    set _INSTALL_ROOT=!_LOCAL_BASE!
    shift
    shift
    goto process

:batch
    shift

:process
    set state=initial
    set event=ok
    set debug=0
    goto s_!state!

:---------------------------   BUILD BINARY FILES   ---------------------------

:a_build_binary_files
    goto :eof

:--------------------------   BUILD SOURCE PACKAGES   -------------------------

:a_build_source_packages
   if exist _package.lst del _package.lst
    if exist server\gpl_output echo server\gpl_output>>_package.lst
    if exist server\version.h echo server\version.h>>_package.lst
    if exist server\amq_server.asl echo server\amq_server.asl>>_package.lst
    if exist server\amq_server.c echo server\amq_server.c>>_package.lst
    if exist server\amq_server_main.inc echo server\amq_server_main.inc>>_package.lst
    if exist server\amq_server_config.opf echo server\amq_server_config.opf>>_package.lst
    if exist server\amq_server_agent.smt echo server\amq_server_agent.smt>>_package.lst
    if exist server\amq_server_classes.icl echo server\amq_server_classes.icl>>_package.lst
    if exist server\amq_server_connection.icl echo server\amq_server_connection.icl>>_package.lst
    if exist server\amq_server_connection_table.icl echo server\amq_server_connection_table.icl>>_package.lst
    if exist server\amq_server_connection_list.icl echo server\amq_server_connection_list.icl>>_package.lst
    if exist server\amq_server_channel.icl echo server\amq_server_channel.icl>>_package.lst
    if exist server\amq_server_channel_table.icl echo server\amq_server_channel_table.icl>>_package.lst
    if exist server\amq_server_resource.rc echo server\amq_server_resource.rc>>_package.lst
    if exist server\amq_server_resource.icl echo server\amq_server_resource.icl>>_package.lst
    if exist server\amq_broker.icl echo server\amq_broker.icl>>_package.lst
    if exist server\amq_peering.icl echo server\amq_peering.icl>>_package.lst
    if exist server\amq_peer.asl echo server\amq_peer.asl>>_package.lst
    if exist server\amq_peer_method.icl echo server\amq_peer_method.icl>>_package.lst
    if exist server\amq_peer_config.opf echo server\amq_peer_config.opf>>_package.lst
    if exist server\amq_peer_agent.smt echo server\amq_peer_agent.smt>>_package.lst
    if exist server\amq_exchange_system.icl echo server\amq_exchange_system.icl>>_package.lst
    if exist server\amq_exchange_fanout.icl echo server\amq_exchange_fanout.icl>>_package.lst
    if exist server\amq_exchange_direct.icl echo server\amq_exchange_direct.icl>>_package.lst
    if exist server\amq_exchange_topic.icl echo server\amq_exchange_topic.icl>>_package.lst
    if exist server\amq_exchange_headers.icl echo server\amq_exchange_headers.icl>>_package.lst
    if exist server\amq_exchange_regexp.icl echo server\amq_exchange_regexp.icl>>_package.lst
    if exist server\amq_exchange_base.icl echo server\amq_exchange_base.icl>>_package.lst
    if exist server\amq_exchange.icl echo server\amq_exchange.icl>>_package.lst
    if exist server\amq_exchange_table.icl echo server\amq_exchange_table.icl>>_package.lst
    if exist server\amq_exchange_list.icl echo server\amq_exchange_list.icl>>_package.lst
    if exist server\amq_binding.icl echo server\amq_binding.icl>>_package.lst
    if exist server\amq_binding_list.icl echo server\amq_binding_list.icl>>_package.lst
    if exist server\amq_binding_mgt.icl echo server\amq_binding_mgt.icl>>_package.lst
    if exist server\amq_queue_bindings_list.icl echo server\amq_queue_bindings_list.icl>>_package.lst
    if exist server\amq_queue_bindings_list_table.icl echo server\amq_queue_bindings_list_table.icl>>_package.lst
    if exist server\amq_hitset.icl echo server\amq_hitset.icl>>_package.lst
    if exist server\amq_index.icl echo server\amq_index.icl>>_package.lst
    if exist server\amq_index_hash.icl echo server\amq_index_hash.icl>>_package.lst
    if exist server\amq_index_array.icl echo server\amq_index_array.icl>>_package.lst
    if exist server\amq_queue.icl echo server\amq_queue.icl>>_package.lst
    if exist server\amq_queue_table.icl echo server\amq_queue_table.icl>>_package.lst
    if exist server\amq_queue_list.icl echo server\amq_queue_list.icl>>_package.lst
    if exist server\amq_queue_set.icl echo server\amq_queue_set.icl>>_package.lst
    if exist server\amq_queue_basic.icl echo server\amq_queue_basic.icl>>_package.lst
    if exist server\amq_connection.icl echo server\amq_connection.icl>>_package.lst
    if exist server\amq_connection_by_broker.icl echo server\amq_connection_by_broker.icl>>_package.lst
    if exist server\amq_consumer.icl echo server\amq_consumer.icl>>_package.lst
    if exist server\amq_consumer_table.icl echo server\amq_consumer_table.icl>>_package.lst
    if exist server\amq_consumer_by_queue.icl echo server\amq_consumer_by_queue.icl>>_package.lst
    if exist server\amq_consumer_by_channel.icl echo server\amq_consumer_by_channel.icl>>_package.lst
    if exist server\amq_consumer_basic.icl echo server\amq_consumer_basic.icl>>_package.lst
    if exist server\amq_queue_connection.icl echo server\amq_queue_connection.icl>>_package.lst
    if exist server\amq_queue_binding.icl echo server\amq_queue_binding.icl>>_package.lst
    if exist server\amq_connection_queue.icl echo server\amq_connection_queue.icl>>_package.lst
    if exist server\amq_resource.icl echo server\amq_resource.icl>>_package.lst
    if exist server\amq_server_method.icl echo server\amq_server_method.icl>>_package.lst
    if exist server\amq_server_base.cfg echo server\amq_server_base.cfg>>_package.lst
    if exist server\amq_federation.icl echo server\amq_federation.icl>>_package.lst
    if exist server\amq_failover.icl echo server\amq_failover.icl>>_package.lst
    if exist server\amq_lease.icl echo server\amq_lease.icl>>_package.lst
    if exist server\amq_lease_table.icl echo server\amq_lease_table.icl>>_package.lst
    if exist server\amq_console.icl echo server\amq_console.icl>>_package.lst
    if exist server\amq_console_object.icl echo server\amq_console_object.icl>>_package.lst
    if exist server\amq_console_class.icl echo server\amq_console_class.icl>>_package.lst
    if exist server\amq_console_schema.gsl echo server\amq_console_schema.gsl>>_package.lst
    if exist server\amq_console_schema.cml echo server\amq_console_schema.cml>>_package.lst
    if exist server\amq_console_schema.xml echo server\amq_console_schema.xml>>_package.lst
    if exist server\amq_console_config.gsl echo server\amq_console_config.gsl>>_package.lst
    if exist server\amq_console_config.icl echo server\amq_console_config.icl>>_package.lst
    if exist server\amq_cml.icl echo server\amq_cml.icl>>_package.lst
    if exist server\restms_class_test.pal echo server\restms_class_test.pal>>_package.lst
    if exist server\prelude.pdl echo server\prelude.pdl>>_package.lst
    if exist server\license.gpl echo server\license.gpl>>_package.lst
    if exist server\project.pdl echo server\project.pdl>>_package.lst
    if exist server\readme.txt echo server\readme.txt>>_package.lst
    if exist server\amq_server_config.icl echo server\amq_server_config.icl>>_package.lst
    if exist server\amq_server_config_test.c echo server\amq_server_config_test.c>>_package.lst
    if exist server\amq_server_config.h echo server\amq_server_config.h>>_package.lst
    if exist server\amq_server_config.c echo server\amq_server_config.c>>_package.lst
    if exist server\amq_server_config.txt echo server\amq_server_config.txt>>_package.lst
    if exist server\amq_server_agent.h echo server\amq_server_agent.h>>_package.lst
    if exist server\amq_server_agent.c echo server\amq_server_agent.c>>_package.lst
    if exist server\amq_server_classes.h echo server\amq_server_classes.h>>_package.lst
    if exist server\amq_server_classes.c echo server\amq_server_classes.c>>_package.lst
    if exist server\amq_server_connection_test.c echo server\amq_server_connection_test.c>>_package.lst
    if exist server\amq_server_connection.h echo server\amq_server_connection.h>>_package.lst
    if exist server\amq_server_connection.c echo server\amq_server_connection.c>>_package.lst
    if exist server\amq_server_connection_table_test.c echo server\amq_server_connection_table_test.c>>_package.lst
    if exist server\amq_server_connection_table.h echo server\amq_server_connection_table.h>>_package.lst
    if exist server\amq_server_connection_table.c echo server\amq_server_connection_table.c>>_package.lst
    if exist server\amq_server_connection_list_test.c echo server\amq_server_connection_list_test.c>>_package.lst
    if exist server\amq_server_connection_list.h echo server\amq_server_connection_list.h>>_package.lst
    if exist server\amq_server_connection_list.c echo server\amq_server_connection_list.c>>_package.lst
    if exist server\amq_server_channel_agent.smt echo server\amq_server_channel_agent.smt>>_package.lst
    if exist server\amq_server_channel_agent.h echo server\amq_server_channel_agent.h>>_package.lst
    if exist server\amq_server_channel_agent.c echo server\amq_server_channel_agent.c>>_package.lst
    if exist server\amq_server_channel_test.c echo server\amq_server_channel_test.c>>_package.lst
    if exist server\amq_server_channel.h echo server\amq_server_channel.h>>_package.lst
    if exist server\amq_server_channel.c echo server\amq_server_channel.c>>_package.lst
    if exist server\amq_server_channel_table_test.c echo server\amq_server_channel_table_test.c>>_package.lst
    if exist server\amq_server_channel_table.h echo server\amq_server_channel_table.h>>_package.lst
    if exist server\amq_server_channel_table.c echo server\amq_server_channel_table.c>>_package.lst
    if exist server\amq_server_resource_test.c echo server\amq_server_resource_test.c>>_package.lst
    if exist server\amq_server_resource.h echo server\amq_server_resource.h>>_package.lst
    if exist server\amq_server_resource.c echo server\amq_server_resource.c>>_package.lst
    if exist server\amq_broker_agent.smt echo server\amq_broker_agent.smt>>_package.lst
    if exist server\amq_broker_agent.h echo server\amq_broker_agent.h>>_package.lst
    if exist server\amq_broker_agent.c echo server\amq_broker_agent.c>>_package.lst
    if exist server\amq_broker_test.c echo server\amq_broker_test.c>>_package.lst
    if exist server\amq_broker.h echo server\amq_broker.h>>_package.lst
    if exist server\amq_broker.c echo server\amq_broker.c>>_package.lst
    if exist server\amq_peering_agent.smt echo server\amq_peering_agent.smt>>_package.lst
    if exist server\amq_peering_agent.h echo server\amq_peering_agent.h>>_package.lst
    if exist server\amq_peering_agent.c echo server\amq_peering_agent.c>>_package.lst
    if exist server\amq_peering_test.c echo server\amq_peering_test.c>>_package.lst
    if exist server\amq_peering.h echo server\amq_peering.h>>_package.lst
    if exist server\amq_peering.c echo server\amq_peering.c>>_package.lst
    if exist server\amq_peer_method_test.c echo server\amq_peer_method_test.c>>_package.lst
    if exist server\amq_peer_method.h echo server\amq_peer_method.h>>_package.lst
    if exist server\amq_peer_method.c echo server\amq_peer_method.c>>_package.lst
    if exist server\amq_peer_config.icl echo server\amq_peer_config.icl>>_package.lst
    if exist server\amq_peer_config_test.c echo server\amq_peer_config_test.c>>_package.lst
    if exist server\amq_peer_config.h echo server\amq_peer_config.h>>_package.lst
    if exist server\amq_peer_config.c echo server\amq_peer_config.c>>_package.lst
    if exist server\amq_peer_config.txt echo server\amq_peer_config.txt>>_package.lst
    if exist server\amq_peer_agent.h echo server\amq_peer_agent.h>>_package.lst
    if exist server\amq_peer_agent.c echo server\amq_peer_agent.c>>_package.lst
    if exist server\amq_exchange_system_test.c echo server\amq_exchange_system_test.c>>_package.lst
    if exist server\amq_exchange_system.h echo server\amq_exchange_system.h>>_package.lst
    if exist server\amq_exchange_system.c echo server\amq_exchange_system.c>>_package.lst
    if exist server\amq_exchange_fanout_test.c echo server\amq_exchange_fanout_test.c>>_package.lst
    if exist server\amq_exchange_fanout.h echo server\amq_exchange_fanout.h>>_package.lst
    if exist server\amq_exchange_fanout.c echo server\amq_exchange_fanout.c>>_package.lst
    if exist server\amq_exchange_direct_test.c echo server\amq_exchange_direct_test.c>>_package.lst
    if exist server\amq_exchange_direct.h echo server\amq_exchange_direct.h>>_package.lst
    if exist server\amq_exchange_direct.c echo server\amq_exchange_direct.c>>_package.lst
    if exist server\amq_exchange_topic_test.c echo server\amq_exchange_topic_test.c>>_package.lst
    if exist server\amq_exchange_topic.h echo server\amq_exchange_topic.h>>_package.lst
    if exist server\amq_exchange_topic.c echo server\amq_exchange_topic.c>>_package.lst
    if exist server\amq_exchange_headers_test.c echo server\amq_exchange_headers_test.c>>_package.lst
    if exist server\amq_exchange_headers.h echo server\amq_exchange_headers.h>>_package.lst
    if exist server\amq_exchange_headers.c echo server\amq_exchange_headers.c>>_package.lst
    if exist server\amq_exchange_regexp_test.c echo server\amq_exchange_regexp_test.c>>_package.lst
    if exist server\amq_exchange_regexp.h echo server\amq_exchange_regexp.h>>_package.lst
    if exist server\amq_exchange_regexp.c echo server\amq_exchange_regexp.c>>_package.lst
    if exist server\amq_exchange_agent.smt echo server\amq_exchange_agent.smt>>_package.lst
    if exist server\amq_exchange_agent.h echo server\amq_exchange_agent.h>>_package.lst
    if exist server\amq_exchange_agent.c echo server\amq_exchange_agent.c>>_package.lst
    if exist server\amq_exchange_test.c echo server\amq_exchange_test.c>>_package.lst
    if exist server\amq_exchange.h echo server\amq_exchange.h>>_package.lst
    if exist server\amq_exchange.c echo server\amq_exchange.c>>_package.lst
    if exist server\amq_exchange_table_test.c echo server\amq_exchange_table_test.c>>_package.lst
    if exist server\amq_exchange_table.h echo server\amq_exchange_table.h>>_package.lst
    if exist server\amq_exchange_table.c echo server\amq_exchange_table.c>>_package.lst
    if exist server\amq_exchange_list_test.c echo server\amq_exchange_list_test.c>>_package.lst
    if exist server\amq_exchange_list.h echo server\amq_exchange_list.h>>_package.lst
    if exist server\amq_exchange_list.c echo server\amq_exchange_list.c>>_package.lst
    if exist server\amq_binding_test.c echo server\amq_binding_test.c>>_package.lst
    if exist server\amq_binding.h echo server\amq_binding.h>>_package.lst
    if exist server\amq_binding.c echo server\amq_binding.c>>_package.lst
    if exist server\amq_binding_list_test.c echo server\amq_binding_list_test.c>>_package.lst
    if exist server\amq_binding_list.h echo server\amq_binding_list.h>>_package.lst
    if exist server\amq_binding_list.c echo server\amq_binding_list.c>>_package.lst
    if exist server\amq_binding_mgt_agent.smt echo server\amq_binding_mgt_agent.smt>>_package.lst
    if exist server\amq_binding_mgt_agent.h echo server\amq_binding_mgt_agent.h>>_package.lst
    if exist server\amq_binding_mgt_agent.c echo server\amq_binding_mgt_agent.c>>_package.lst
    if exist server\amq_binding_mgt_test.c echo server\amq_binding_mgt_test.c>>_package.lst
    if exist server\amq_binding_mgt.h echo server\amq_binding_mgt.h>>_package.lst
    if exist server\amq_binding_mgt.c echo server\amq_binding_mgt.c>>_package.lst
    if exist server\amq_queue_bindings_list_test.c echo server\amq_queue_bindings_list_test.c>>_package.lst
    if exist server\amq_queue_bindings_list.h echo server\amq_queue_bindings_list.h>>_package.lst
    if exist server\amq_queue_bindings_list.c echo server\amq_queue_bindings_list.c>>_package.lst
    if exist server\amq_queue_bindings_list_table_test.c echo server\amq_queue_bindings_list_table_test.c>>_package.lst
    if exist server\amq_queue_bindings_list_table.h echo server\amq_queue_bindings_list_table.h>>_package.lst
    if exist server\amq_queue_bindings_list_table.c echo server\amq_queue_bindings_list_table.c>>_package.lst
    if exist server\amq_hitset_test.c echo server\amq_hitset_test.c>>_package.lst
    if exist server\amq_hitset.h echo server\amq_hitset.h>>_package.lst
    if exist server\amq_hitset.c echo server\amq_hitset.c>>_package.lst
    if exist server\amq_index_test.c echo server\amq_index_test.c>>_package.lst
    if exist server\amq_index.h echo server\amq_index.h>>_package.lst
    if exist server\amq_index.c echo server\amq_index.c>>_package.lst
    if exist server\amq_index_hash_test.c echo server\amq_index_hash_test.c>>_package.lst
    if exist server\amq_index_hash.h echo server\amq_index_hash.h>>_package.lst
    if exist server\amq_index_hash.c echo server\amq_index_hash.c>>_package.lst
    if exist server\amq_index_array_test.c echo server\amq_index_array_test.c>>_package.lst
    if exist server\amq_index_array.h echo server\amq_index_array.h>>_package.lst
    if exist server\amq_index_array.c echo server\amq_index_array.c>>_package.lst
    if exist server\amq_queue_agent.smt echo server\amq_queue_agent.smt>>_package.lst
    if exist server\amq_queue_agent.h echo server\amq_queue_agent.h>>_package.lst
    if exist server\amq_queue_agent.c echo server\amq_queue_agent.c>>_package.lst
    if exist server\amq_queue_test.c echo server\amq_queue_test.c>>_package.lst
    if exist server\amq_queue.h echo server\amq_queue.h>>_package.lst
    if exist server\amq_queue.c echo server\amq_queue.c>>_package.lst
    if exist server\amq_queue_table_test.c echo server\amq_queue_table_test.c>>_package.lst
    if exist server\amq_queue_table.h echo server\amq_queue_table.h>>_package.lst
    if exist server\amq_queue_table.c echo server\amq_queue_table.c>>_package.lst
    if exist server\amq_queue_list_test.c echo server\amq_queue_list_test.c>>_package.lst
    if exist server\amq_queue_list.h echo server\amq_queue_list.h>>_package.lst
    if exist server\amq_queue_list.c echo server\amq_queue_list.c>>_package.lst
    if exist server\amq_queue_set_test.c echo server\amq_queue_set_test.c>>_package.lst
    if exist server\amq_queue_set.h echo server\amq_queue_set.h>>_package.lst
    if exist server\amq_queue_set.c echo server\amq_queue_set.c>>_package.lst
    if exist server\amq_queue_basic_test.c echo server\amq_queue_basic_test.c>>_package.lst
    if exist server\amq_queue_basic.h echo server\amq_queue_basic.h>>_package.lst
    if exist server\amq_queue_basic.c echo server\amq_queue_basic.c>>_package.lst
    if exist server\amq_connection_agent.smt echo server\amq_connection_agent.smt>>_package.lst
    if exist server\amq_connection_agent.h echo server\amq_connection_agent.h>>_package.lst
    if exist server\amq_connection_agent.c echo server\amq_connection_agent.c>>_package.lst
    if exist server\amq_connection_test.c echo server\amq_connection_test.c>>_package.lst
    if exist server\amq_connection.h echo server\amq_connection.h>>_package.lst
    if exist server\amq_connection.c echo server\amq_connection.c>>_package.lst
    if exist server\amq_connection_by_broker_test.c echo server\amq_connection_by_broker_test.c>>_package.lst
    if exist server\amq_connection_by_broker.h echo server\amq_connection_by_broker.h>>_package.lst
    if exist server\amq_connection_by_broker.c echo server\amq_connection_by_broker.c>>_package.lst
    if exist server\amq_consumer_test.c echo server\amq_consumer_test.c>>_package.lst
    if exist server\amq_consumer.h echo server\amq_consumer.h>>_package.lst
    if exist server\amq_consumer.c echo server\amq_consumer.c>>_package.lst
    if exist server\amq_consumer_table_test.c echo server\amq_consumer_table_test.c>>_package.lst
    if exist server\amq_consumer_table.h echo server\amq_consumer_table.h>>_package.lst
    if exist server\amq_consumer_table.c echo server\amq_consumer_table.c>>_package.lst
    if exist server\amq_consumer_by_queue_test.c echo server\amq_consumer_by_queue_test.c>>_package.lst
    if exist server\amq_consumer_by_queue.h echo server\amq_consumer_by_queue.h>>_package.lst
    if exist server\amq_consumer_by_queue.c echo server\amq_consumer_by_queue.c>>_package.lst
    if exist server\amq_consumer_by_channel_test.c echo server\amq_consumer_by_channel_test.c>>_package.lst
    if exist server\amq_consumer_by_channel.h echo server\amq_consumer_by_channel.h>>_package.lst
    if exist server\amq_consumer_by_channel.c echo server\amq_consumer_by_channel.c>>_package.lst
    if exist server\amq_consumer_basic_test.c echo server\amq_consumer_basic_test.c>>_package.lst
    if exist server\amq_consumer_basic.h echo server\amq_consumer_basic.h>>_package.lst
    if exist server\amq_consumer_basic.c echo server\amq_consumer_basic.c>>_package.lst
    if exist server\amq_queue_connection_agent.smt echo server\amq_queue_connection_agent.smt>>_package.lst
    if exist server\amq_queue_connection_agent.h echo server\amq_queue_connection_agent.h>>_package.lst
    if exist server\amq_queue_connection_agent.c echo server\amq_queue_connection_agent.c>>_package.lst
    if exist server\amq_queue_connection_test.c echo server\amq_queue_connection_test.c>>_package.lst
    if exist server\amq_queue_connection.h echo server\amq_queue_connection.h>>_package.lst
    if exist server\amq_queue_connection.c echo server\amq_queue_connection.c>>_package.lst
    if exist server\amq_queue_binding_agent.smt echo server\amq_queue_binding_agent.smt>>_package.lst
    if exist server\amq_queue_binding_agent.h echo server\amq_queue_binding_agent.h>>_package.lst
    if exist server\amq_queue_binding_agent.c echo server\amq_queue_binding_agent.c>>_package.lst
    if exist server\amq_queue_binding_test.c echo server\amq_queue_binding_test.c>>_package.lst
    if exist server\amq_queue_binding.h echo server\amq_queue_binding.h>>_package.lst
    if exist server\amq_queue_binding.c echo server\amq_queue_binding.c>>_package.lst
    if exist server\amq_connection_queue_agent.smt echo server\amq_connection_queue_agent.smt>>_package.lst
    if exist server\amq_connection_queue_agent.h echo server\amq_connection_queue_agent.h>>_package.lst
    if exist server\amq_connection_queue_agent.c echo server\amq_connection_queue_agent.c>>_package.lst
    if exist server\amq_connection_queue_test.c echo server\amq_connection_queue_test.c>>_package.lst
    if exist server\amq_connection_queue.h echo server\amq_connection_queue.h>>_package.lst
    if exist server\amq_connection_queue.c echo server\amq_connection_queue.c>>_package.lst
    if exist server\amq_resource_test.c echo server\amq_resource_test.c>>_package.lst
    if exist server\amq_resource.h echo server\amq_resource.h>>_package.lst
    if exist server\amq_resource.c echo server\amq_resource.c>>_package.lst
    if exist server\amq_server_method_test.c echo server\amq_server_method_test.c>>_package.lst
    if exist server\amq_server_method.h echo server\amq_server_method.h>>_package.lst
    if exist server\amq_server_method.c echo server\amq_server_method.c>>_package.lst
    if exist server\amq_federation_agent.smt echo server\amq_federation_agent.smt>>_package.lst
    if exist server\amq_federation_agent.h echo server\amq_federation_agent.h>>_package.lst
    if exist server\amq_federation_agent.c echo server\amq_federation_agent.c>>_package.lst
    if exist server\amq_federation_test.c echo server\amq_federation_test.c>>_package.lst
    if exist server\amq_federation.h echo server\amq_federation.h>>_package.lst
    if exist server\amq_federation.c echo server\amq_federation.c>>_package.lst
    if exist server\amq_failover_agent.smt echo server\amq_failover_agent.smt>>_package.lst
    if exist server\amq_failover_agent.h echo server\amq_failover_agent.h>>_package.lst
    if exist server\amq_failover_agent.c echo server\amq_failover_agent.c>>_package.lst
    if exist server\amq_failover_test.c echo server\amq_failover_test.c>>_package.lst
    if exist server\amq_failover.h echo server\amq_failover.h>>_package.lst
    if exist server\amq_failover.c echo server\amq_failover.c>>_package.lst
    if exist server\amq_lease_test.c echo server\amq_lease_test.c>>_package.lst
    if exist server\amq_lease.h echo server\amq_lease.h>>_package.lst
    if exist server\amq_lease.c echo server\amq_lease.c>>_package.lst
    if exist server\amq_lease_table_test.c echo server\amq_lease_table_test.c>>_package.lst
    if exist server\amq_lease_table.h echo server\amq_lease_table.h>>_package.lst
    if exist server\amq_lease_table.c echo server\amq_lease_table.c>>_package.lst
    if exist server\amq_console_agent.smt echo server\amq_console_agent.smt>>_package.lst
    if exist server\amq_console_agent.h echo server\amq_console_agent.h>>_package.lst
    if exist server\amq_console_agent.c echo server\amq_console_agent.c>>_package.lst
    if exist server\amq_console_test.c echo server\amq_console_test.c>>_package.lst
    if exist server\amq_console.h echo server\amq_console.h>>_package.lst
    if exist server\amq_console.c echo server\amq_console.c>>_package.lst
    if exist server\amq_console_class_test.c echo server\amq_console_class_test.c>>_package.lst
    if exist server\amq_console_class.h echo server\amq_console_class.h>>_package.lst
    if exist server\amq_console_class.c echo server\amq_console_class.c>>_package.lst
    if exist server\amq_console_config_agent.smt echo server\amq_console_config_agent.smt>>_package.lst
    if exist server\amq_console_config_agent.h echo server\amq_console_config_agent.h>>_package.lst
    if exist server\amq_console_config_agent.c echo server\amq_console_config_agent.c>>_package.lst
    if exist server\amq_console_config_test.c echo server\amq_console_config_test.c>>_package.lst
    if exist server\amq_console_config.h echo server\amq_console_config.h>>_package.lst
    if exist server\amq_console_config.c echo server\amq_console_config.c>>_package.lst
    if exist server\amq_cml_test.c echo server\amq_cml_test.c>>_package.lst
    if exist server\amq_cml.h echo server\amq_cml.h>>_package.lst
    if exist server\amq_cml.c echo server\amq_cml.c>>_package.lst
    if exist server\stamp_generate echo server\stamp_generate>>_package.lst
    if exist server\boomakew.bat echo server\boomakew.bat>>_package.lst
    if exist server\configure echo server\configure>>_package.lst
    if exist server\Makefile.unix echo server\Makefile.unix>>_package.lst
    if exist server\boomake echo server\boomake>>_package.lst
    if exist server\configure.bat echo server\configure.bat>>_package.lst
    if exist server\Makefile.win32 echo server\Makefile.win32>>_package.lst
    if exist server\boomake.bat echo server\boomake.bat>>_package.lst
    if exist server\amq_server.vcproj echo server\amq_server.vcproj>>_package.lst
    if exist server\libamq_server.vcproj echo server\libamq_server.vcproj>>_package.lst
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    echo boom I: [OpenAMQ_Server]: Building OpenAMQ_Server-!MY_VERSION!-src.zip...
    zip  -rq _package -@<_package.lst
    unzip -q _package -d OpenAMQ_Server-!MY_VERSION!
    if exist  OpenAMQ_Server-!MY_VERSION!-src.zip del OpenAMQ_Server-!MY_VERSION!-src.zip
    zip -rmq OpenAMQ_Server-!MY_VERSION!-src.zip OpenAMQ_Server-!MY_VERSION!
    del _package.zip
    del _package.lst
    del stamp_source
    goto :eof

:----------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

:a_check_all_source_files_exist
    if not exist gpl_output (
        echo boom E: [OpenAMQ_Server]: gpl_output is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist version.h (
        echo boom E: [OpenAMQ_Server]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.asl (
        echo boom E: [OpenAMQ_Server]: amq_server.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.c (
        echo boom E: [OpenAMQ_Server]: amq_server.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_main.inc (
        echo boom E: [OpenAMQ_Server]: amq_server_main.inc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.opf (
        echo boom E: [OpenAMQ_Server]: amq_server_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.rc (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.rc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.icl (
        echo boom E: [OpenAMQ_Server]: amq_broker.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.icl (
        echo boom E: [OpenAMQ_Server]: amq_peering.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer.asl (
        echo boom E: [OpenAMQ_Server]: amq_peer.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method.icl (
        echo boom E: [OpenAMQ_Server]: amq_peer_method.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.opf (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_base.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_base.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.icl (
        echo boom E: [OpenAMQ_Server]: amq_hitset.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.icl (
        echo boom E: [OpenAMQ_Server]: amq_index.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash.icl (
        echo boom E: [OpenAMQ_Server]: amq_index_hash.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array.icl (
        echo boom E: [OpenAMQ_Server]: amq_index_array.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.icl (
        echo boom E: [OpenAMQ_Server]: amq_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_method.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_base.cfg (
        echo boom E: [OpenAMQ_Server]: amq_server_base.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.icl (
        echo boom E: [OpenAMQ_Server]: amq_federation.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.icl (
        echo boom E: [OpenAMQ_Server]: amq_failover.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.icl (
        echo boom E: [OpenAMQ_Server]: amq_lease.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_lease_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.icl (
        echo boom E: [OpenAMQ_Server]: amq_console.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_object.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_object.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_class.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.gsl (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.cml (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.cml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.xml (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.gsl (
        echo boom E: [OpenAMQ_Server]: amq_console_config.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.icl (
        echo boom E: [OpenAMQ_Server]: amq_cml.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist restms_class_test.pal (
        echo boom E: [OpenAMQ_Server]: restms_class_test.pal is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [OpenAMQ_Server]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Server]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.h (
        echo boom E: [OpenAMQ_Server]: amq_server_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.c (
        echo boom E: [OpenAMQ_Server]: amq_server_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.txt (
        echo boom E: [OpenAMQ_Server]: amq_server_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.h (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.c (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_resource_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.h (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.c (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_test.c (
        echo boom E: [OpenAMQ_Server]: amq_broker_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.h (
        echo boom E: [OpenAMQ_Server]: amq_broker.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.c (
        echo boom E: [OpenAMQ_Server]: amq_broker.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_test.c (
        echo boom E: [OpenAMQ_Server]: amq_peering_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.h (
        echo boom E: [OpenAMQ_Server]: amq_peering.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.c (
        echo boom E: [OpenAMQ_Server]: amq_peering.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method_test.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_method_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_method.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.icl (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config_test.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.txt (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_test.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.h (
        echo boom E: [OpenAMQ_Server]: amq_binding.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.c (
        echo boom E: [OpenAMQ_Server]: amq_binding.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_test.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset_test.c (
        echo boom E: [OpenAMQ_Server]: amq_hitset_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.h (
        echo boom E: [OpenAMQ_Server]: amq_hitset.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.c (
        echo boom E: [OpenAMQ_Server]: amq_hitset.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_test.c (
        echo boom E: [OpenAMQ_Server]: amq_index_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.h (
        echo boom E: [OpenAMQ_Server]: amq_index.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.c (
        echo boom E: [OpenAMQ_Server]: amq_index.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash_test.c (
        echo boom E: [OpenAMQ_Server]: amq_index_hash_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash.h (
        echo boom E: [OpenAMQ_Server]: amq_index_hash.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash.c (
        echo boom E: [OpenAMQ_Server]: amq_index_hash.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array_test.c (
        echo boom E: [OpenAMQ_Server]: amq_index_array_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array.h (
        echo boom E: [OpenAMQ_Server]: amq_index_array.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array.c (
        echo boom E: [OpenAMQ_Server]: amq_index_array.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.c (
        echo boom E: [OpenAMQ_Server]: amq_queue.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_set_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_test.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.c (
        echo boom E: [OpenAMQ_Server]: amq_connection.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker_test.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_test.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource_test.c (
        echo boom E: [OpenAMQ_Server]: amq_resource_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.h (
        echo boom E: [OpenAMQ_Server]: amq_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.c (
        echo boom E: [OpenAMQ_Server]: amq_resource.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_method_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method.h (
        echo boom E: [OpenAMQ_Server]: amq_server_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method.c (
        echo boom E: [OpenAMQ_Server]: amq_server_method.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_test.c (
        echo boom E: [OpenAMQ_Server]: amq_federation_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.h (
        echo boom E: [OpenAMQ_Server]: amq_federation.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.c (
        echo boom E: [OpenAMQ_Server]: amq_federation.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_test.c (
        echo boom E: [OpenAMQ_Server]: amq_failover_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.h (
        echo boom E: [OpenAMQ_Server]: amq_failover.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.c (
        echo boom E: [OpenAMQ_Server]: amq_failover.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_test.c (
        echo boom E: [OpenAMQ_Server]: amq_lease_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.h (
        echo boom E: [OpenAMQ_Server]: amq_lease.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.c (
        echo boom E: [OpenAMQ_Server]: amq_lease.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_lease_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table.h (
        echo boom E: [OpenAMQ_Server]: amq_lease_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table.c (
        echo boom E: [OpenAMQ_Server]: amq_lease_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_test.c (
        echo boom E: [OpenAMQ_Server]: amq_console_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.h (
        echo boom E: [OpenAMQ_Server]: amq_console.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.c (
        echo boom E: [OpenAMQ_Server]: amq_console.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class_test.c (
        echo boom E: [OpenAMQ_Server]: amq_console_class_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.h (
        echo boom E: [OpenAMQ_Server]: amq_console_class.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.c (
        echo boom E: [OpenAMQ_Server]: amq_console_class.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_test.c (
        echo boom E: [OpenAMQ_Server]: amq_console_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.h (
        echo boom E: [OpenAMQ_Server]: amq_console_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.c (
        echo boom E: [OpenAMQ_Server]: amq_console_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml_test.c (
        echo boom E: [OpenAMQ_Server]: amq_cml_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.h (
        echo boom E: [OpenAMQ_Server]: amq_cml.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.c (
        echo boom E: [OpenAMQ_Server]: amq_cml.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [OpenAMQ_Server]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [OpenAMQ_Server]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [OpenAMQ_Server]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [OpenAMQ_Server]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [OpenAMQ_Server]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [OpenAMQ_Server]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [OpenAMQ_Server]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [OpenAMQ_Server]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.vcproj (
        echo boom E: [OpenAMQ_Server]: amq_server.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist libamq_server.vcproj (
        echo boom E: [OpenAMQ_Server]: libamq_server.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:------------------------   CHECK BINARY FILES EXIST   ------------------------

:a_check_binary_files_exist
    if not exist libamq_server.lib (
        echo boom E: [OpenAMQ_Server]: libamq_server.lib is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_base.cfg (
        echo boom E: [OpenAMQ_Server]: amq_server_base.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.cml (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.cml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.xml (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.exe (
        echo boom E: [OpenAMQ_Server]: amq_server.exe is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Server]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.h (
        echo boom E: [OpenAMQ_Server]: amq_server_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.txt (
        echo boom E: [OpenAMQ_Server]: amq_server_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.h (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.h (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.h (
        echo boom E: [OpenAMQ_Server]: amq_broker.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.h (
        echo boom E: [OpenAMQ_Server]: amq_peering.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.txt (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.h (
        echo boom E: [OpenAMQ_Server]: amq_binding.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.h (
        echo boom E: [OpenAMQ_Server]: amq_hitset.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.h (
        echo boom E: [OpenAMQ_Server]: amq_index.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash.h (
        echo boom E: [OpenAMQ_Server]: amq_index_hash.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array.h (
        echo boom E: [OpenAMQ_Server]: amq_index_array.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.h (
        echo boom E: [OpenAMQ_Server]: amq_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method.h (
        echo boom E: [OpenAMQ_Server]: amq_server_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.h (
        echo boom E: [OpenAMQ_Server]: amq_federation.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.h (
        echo boom E: [OpenAMQ_Server]: amq_failover.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.h (
        echo boom E: [OpenAMQ_Server]: amq_lease.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table.h (
        echo boom E: [OpenAMQ_Server]: amq_lease_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.h (
        echo boom E: [OpenAMQ_Server]: amq_console.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.h (
        echo boom E: [OpenAMQ_Server]: amq_console_class.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.h (
        echo boom E: [OpenAMQ_Server]: amq_console_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.h (
        echo boom E: [OpenAMQ_Server]: amq_cml.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:-------------------------   CHECK OPERATING CONTEXT   ------------------------

:a_check_operating_context
    set event=repository
    if exist stamp_source   set event=source
    if exist stamp_stripped set event=stripped
    goto :eof

:------------------------   CHECK PROJECT FILES EXIST   -----------------------

:a_check_project_files_exist
    if not exist gpl_output (
        echo boom E: [OpenAMQ_Server]: gpl_output is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist version.h (
        echo boom E: [OpenAMQ_Server]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.asl (
        echo boom E: [OpenAMQ_Server]: amq_server.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.c (
        echo boom E: [OpenAMQ_Server]: amq_server.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_main.inc (
        echo boom E: [OpenAMQ_Server]: amq_server_main.inc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.opf (
        echo boom E: [OpenAMQ_Server]: amq_server_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.rc (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.rc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.icl (
        echo boom E: [OpenAMQ_Server]: amq_broker.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.icl (
        echo boom E: [OpenAMQ_Server]: amq_peering.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer.asl (
        echo boom E: [OpenAMQ_Server]: amq_peer.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.opf (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_base.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_base.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.icl (
        echo boom E: [OpenAMQ_Server]: amq_hitset.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.icl (
        echo boom E: [OpenAMQ_Server]: amq_index.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.icl (
        echo boom E: [OpenAMQ_Server]: amq_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_base.cfg (
        echo boom E: [OpenAMQ_Server]: amq_server_base.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.icl (
        echo boom E: [OpenAMQ_Server]: amq_federation.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.icl (
        echo boom E: [OpenAMQ_Server]: amq_failover.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.icl (
        echo boom E: [OpenAMQ_Server]: amq_lease.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.icl (
        echo boom E: [OpenAMQ_Server]: amq_console.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_object.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_object.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_class.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.gsl (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.gsl (
        echo boom E: [OpenAMQ_Server]: amq_console_config.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.icl (
        echo boom E: [OpenAMQ_Server]: amq_cml.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist restms_class_test.pal (
        echo boom E: [OpenAMQ_Server]: restms_class_test.pal is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [OpenAMQ_Server]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Server]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [OpenAMQ_Server]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [OpenAMQ_Server]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [OpenAMQ_Server]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:------------------------   CHECK SOURCE FILES EXIST   ------------------------

:a_check_source_files_exist
    if not exist gpl_output (
        echo boom E: [OpenAMQ_Server]: gpl_output is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist version.h (
        echo boom E: [OpenAMQ_Server]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.asl (
        echo boom E: [OpenAMQ_Server]: amq_server.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.c (
        echo boom E: [OpenAMQ_Server]: amq_server.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_main.inc (
        echo boom E: [OpenAMQ_Server]: amq_server_main.inc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.opf (
        echo boom E: [OpenAMQ_Server]: amq_server_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.rc (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.rc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.icl (
        echo boom E: [OpenAMQ_Server]: amq_broker.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.icl (
        echo boom E: [OpenAMQ_Server]: amq_peering.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer.asl (
        echo boom E: [OpenAMQ_Server]: amq_peer.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method.icl (
        echo boom E: [OpenAMQ_Server]: amq_peer_method.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.opf (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_base.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_base.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.icl (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.icl (
        echo boom E: [OpenAMQ_Server]: amq_hitset.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.icl (
        echo boom E: [OpenAMQ_Server]: amq_index.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash.icl (
        echo boom E: [OpenAMQ_Server]: amq_index_hash.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array.icl (
        echo boom E: [OpenAMQ_Server]: amq_index_array.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_list.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.icl (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.icl (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.icl (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.icl (
        echo boom E: [OpenAMQ_Server]: amq_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_method.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_base.cfg (
        echo boom E: [OpenAMQ_Server]: amq_server_base.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.icl (
        echo boom E: [OpenAMQ_Server]: amq_federation.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.icl (
        echo boom E: [OpenAMQ_Server]: amq_failover.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.icl (
        echo boom E: [OpenAMQ_Server]: amq_lease.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table.icl (
        echo boom E: [OpenAMQ_Server]: amq_lease_table.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.icl (
        echo boom E: [OpenAMQ_Server]: amq_console.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_object.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_object.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_class.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.gsl (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.cml (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.cml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_schema.xml (
        echo boom E: [OpenAMQ_Server]: amq_console_schema.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.gsl (
        echo boom E: [OpenAMQ_Server]: amq_console_config.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.icl (
        echo boom E: [OpenAMQ_Server]: amq_console_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.icl (
        echo boom E: [OpenAMQ_Server]: amq_cml.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist restms_class_test.pal (
        echo boom E: [OpenAMQ_Server]: restms_class_test.pal is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [OpenAMQ_Server]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Server]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.icl (
        echo boom E: [OpenAMQ_Server]: amq_server_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.h (
        echo boom E: [OpenAMQ_Server]: amq_server_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.c (
        echo boom E: [OpenAMQ_Server]: amq_server_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_config.txt (
        echo boom E: [OpenAMQ_Server]: amq_server_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_server_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.h (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_classes.c (
        echo boom E: [OpenAMQ_Server]: amq_server_classes.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_table.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list.h (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_connection_list.c (
        echo boom E: [OpenAMQ_Server]: amq_server_connection_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table.h (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_channel_table.c (
        echo boom E: [OpenAMQ_Server]: amq_server_channel_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_resource_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.h (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_resource.c (
        echo boom E: [OpenAMQ_Server]: amq_server_resource.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_broker_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker_test.c (
        echo boom E: [OpenAMQ_Server]: amq_broker_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.h (
        echo boom E: [OpenAMQ_Server]: amq_broker.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_broker.c (
        echo boom E: [OpenAMQ_Server]: amq_broker.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_peering_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering_test.c (
        echo boom E: [OpenAMQ_Server]: amq_peering_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.h (
        echo boom E: [OpenAMQ_Server]: amq_peering.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peering.c (
        echo boom E: [OpenAMQ_Server]: amq_peering.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method_test.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_method_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_method.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_method.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.icl (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config_test.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_config.txt (
        echo boom E: [OpenAMQ_Server]: amq_peer_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_peer_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_peer_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_system.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_system.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_fanout.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_fanout.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_direct.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_direct.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_topic.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_topic.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_headers.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_headers.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_regexp.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_regexp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_table.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list.h (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_exchange_list.c (
        echo boom E: [OpenAMQ_Server]: amq_exchange_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_test.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.h (
        echo boom E: [OpenAMQ_Server]: amq_binding.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding.c (
        echo boom E: [OpenAMQ_Server]: amq_binding.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_list.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt_test.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.h (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_binding_mgt.c (
        echo boom E: [OpenAMQ_Server]: amq_binding_mgt.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_bindings_list_table.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_bindings_list_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset_test.c (
        echo boom E: [OpenAMQ_Server]: amq_hitset_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.h (
        echo boom E: [OpenAMQ_Server]: amq_hitset.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_hitset.c (
        echo boom E: [OpenAMQ_Server]: amq_hitset.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_test.c (
        echo boom E: [OpenAMQ_Server]: amq_index_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.h (
        echo boom E: [OpenAMQ_Server]: amq_index.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index.c (
        echo boom E: [OpenAMQ_Server]: amq_index.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash_test.c (
        echo boom E: [OpenAMQ_Server]: amq_index_hash_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash.h (
        echo boom E: [OpenAMQ_Server]: amq_index_hash.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_hash.c (
        echo boom E: [OpenAMQ_Server]: amq_index_hash.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array_test.c (
        echo boom E: [OpenAMQ_Server]: amq_index_array_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array.h (
        echo boom E: [OpenAMQ_Server]: amq_index_array.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_index_array.c (
        echo boom E: [OpenAMQ_Server]: amq_index_array.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue.c (
        echo boom E: [OpenAMQ_Server]: amq_queue.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_table.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_list_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_list.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_list.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_list.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_set_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_set.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_set.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_basic.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_basic.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_test.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection.c (
        echo boom E: [OpenAMQ_Server]: amq_connection.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker_test.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_by_broker.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_by_broker.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_table.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_queue.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_queue.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_by_channel.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_by_channel.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic_test.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.h (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_consumer_basic.c (
        echo boom E: [OpenAMQ_Server]: amq_consumer_basic.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_connection.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_connection.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding_test.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.h (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_queue_binding.c (
        echo boom E: [OpenAMQ_Server]: amq_queue_binding.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue_test.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.h (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_connection_queue.c (
        echo boom E: [OpenAMQ_Server]: amq_connection_queue.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource_test.c (
        echo boom E: [OpenAMQ_Server]: amq_resource_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.h (
        echo boom E: [OpenAMQ_Server]: amq_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_resource.c (
        echo boom E: [OpenAMQ_Server]: amq_resource.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method_test.c (
        echo boom E: [OpenAMQ_Server]: amq_server_method_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method.h (
        echo boom E: [OpenAMQ_Server]: amq_server_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server_method.c (
        echo boom E: [OpenAMQ_Server]: amq_server_method.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_federation_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation_test.c (
        echo boom E: [OpenAMQ_Server]: amq_federation_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.h (
        echo boom E: [OpenAMQ_Server]: amq_federation.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_federation.c (
        echo boom E: [OpenAMQ_Server]: amq_federation.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_failover_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover_test.c (
        echo boom E: [OpenAMQ_Server]: amq_failover_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.h (
        echo boom E: [OpenAMQ_Server]: amq_failover.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_failover.c (
        echo boom E: [OpenAMQ_Server]: amq_failover.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_test.c (
        echo boom E: [OpenAMQ_Server]: amq_lease_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.h (
        echo boom E: [OpenAMQ_Server]: amq_lease.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease.c (
        echo boom E: [OpenAMQ_Server]: amq_lease.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table_test.c (
        echo boom E: [OpenAMQ_Server]: amq_lease_table_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table.h (
        echo boom E: [OpenAMQ_Server]: amq_lease_table.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_lease_table.c (
        echo boom E: [OpenAMQ_Server]: amq_lease_table.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_console_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_test.c (
        echo boom E: [OpenAMQ_Server]: amq_console_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.h (
        echo boom E: [OpenAMQ_Server]: amq_console.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console.c (
        echo boom E: [OpenAMQ_Server]: amq_console.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class_test.c (
        echo boom E: [OpenAMQ_Server]: amq_console_class_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.h (
        echo boom E: [OpenAMQ_Server]: amq_console_class.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_class.c (
        echo boom E: [OpenAMQ_Server]: amq_console_class.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.smt (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.h (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_agent.c (
        echo boom E: [OpenAMQ_Server]: amq_console_config_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config_test.c (
        echo boom E: [OpenAMQ_Server]: amq_console_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.h (
        echo boom E: [OpenAMQ_Server]: amq_console_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_console_config.c (
        echo boom E: [OpenAMQ_Server]: amq_console_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml_test.c (
        echo boom E: [OpenAMQ_Server]: amq_cml_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.h (
        echo boom E: [OpenAMQ_Server]: amq_cml.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_cml.c (
        echo boom E: [OpenAMQ_Server]: amq_cml.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [OpenAMQ_Server]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [OpenAMQ_Server]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [OpenAMQ_Server]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [OpenAMQ_Server]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [OpenAMQ_Server]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [OpenAMQ_Server]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [OpenAMQ_Server]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [OpenAMQ_Server]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist amq_server.vcproj (
        echo boom E: [OpenAMQ_Server]: amq_server.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist libamq_server.vcproj (
        echo boom E: [OpenAMQ_Server]: libamq_server.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:--------------------------   INSTALL DELIVERABLES   --------------------------

:a_install_deliverables
    echo boom I: [OpenAMQ_Server]: installing OpenAMQ Server into !_INSTALL_ROOT!...
    if not exist !_INSTALL_ROOT! mkdir !_INSTALL_ROOT!
    if not exist !_INSTALL_ROOT!\lib\nul mkdir !_INSTALL_ROOT!\lib\
    if "!BOOM_TRACE!"=="1" echo copy/y libamq_server.lib !_INSTALL_ROOT!\lib\>nul
    verify>nul
    call copy/y libamq_server.lib !_INSTALL_ROOT!\lib\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y libamq_server.lib !_INSTALL_ROOT!\lib\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_config.opf !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server_config.opf !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_config.opf !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_classes.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server_classes.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_classes.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_channel.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server_channel.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_channel.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_broker.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_broker.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_broker.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peering.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_peering.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peering.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peer_method.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_peer_method.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peer_method.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peer_config.opf !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_peer_config.opf !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peer_config.opf !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peer_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_peer_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peer_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_exchange.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_binding_mgt.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_binding_mgt.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_binding_mgt.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_queue.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_connection.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_connection.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_queue_connection.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_connection.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_binding.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_queue_binding.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_binding.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection_queue.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_connection_queue.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection_queue.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_resource.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_resource.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_resource.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_base.cfg !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server_base.cfg !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_base.cfg !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_federation.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_federation.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_federation.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_failover.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_failover.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_failover.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_console.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_schema.cml !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_console_schema.cml !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_schema.cml !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_schema.xml !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_console_schema.xml !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_schema.xml !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_config.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_console_config.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_config.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_cml.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_cml.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_cml.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server.exe !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server.exe !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server.exe !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\doc\OpenAMQ_Server\nul mkdir !_INSTALL_ROOT!\doc\OpenAMQ_Server\
    if "!BOOM_TRACE!"=="1" echo copy/y readme.txt !_INSTALL_ROOT!\doc\OpenAMQ_Server\>nul
    verify>nul
    call copy/y readme.txt !_INSTALL_ROOT!\doc\OpenAMQ_Server\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y readme.txt !_INSTALL_ROOT!\doc\OpenAMQ_Server\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_config.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_config.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_config.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_config.txt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server_config.txt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_config.txt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_classes.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_classes.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_classes.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_connection.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_connection.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_connection.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_connection_table.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_connection_table.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_connection_table.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_connection_list.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_connection_list.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_connection_list.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_channel_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_server_channel_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_channel_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_channel_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_channel_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_channel_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_channel.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_channel.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_channel.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_channel_table.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_channel_table.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_channel_table.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_resource.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_resource.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_resource.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_broker_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_broker_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_broker_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_broker_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_broker_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_broker_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_broker.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_broker.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_broker.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peering_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_peering_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peering_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peering_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_peering_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peering_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peering.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_peering.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peering.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peer_method.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_peer_method.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peer_method.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peer_config.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_peer_config.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peer_config.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peer_config.txt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_peer_config.txt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peer_config.txt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_peer_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_peer_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_peer_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_system.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_system.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_system.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_fanout.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_fanout.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_fanout.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_direct.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_direct.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_direct.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_topic.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_topic.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_topic.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_headers.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_headers.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_headers.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_regexp.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_regexp.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_regexp.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_exchange_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_table.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_table.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_table.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_exchange_list.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_exchange_list.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_exchange_list.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_binding.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_binding.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_binding.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_binding_list.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_binding_list.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_binding_list.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_binding_mgt_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_binding_mgt_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_binding_mgt_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_binding_mgt_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_binding_mgt_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_binding_mgt_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_binding_mgt.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_binding_mgt.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_binding_mgt.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_bindings_list.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_bindings_list.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_bindings_list.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_bindings_list_table.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_bindings_list_table.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_bindings_list_table.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_hitset.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_hitset.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_hitset.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_index.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_index.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_index.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_index_hash.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_index_hash.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_index_hash.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_index_array.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_index_array.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_index_array.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_queue_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_table.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_table.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_table.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_list.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_list.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_list.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_set.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_set.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_set.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_basic.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_basic.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_basic.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_connection_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_connection_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_connection.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection_by_broker.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_connection_by_broker.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection_by_broker.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_consumer.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_consumer.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_consumer.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_consumer_table.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_consumer_table.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_consumer_table.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_consumer_by_queue.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_consumer_by_queue.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_consumer_by_queue.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_consumer_by_channel.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_consumer_by_channel.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_consumer_by_channel.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_consumer_basic.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_consumer_basic.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_consumer_basic.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_connection_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_queue_connection_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_connection_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_connection_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_connection_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_connection_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_connection.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_connection.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_connection.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_binding_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_queue_binding_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_binding_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_binding_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_binding_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_binding_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_queue_binding.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_queue_binding.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_queue_binding.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection_queue_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_connection_queue_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection_queue_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection_queue_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_connection_queue_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection_queue_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_connection_queue.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_connection_queue.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_connection_queue.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_resource.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_resource.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_resource.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_server_method.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_server_method.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_server_method.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_federation_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_federation_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_federation_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_federation_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_federation_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_federation_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_federation.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_federation.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_federation.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_failover_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_failover_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_failover_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_failover_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_failover_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_failover_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_failover.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_failover.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_failover.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_lease.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_lease.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_lease.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_lease_table.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_lease_table.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_lease_table.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_console_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_console_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_console.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_class.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_console_class.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_class.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_config_agent.smt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y amq_console_config_agent.smt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_config_agent.smt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_config_agent.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_console_config_agent.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_config_agent.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_console_config.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_console_config.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_console_config.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y amq_cml.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y amq_cml.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'copy/y amq_cml.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if exist installer.bat (
    if "!BOOM_TRACE!"=="1" echo installer
    verify>nul
    call installer
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'installer' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   PRODUCE ALL GENERATED FILES   ----------------------

:a_produce_all_generated_files
    echo boom I: [OpenAMQ_Server]: Generating files...

    gsl -q amq_server_config.opf
    gsl -q amq_console_schema.gsl
    perl -S ipr_resource.pl @amq_server_resource.rc
    
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server.asl
    verify>nul
    call gsl -q -quiet:1 amq_server.asl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server.asl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_config.opf
    verify>nul
    call gsl -q -quiet:1 amq_server_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_server_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_classes.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_classes.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_classes.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_connection.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_connection.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_connection.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_connection_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_connection_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_connection_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_connection_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_connection_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_connection_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_channel.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_channel.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_channel.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_channel_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_channel_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_channel_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_resource.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_resource.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_resource.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_broker.icl
    verify>nul
    call gsl -q -quiet:1 amq_broker.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_broker.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peering.icl
    verify>nul
    call gsl -q -quiet:1 amq_peering.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peering.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer.asl
    verify>nul
    call gsl -q -quiet:1 amq_peer.asl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer.asl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_method.icl
    verify>nul
    call gsl -q -quiet:1 amq_peer_method.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_method.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_config.opf
    verify>nul
    call gsl -q -quiet:1 amq_peer_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_peer_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_system.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_system.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_system.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_fanout.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_fanout.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_fanout.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_direct.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_direct.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_direct.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_topic.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_topic.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_topic.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_headers.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_headers.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_headers.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_regexp.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_regexp.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_regexp.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding.icl
    verify>nul
    call gsl -q -quiet:1 amq_binding.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_binding_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding_mgt.icl
    verify>nul
    call gsl -q -quiet:1 amq_binding_mgt.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding_mgt.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_bindings_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_bindings_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_bindings_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_bindings_list_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_bindings_list_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_bindings_list_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_hitset.icl
    verify>nul
    call gsl -q -quiet:1 amq_hitset.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_hitset.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_index.icl
    verify>nul
    call gsl -q -quiet:1 amq_index.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_index.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_index_hash.icl
    verify>nul
    call gsl -q -quiet:1 amq_index_hash.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_index_hash.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_index_array.icl
    verify>nul
    call gsl -q -quiet:1 amq_index_array.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_index_array.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_set.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_set.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_set.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_basic.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_basic.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_basic.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection.icl
    verify>nul
    call gsl -q -quiet:1 amq_connection.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_by_broker.icl
    verify>nul
    call gsl -q -quiet:1 amq_connection_by_broker.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_by_broker.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_by_queue.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_by_queue.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_by_queue.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_by_channel.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_by_channel.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_by_channel.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_basic.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_basic.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_basic.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_connection.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_connection.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_connection.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_binding.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_binding.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_binding.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_queue.icl
    verify>nul
    call gsl -q -quiet:1 amq_connection_queue.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_queue.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_resource.icl
    verify>nul
    call gsl -q -quiet:1 amq_resource.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_resource.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_method.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_method.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_method.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_federation.icl
    verify>nul
    call gsl -q -quiet:1 amq_federation.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_federation.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_failover.icl
    verify>nul
    call gsl -q -quiet:1 amq_failover.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_failover.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_lease.icl
    verify>nul
    call gsl -q -quiet:1 amq_lease.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_lease.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_lease_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_lease_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_lease_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console.icl
    verify>nul
    call gsl -q -quiet:1 amq_console.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_class.icl
    verify>nul
    call gsl -q -quiet:1 amq_console_class.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_class.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_config.icl
    verify>nul
    call gsl -q -quiet:1 amq_console_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_cml.icl
    verify>nul
    call gsl -q -quiet:1 amq_cml.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_cml.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_config.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_channel_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_server_channel_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_channel_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_broker_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_broker_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_broker_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peering_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_peering_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peering_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_config.icl
    verify>nul
    call gsl -q -quiet:1 amq_peer_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_exchange_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding_mgt_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_binding_mgt_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding_mgt_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_queue_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_connection_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_connection_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_queue_connection_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_connection_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_binding_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_queue_binding_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_binding_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_queue_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_connection_queue_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_queue_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_federation_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_federation_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_federation_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_failover_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_failover_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_failover_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_console_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_config_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_console_config_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_config_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    echo Source files successfully generated>stamp_generate
    goto :eof

:-------------------------   PRODUCE GENERATED FILES   ------------------------

:a_produce_generated_files
    echo boom I: [OpenAMQ_Server]: Generating files...

    gsl -q amq_server_config.opf
    gsl -q amq_console_schema.gsl
    perl -S ipr_resource.pl @amq_server_resource.rc
    
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server.asl
    verify>nul
    call gsl -q -quiet:1 amq_server.asl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server.asl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_config.opf
    verify>nul
    call gsl -q -quiet:1 amq_server_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_server_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_classes.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_classes.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_classes.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_connection.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_connection.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_connection.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_connection_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_connection_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_connection_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_connection_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_connection_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_connection_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_channel.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_channel.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_channel.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_channel_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_channel_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_channel_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_resource.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_resource.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_resource.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_broker.icl
    verify>nul
    call gsl -q -quiet:1 amq_broker.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_broker.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peering.icl
    verify>nul
    call gsl -q -quiet:1 amq_peering.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peering.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer.asl
    verify>nul
    call gsl -q -quiet:1 amq_peer.asl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer.asl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_method.icl
    verify>nul
    call gsl -q -quiet:1 amq_peer_method.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_method.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_config.opf
    verify>nul
    call gsl -q -quiet:1 amq_peer_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_peer_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_system.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_system.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_system.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_fanout.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_fanout.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_fanout.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_direct.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_direct.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_direct.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_topic.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_topic.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_topic.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_headers.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_headers.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_headers.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_regexp.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_regexp.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_regexp.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_exchange_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding.icl
    verify>nul
    call gsl -q -quiet:1 amq_binding.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_binding_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding_mgt.icl
    verify>nul
    call gsl -q -quiet:1 amq_binding_mgt.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding_mgt.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_bindings_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_bindings_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_bindings_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_bindings_list_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_bindings_list_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_bindings_list_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_hitset.icl
    verify>nul
    call gsl -q -quiet:1 amq_hitset.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_hitset.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_index.icl
    verify>nul
    call gsl -q -quiet:1 amq_index.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_index.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_index_hash.icl
    verify>nul
    call gsl -q -quiet:1 amq_index_hash.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_index_hash.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_index_array.icl
    verify>nul
    call gsl -q -quiet:1 amq_index_array.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_index_array.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_list.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_list.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_list.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_set.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_set.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_set.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_basic.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_basic.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_basic.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection.icl
    verify>nul
    call gsl -q -quiet:1 amq_connection.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_by_broker.icl
    verify>nul
    call gsl -q -quiet:1 amq_connection_by_broker.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_by_broker.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_by_queue.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_by_queue.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_by_queue.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_by_channel.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_by_channel.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_by_channel.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_consumer_basic.icl
    verify>nul
    call gsl -q -quiet:1 amq_consumer_basic.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_consumer_basic.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_connection.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_connection.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_connection.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_binding.icl
    verify>nul
    call gsl -q -quiet:1 amq_queue_binding.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_binding.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_queue.icl
    verify>nul
    call gsl -q -quiet:1 amq_connection_queue.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_queue.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_resource.icl
    verify>nul
    call gsl -q -quiet:1 amq_resource.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_resource.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_method.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_method.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_method.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_federation.icl
    verify>nul
    call gsl -q -quiet:1 amq_federation.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_federation.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_failover.icl
    verify>nul
    call gsl -q -quiet:1 amq_failover.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_failover.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_lease.icl
    verify>nul
    call gsl -q -quiet:1 amq_lease.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_lease.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_lease_table.icl
    verify>nul
    call gsl -q -quiet:1 amq_lease_table.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_lease_table.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console.icl
    verify>nul
    call gsl -q -quiet:1 amq_console.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_class.icl
    verify>nul
    call gsl -q -quiet:1 amq_console_class.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_class.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_config.icl
    verify>nul
    call gsl -q -quiet:1 amq_console_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_cml.icl
    verify>nul
    call gsl -q -quiet:1 amq_cml.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_cml.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_config.icl
    verify>nul
    call gsl -q -quiet:1 amq_server_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_server_channel_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_server_channel_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_server_channel_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_broker_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_broker_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_broker_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peering_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_peering_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peering_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_peer_config.icl
    verify>nul
    call gsl -q -quiet:1 amq_peer_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_peer_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_exchange_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_exchange_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_exchange_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_binding_mgt_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_binding_mgt_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_binding_mgt_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_queue_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_connection_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_connection_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_queue_connection_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_connection_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_queue_binding_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_queue_binding_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_queue_binding_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_connection_queue_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_connection_queue_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_connection_queue_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_federation_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_federation_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_federation_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_failover_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_failover_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_failover_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_console_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 amq_console_config_agent.smt
    verify>nul
    call gsl -q -quiet:1 amq_console_config_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'gsl -q -quiet:1 amq_console_config_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    echo Source files successfully generated>stamp_generate
    goto :eof

:------------------------   REMOVE GENERATED BINARIES   -----------------------

:a_remove_generated_binaries
    if exist libamq_server.lib del libamq_server.lib
    if exist amq_server.exe del amq_server.exe
    if exist amq_server.obj del amq_server.obj
    if exist amq_server.exe del amq_server.exe
    if exist amq_server_config_test_test.obj del amq_server_config_test_test.obj
    if exist amq_server_config_test_test.exe del amq_server_config_test_test.exe
    if exist amq_server_config.obj del amq_server_config.obj
    if exist amq_server_agent.obj del amq_server_agent.obj
    if exist amq_server_classes.obj del amq_server_classes.obj
    if exist amq_server_connection_test_test.obj del amq_server_connection_test_test.obj
    if exist amq_server_connection_test_test.exe del amq_server_connection_test_test.exe
    if exist amq_server_connection.obj del amq_server_connection.obj
    if exist amq_server_connection_table_test_test.obj del amq_server_connection_table_test_test.obj
    if exist amq_server_connection_table_test_test.exe del amq_server_connection_table_test_test.exe
    if exist amq_server_connection_table.obj del amq_server_connection_table.obj
    if exist amq_server_connection_list_test_test.obj del amq_server_connection_list_test_test.obj
    if exist amq_server_connection_list_test_test.exe del amq_server_connection_list_test_test.exe
    if exist amq_server_connection_list.obj del amq_server_connection_list.obj
    if exist amq_server_channel_agent.obj del amq_server_channel_agent.obj
    if exist amq_server_channel_test_test.obj del amq_server_channel_test_test.obj
    if exist amq_server_channel_test_test.exe del amq_server_channel_test_test.exe
    if exist amq_server_channel.obj del amq_server_channel.obj
    if exist amq_server_channel_table_test_test.obj del amq_server_channel_table_test_test.obj
    if exist amq_server_channel_table_test_test.exe del amq_server_channel_table_test_test.exe
    if exist amq_server_channel_table.obj del amq_server_channel_table.obj
    if exist amq_server_resource_test_test.obj del amq_server_resource_test_test.obj
    if exist amq_server_resource_test_test.exe del amq_server_resource_test_test.exe
    if exist amq_server_resource.obj del amq_server_resource.obj
    if exist amq_broker_agent.obj del amq_broker_agent.obj
    if exist amq_broker_test_test.obj del amq_broker_test_test.obj
    if exist amq_broker_test_test.exe del amq_broker_test_test.exe
    if exist amq_broker.obj del amq_broker.obj
    if exist amq_peering_agent.obj del amq_peering_agent.obj
    if exist amq_peering_test_test.obj del amq_peering_test_test.obj
    if exist amq_peering_test_test.exe del amq_peering_test_test.exe
    if exist amq_peering.obj del amq_peering.obj
    if exist amq_peer_method_test_test.obj del amq_peer_method_test_test.obj
    if exist amq_peer_method_test_test.exe del amq_peer_method_test_test.exe
    if exist amq_peer_method.obj del amq_peer_method.obj
    if exist amq_peer_config_test_test.obj del amq_peer_config_test_test.obj
    if exist amq_peer_config_test_test.exe del amq_peer_config_test_test.exe
    if exist amq_peer_config.obj del amq_peer_config.obj
    if exist amq_peer_agent.obj del amq_peer_agent.obj
    if exist amq_exchange_system_test_test.obj del amq_exchange_system_test_test.obj
    if exist amq_exchange_system_test_test.exe del amq_exchange_system_test_test.exe
    if exist amq_exchange_system.obj del amq_exchange_system.obj
    if exist amq_exchange_fanout_test_test.obj del amq_exchange_fanout_test_test.obj
    if exist amq_exchange_fanout_test_test.exe del amq_exchange_fanout_test_test.exe
    if exist amq_exchange_fanout.obj del amq_exchange_fanout.obj
    if exist amq_exchange_direct_test_test.obj del amq_exchange_direct_test_test.obj
    if exist amq_exchange_direct_test_test.exe del amq_exchange_direct_test_test.exe
    if exist amq_exchange_direct.obj del amq_exchange_direct.obj
    if exist amq_exchange_topic_test_test.obj del amq_exchange_topic_test_test.obj
    if exist amq_exchange_topic_test_test.exe del amq_exchange_topic_test_test.exe
    if exist amq_exchange_topic.obj del amq_exchange_topic.obj
    if exist amq_exchange_headers_test_test.obj del amq_exchange_headers_test_test.obj
    if exist amq_exchange_headers_test_test.exe del amq_exchange_headers_test_test.exe
    if exist amq_exchange_headers.obj del amq_exchange_headers.obj
    if exist amq_exchange_regexp_test_test.obj del amq_exchange_regexp_test_test.obj
    if exist amq_exchange_regexp_test_test.exe del amq_exchange_regexp_test_test.exe
    if exist amq_exchange_regexp.obj del amq_exchange_regexp.obj
    if exist amq_exchange_agent.obj del amq_exchange_agent.obj
    if exist amq_exchange_test_test.obj del amq_exchange_test_test.obj
    if exist amq_exchange_test_test.exe del amq_exchange_test_test.exe
    if exist amq_exchange.obj del amq_exchange.obj
    if exist amq_exchange_table_test_test.obj del amq_exchange_table_test_test.obj
    if exist amq_exchange_table_test_test.exe del amq_exchange_table_test_test.exe
    if exist amq_exchange_table.obj del amq_exchange_table.obj
    if exist amq_exchange_list_test_test.obj del amq_exchange_list_test_test.obj
    if exist amq_exchange_list_test_test.exe del amq_exchange_list_test_test.exe
    if exist amq_exchange_list.obj del amq_exchange_list.obj
    if exist amq_binding_test_test.obj del amq_binding_test_test.obj
    if exist amq_binding_test_test.exe del amq_binding_test_test.exe
    if exist amq_binding.obj del amq_binding.obj
    if exist amq_binding_list_test_test.obj del amq_binding_list_test_test.obj
    if exist amq_binding_list_test_test.exe del amq_binding_list_test_test.exe
    if exist amq_binding_list.obj del amq_binding_list.obj
    if exist amq_binding_mgt_agent.obj del amq_binding_mgt_agent.obj
    if exist amq_binding_mgt_test_test.obj del amq_binding_mgt_test_test.obj
    if exist amq_binding_mgt_test_test.exe del amq_binding_mgt_test_test.exe
    if exist amq_binding_mgt.obj del amq_binding_mgt.obj
    if exist amq_queue_bindings_list_test_test.obj del amq_queue_bindings_list_test_test.obj
    if exist amq_queue_bindings_list_test_test.exe del amq_queue_bindings_list_test_test.exe
    if exist amq_queue_bindings_list.obj del amq_queue_bindings_list.obj
    if exist amq_queue_bindings_list_table_test_test.obj del amq_queue_bindings_list_table_test_test.obj
    if exist amq_queue_bindings_list_table_test_test.exe del amq_queue_bindings_list_table_test_test.exe
    if exist amq_queue_bindings_list_table.obj del amq_queue_bindings_list_table.obj
    if exist amq_hitset_test_test.obj del amq_hitset_test_test.obj
    if exist amq_hitset_test_test.exe del amq_hitset_test_test.exe
    if exist amq_hitset.obj del amq_hitset.obj
    if exist amq_index_test_test.obj del amq_index_test_test.obj
    if exist amq_index_test_test.exe del amq_index_test_test.exe
    if exist amq_index.obj del amq_index.obj
    if exist amq_index_hash_test_test.obj del amq_index_hash_test_test.obj
    if exist amq_index_hash_test_test.exe del amq_index_hash_test_test.exe
    if exist amq_index_hash.obj del amq_index_hash.obj
    if exist amq_index_array_test_test.obj del amq_index_array_test_test.obj
    if exist amq_index_array_test_test.exe del amq_index_array_test_test.exe
    if exist amq_index_array.obj del amq_index_array.obj
    if exist amq_queue_agent.obj del amq_queue_agent.obj
    if exist amq_queue_test_test.obj del amq_queue_test_test.obj
    if exist amq_queue_test_test.exe del amq_queue_test_test.exe
    if exist amq_queue.obj del amq_queue.obj
    if exist amq_queue_table_test_test.obj del amq_queue_table_test_test.obj
    if exist amq_queue_table_test_test.exe del amq_queue_table_test_test.exe
    if exist amq_queue_table.obj del amq_queue_table.obj
    if exist amq_queue_list_test_test.obj del amq_queue_list_test_test.obj
    if exist amq_queue_list_test_test.exe del amq_queue_list_test_test.exe
    if exist amq_queue_list.obj del amq_queue_list.obj
    if exist amq_queue_set_test_test.obj del amq_queue_set_test_test.obj
    if exist amq_queue_set_test_test.exe del amq_queue_set_test_test.exe
    if exist amq_queue_set.obj del amq_queue_set.obj
    if exist amq_queue_basic_test_test.obj del amq_queue_basic_test_test.obj
    if exist amq_queue_basic_test_test.exe del amq_queue_basic_test_test.exe
    if exist amq_queue_basic.obj del amq_queue_basic.obj
    if exist amq_connection_agent.obj del amq_connection_agent.obj
    if exist amq_connection_test_test.obj del amq_connection_test_test.obj
    if exist amq_connection_test_test.exe del amq_connection_test_test.exe
    if exist amq_connection.obj del amq_connection.obj
    if exist amq_connection_by_broker_test_test.obj del amq_connection_by_broker_test_test.obj
    if exist amq_connection_by_broker_test_test.exe del amq_connection_by_broker_test_test.exe
    if exist amq_connection_by_broker.obj del amq_connection_by_broker.obj
    if exist amq_consumer_test_test.obj del amq_consumer_test_test.obj
    if exist amq_consumer_test_test.exe del amq_consumer_test_test.exe
    if exist amq_consumer.obj del amq_consumer.obj
    if exist amq_consumer_table_test_test.obj del amq_consumer_table_test_test.obj
    if exist amq_consumer_table_test_test.exe del amq_consumer_table_test_test.exe
    if exist amq_consumer_table.obj del amq_consumer_table.obj
    if exist amq_consumer_by_queue_test_test.obj del amq_consumer_by_queue_test_test.obj
    if exist amq_consumer_by_queue_test_test.exe del amq_consumer_by_queue_test_test.exe
    if exist amq_consumer_by_queue.obj del amq_consumer_by_queue.obj
    if exist amq_consumer_by_channel_test_test.obj del amq_consumer_by_channel_test_test.obj
    if exist amq_consumer_by_channel_test_test.exe del amq_consumer_by_channel_test_test.exe
    if exist amq_consumer_by_channel.obj del amq_consumer_by_channel.obj
    if exist amq_consumer_basic_test_test.obj del amq_consumer_basic_test_test.obj
    if exist amq_consumer_basic_test_test.exe del amq_consumer_basic_test_test.exe
    if exist amq_consumer_basic.obj del amq_consumer_basic.obj
    if exist amq_queue_connection_agent.obj del amq_queue_connection_agent.obj
    if exist amq_queue_connection_test_test.obj del amq_queue_connection_test_test.obj
    if exist amq_queue_connection_test_test.exe del amq_queue_connection_test_test.exe
    if exist amq_queue_connection.obj del amq_queue_connection.obj
    if exist amq_queue_binding_agent.obj del amq_queue_binding_agent.obj
    if exist amq_queue_binding_test_test.obj del amq_queue_binding_test_test.obj
    if exist amq_queue_binding_test_test.exe del amq_queue_binding_test_test.exe
    if exist amq_queue_binding.obj del amq_queue_binding.obj
    if exist amq_connection_queue_agent.obj del amq_connection_queue_agent.obj
    if exist amq_connection_queue_test_test.obj del amq_connection_queue_test_test.obj
    if exist amq_connection_queue_test_test.exe del amq_connection_queue_test_test.exe
    if exist amq_connection_queue.obj del amq_connection_queue.obj
    if exist amq_resource_test_test.obj del amq_resource_test_test.obj
    if exist amq_resource_test_test.exe del amq_resource_test_test.exe
    if exist amq_resource.obj del amq_resource.obj
    if exist amq_server_method_test_test.obj del amq_server_method_test_test.obj
    if exist amq_server_method_test_test.exe del amq_server_method_test_test.exe
    if exist amq_server_method.obj del amq_server_method.obj
    if exist amq_federation_agent.obj del amq_federation_agent.obj
    if exist amq_federation_test_test.obj del amq_federation_test_test.obj
    if exist amq_federation_test_test.exe del amq_federation_test_test.exe
    if exist amq_federation.obj del amq_federation.obj
    if exist amq_failover_agent.obj del amq_failover_agent.obj
    if exist amq_failover_test_test.obj del amq_failover_test_test.obj
    if exist amq_failover_test_test.exe del amq_failover_test_test.exe
    if exist amq_failover.obj del amq_failover.obj
    if exist amq_lease_test_test.obj del amq_lease_test_test.obj
    if exist amq_lease_test_test.exe del amq_lease_test_test.exe
    if exist amq_lease.obj del amq_lease.obj
    if exist amq_lease_table_test_test.obj del amq_lease_table_test_test.obj
    if exist amq_lease_table_test_test.exe del amq_lease_table_test_test.exe
    if exist amq_lease_table.obj del amq_lease_table.obj
    if exist amq_console_agent.obj del amq_console_agent.obj
    if exist amq_console_test_test.obj del amq_console_test_test.obj
    if exist amq_console_test_test.exe del amq_console_test_test.exe
    if exist amq_console.obj del amq_console.obj
    if exist amq_console_class_test_test.obj del amq_console_class_test_test.obj
    if exist amq_console_class_test_test.exe del amq_console_class_test_test.exe
    if exist amq_console_class.obj del amq_console_class.obj
    if exist amq_console_config_agent.obj del amq_console_config_agent.obj
    if exist amq_console_config_test_test.obj del amq_console_config_test_test.obj
    if exist amq_console_config_test_test.exe del amq_console_config_test_test.exe
    if exist amq_console_config.obj del amq_console_config.obj
    if exist amq_cml_test_test.obj del amq_cml_test_test.obj
    if exist amq_cml_test_test.exe del amq_cml_test_test.exe
    if exist amq_cml.obj del amq_cml.obj
    if exist amq_server_config_test.obj del amq_server_config_test.obj
    if exist amq_server_config_test.exe del amq_server_config_test.exe
    if exist amq_server_config.obj del amq_server_config.obj
    if exist amq_server_agent.obj del amq_server_agent.obj
    if exist amq_server_classes.obj del amq_server_classes.obj
    if exist amq_server_connection_test.obj del amq_server_connection_test.obj
    if exist amq_server_connection_test.exe del amq_server_connection_test.exe
    if exist amq_server_connection.obj del amq_server_connection.obj
    if exist amq_server_connection_table_test.obj del amq_server_connection_table_test.obj
    if exist amq_server_connection_table_test.exe del amq_server_connection_table_test.exe
    if exist amq_server_connection_table.obj del amq_server_connection_table.obj
    if exist amq_server_connection_list_test.obj del amq_server_connection_list_test.obj
    if exist amq_server_connection_list_test.exe del amq_server_connection_list_test.exe
    if exist amq_server_connection_list.obj del amq_server_connection_list.obj
    if exist amq_server_channel_agent.obj del amq_server_channel_agent.obj
    if exist amq_server_channel_test.obj del amq_server_channel_test.obj
    if exist amq_server_channel_test.exe del amq_server_channel_test.exe
    if exist amq_server_channel.obj del amq_server_channel.obj
    if exist amq_server_channel_table_test.obj del amq_server_channel_table_test.obj
    if exist amq_server_channel_table_test.exe del amq_server_channel_table_test.exe
    if exist amq_server_channel_table.obj del amq_server_channel_table.obj
    if exist amq_server_resource_test.obj del amq_server_resource_test.obj
    if exist amq_server_resource_test.exe del amq_server_resource_test.exe
    if exist amq_server_resource.obj del amq_server_resource.obj
    if exist amq_broker_agent.obj del amq_broker_agent.obj
    if exist amq_broker_test.obj del amq_broker_test.obj
    if exist amq_broker_test.exe del amq_broker_test.exe
    if exist amq_broker.obj del amq_broker.obj
    if exist amq_peering_agent.obj del amq_peering_agent.obj
    if exist amq_peering_test.obj del amq_peering_test.obj
    if exist amq_peering_test.exe del amq_peering_test.exe
    if exist amq_peering.obj del amq_peering.obj
    if exist amq_peer_method_test.obj del amq_peer_method_test.obj
    if exist amq_peer_method_test.exe del amq_peer_method_test.exe
    if exist amq_peer_method.obj del amq_peer_method.obj
    if exist amq_peer_config_test.obj del amq_peer_config_test.obj
    if exist amq_peer_config_test.exe del amq_peer_config_test.exe
    if exist amq_peer_config.obj del amq_peer_config.obj
    if exist amq_peer_agent.obj del amq_peer_agent.obj
    if exist amq_exchange_system_test.obj del amq_exchange_system_test.obj
    if exist amq_exchange_system_test.exe del amq_exchange_system_test.exe
    if exist amq_exchange_system.obj del amq_exchange_system.obj
    if exist amq_exchange_fanout_test.obj del amq_exchange_fanout_test.obj
    if exist amq_exchange_fanout_test.exe del amq_exchange_fanout_test.exe
    if exist amq_exchange_fanout.obj del amq_exchange_fanout.obj
    if exist amq_exchange_direct_test.obj del amq_exchange_direct_test.obj
    if exist amq_exchange_direct_test.exe del amq_exchange_direct_test.exe
    if exist amq_exchange_direct.obj del amq_exchange_direct.obj
    if exist amq_exchange_topic_test.obj del amq_exchange_topic_test.obj
    if exist amq_exchange_topic_test.exe del amq_exchange_topic_test.exe
    if exist amq_exchange_topic.obj del amq_exchange_topic.obj
    if exist amq_exchange_headers_test.obj del amq_exchange_headers_test.obj
    if exist amq_exchange_headers_test.exe del amq_exchange_headers_test.exe
    if exist amq_exchange_headers.obj del amq_exchange_headers.obj
    if exist amq_exchange_regexp_test.obj del amq_exchange_regexp_test.obj
    if exist amq_exchange_regexp_test.exe del amq_exchange_regexp_test.exe
    if exist amq_exchange_regexp.obj del amq_exchange_regexp.obj
    if exist amq_exchange_agent.obj del amq_exchange_agent.obj
    if exist amq_exchange_test.obj del amq_exchange_test.obj
    if exist amq_exchange_test.exe del amq_exchange_test.exe
    if exist amq_exchange.obj del amq_exchange.obj
    if exist amq_exchange_table_test.obj del amq_exchange_table_test.obj
    if exist amq_exchange_table_test.exe del amq_exchange_table_test.exe
    if exist amq_exchange_table.obj del amq_exchange_table.obj
    if exist amq_exchange_list_test.obj del amq_exchange_list_test.obj
    if exist amq_exchange_list_test.exe del amq_exchange_list_test.exe
    if exist amq_exchange_list.obj del amq_exchange_list.obj
    if exist amq_binding_test.obj del amq_binding_test.obj
    if exist amq_binding_test.exe del amq_binding_test.exe
    if exist amq_binding.obj del amq_binding.obj
    if exist amq_binding_list_test.obj del amq_binding_list_test.obj
    if exist amq_binding_list_test.exe del amq_binding_list_test.exe
    if exist amq_binding_list.obj del amq_binding_list.obj
    if exist amq_binding_mgt_agent.obj del amq_binding_mgt_agent.obj
    if exist amq_binding_mgt_test.obj del amq_binding_mgt_test.obj
    if exist amq_binding_mgt_test.exe del amq_binding_mgt_test.exe
    if exist amq_binding_mgt.obj del amq_binding_mgt.obj
    if exist amq_queue_bindings_list_test.obj del amq_queue_bindings_list_test.obj
    if exist amq_queue_bindings_list_test.exe del amq_queue_bindings_list_test.exe
    if exist amq_queue_bindings_list.obj del amq_queue_bindings_list.obj
    if exist amq_queue_bindings_list_table_test.obj del amq_queue_bindings_list_table_test.obj
    if exist amq_queue_bindings_list_table_test.exe del amq_queue_bindings_list_table_test.exe
    if exist amq_queue_bindings_list_table.obj del amq_queue_bindings_list_table.obj
    if exist amq_hitset_test.obj del amq_hitset_test.obj
    if exist amq_hitset_test.exe del amq_hitset_test.exe
    if exist amq_hitset.obj del amq_hitset.obj
    if exist amq_index_test.obj del amq_index_test.obj
    if exist amq_index_test.exe del amq_index_test.exe
    if exist amq_index.obj del amq_index.obj
    if exist amq_index_hash_test.obj del amq_index_hash_test.obj
    if exist amq_index_hash_test.exe del amq_index_hash_test.exe
    if exist amq_index_hash.obj del amq_index_hash.obj
    if exist amq_index_array_test.obj del amq_index_array_test.obj
    if exist amq_index_array_test.exe del amq_index_array_test.exe
    if exist amq_index_array.obj del amq_index_array.obj
    if exist amq_queue_agent.obj del amq_queue_agent.obj
    if exist amq_queue_test.obj del amq_queue_test.obj
    if exist amq_queue_test.exe del amq_queue_test.exe
    if exist amq_queue.obj del amq_queue.obj
    if exist amq_queue_table_test.obj del amq_queue_table_test.obj
    if exist amq_queue_table_test.exe del amq_queue_table_test.exe
    if exist amq_queue_table.obj del amq_queue_table.obj
    if exist amq_queue_list_test.obj del amq_queue_list_test.obj
    if exist amq_queue_list_test.exe del amq_queue_list_test.exe
    if exist amq_queue_list.obj del amq_queue_list.obj
    if exist amq_queue_set_test.obj del amq_queue_set_test.obj
    if exist amq_queue_set_test.exe del amq_queue_set_test.exe
    if exist amq_queue_set.obj del amq_queue_set.obj
    if exist amq_queue_basic_test.obj del amq_queue_basic_test.obj
    if exist amq_queue_basic_test.exe del amq_queue_basic_test.exe
    if exist amq_queue_basic.obj del amq_queue_basic.obj
    if exist amq_connection_agent.obj del amq_connection_agent.obj
    if exist amq_connection_test.obj del amq_connection_test.obj
    if exist amq_connection_test.exe del amq_connection_test.exe
    if exist amq_connection.obj del amq_connection.obj
    if exist amq_connection_by_broker_test.obj del amq_connection_by_broker_test.obj
    if exist amq_connection_by_broker_test.exe del amq_connection_by_broker_test.exe
    if exist amq_connection_by_broker.obj del amq_connection_by_broker.obj
    if exist amq_consumer_test.obj del amq_consumer_test.obj
    if exist amq_consumer_test.exe del amq_consumer_test.exe
    if exist amq_consumer.obj del amq_consumer.obj
    if exist amq_consumer_table_test.obj del amq_consumer_table_test.obj
    if exist amq_consumer_table_test.exe del amq_consumer_table_test.exe
    if exist amq_consumer_table.obj del amq_consumer_table.obj
    if exist amq_consumer_by_queue_test.obj del amq_consumer_by_queue_test.obj
    if exist amq_consumer_by_queue_test.exe del amq_consumer_by_queue_test.exe
    if exist amq_consumer_by_queue.obj del amq_consumer_by_queue.obj
    if exist amq_consumer_by_channel_test.obj del amq_consumer_by_channel_test.obj
    if exist amq_consumer_by_channel_test.exe del amq_consumer_by_channel_test.exe
    if exist amq_consumer_by_channel.obj del amq_consumer_by_channel.obj
    if exist amq_consumer_basic_test.obj del amq_consumer_basic_test.obj
    if exist amq_consumer_basic_test.exe del amq_consumer_basic_test.exe
    if exist amq_consumer_basic.obj del amq_consumer_basic.obj
    if exist amq_queue_connection_agent.obj del amq_queue_connection_agent.obj
    if exist amq_queue_connection_test.obj del amq_queue_connection_test.obj
    if exist amq_queue_connection_test.exe del amq_queue_connection_test.exe
    if exist amq_queue_connection.obj del amq_queue_connection.obj
    if exist amq_queue_binding_agent.obj del amq_queue_binding_agent.obj
    if exist amq_queue_binding_test.obj del amq_queue_binding_test.obj
    if exist amq_queue_binding_test.exe del amq_queue_binding_test.exe
    if exist amq_queue_binding.obj del amq_queue_binding.obj
    if exist amq_connection_queue_agent.obj del amq_connection_queue_agent.obj
    if exist amq_connection_queue_test.obj del amq_connection_queue_test.obj
    if exist amq_connection_queue_test.exe del amq_connection_queue_test.exe
    if exist amq_connection_queue.obj del amq_connection_queue.obj
    if exist amq_resource_test.obj del amq_resource_test.obj
    if exist amq_resource_test.exe del amq_resource_test.exe
    if exist amq_resource.obj del amq_resource.obj
    if exist amq_server_method_test.obj del amq_server_method_test.obj
    if exist amq_server_method_test.exe del amq_server_method_test.exe
    if exist amq_server_method.obj del amq_server_method.obj
    if exist amq_federation_agent.obj del amq_federation_agent.obj
    if exist amq_federation_test.obj del amq_federation_test.obj
    if exist amq_federation_test.exe del amq_federation_test.exe
    if exist amq_federation.obj del amq_federation.obj
    if exist amq_failover_agent.obj del amq_failover_agent.obj
    if exist amq_failover_test.obj del amq_failover_test.obj
    if exist amq_failover_test.exe del amq_failover_test.exe
    if exist amq_failover.obj del amq_failover.obj
    if exist amq_lease_test.obj del amq_lease_test.obj
    if exist amq_lease_test.exe del amq_lease_test.exe
    if exist amq_lease.obj del amq_lease.obj
    if exist amq_lease_table_test.obj del amq_lease_table_test.obj
    if exist amq_lease_table_test.exe del amq_lease_table_test.exe
    if exist amq_lease_table.obj del amq_lease_table.obj
    if exist amq_console_agent.obj del amq_console_agent.obj
    if exist amq_console_test.obj del amq_console_test.obj
    if exist amq_console_test.exe del amq_console_test.exe
    if exist amq_console.obj del amq_console.obj
    if exist amq_console_class_test.obj del amq_console_class_test.obj
    if exist amq_console_class_test.exe del amq_console_class_test.exe
    if exist amq_console_class.obj del amq_console_class.obj
    if exist amq_console_config_agent.obj del amq_console_config_agent.obj
    if exist amq_console_config_test.obj del amq_console_config_test.obj
    if exist amq_console_config_test.exe del amq_console_config_test.exe
    if exist amq_console_config.obj del amq_console_config.obj
    if exist amq_cml_test.obj del amq_cml_test.obj
    if exist amq_cml_test.exe del amq_cml_test.exe
    if exist amq_cml.obj del amq_cml.obj
    if exist vc60.pdb del vc60.pdb
    goto :eof

:------------------------   REMOVE GENERATED SOURCES   ------------------------

:a_remove_generated_sources
    if exist amq_server_agent.smt del amq_server_agent.smt
    if exist amq_server_connection_table.icl del amq_server_connection_table.icl
    if exist amq_server_connection_list.icl del amq_server_connection_list.icl
    if exist amq_server_channel_table.icl del amq_server_channel_table.icl
    if exist amq_server_resource.icl del amq_server_resource.icl
    if exist amq_peer_method.icl del amq_peer_method.icl
    if exist amq_peer_agent.smt del amq_peer_agent.smt
    if exist amq_exchange_table.icl del amq_exchange_table.icl
    if exist amq_exchange_list.icl del amq_exchange_list.icl
    if exist amq_binding_list.icl del amq_binding_list.icl
    if exist amq_queue_bindings_list_table.icl del amq_queue_bindings_list_table.icl
    if exist amq_index_hash.icl del amq_index_hash.icl
    if exist amq_index_array.icl del amq_index_array.icl
    if exist amq_queue_table.icl del amq_queue_table.icl
    if exist amq_queue_list.icl del amq_queue_list.icl
    if exist amq_connection_by_broker.icl del amq_connection_by_broker.icl
    if exist amq_consumer_table.icl del amq_consumer_table.icl
    if exist amq_consumer_by_queue.icl del amq_consumer_by_queue.icl
    if exist amq_consumer_by_channel.icl del amq_consumer_by_channel.icl
    if exist amq_server_method.icl del amq_server_method.icl
    if exist amq_lease_table.icl del amq_lease_table.icl
    if exist amq_console_schema.cml del amq_console_schema.cml
    if exist amq_console_schema.xml del amq_console_schema.xml
    if exist amq_console_config.icl del amq_console_config.icl
    if exist amq_server_config.icl del amq_server_config.icl
    if exist amq_server_config_test.c del amq_server_config_test.c
    if exist amq_server_config.h del amq_server_config.h
    if exist amq_server_config.c del amq_server_config.c
    if exist amq_server_config.txt del amq_server_config.txt
    if exist amq_server_agent.h del amq_server_agent.h
    if exist amq_server_agent.c del amq_server_agent.c
    if exist amq_server_classes.h del amq_server_classes.h
    if exist amq_server_classes.c del amq_server_classes.c
    if exist amq_server_connection_test.c del amq_server_connection_test.c
    if exist amq_server_connection.h del amq_server_connection.h
    if exist amq_server_connection.c del amq_server_connection.c
    if exist amq_server_connection_table_test.c del amq_server_connection_table_test.c
    if exist amq_server_connection_table.h del amq_server_connection_table.h
    if exist amq_server_connection_table.c del amq_server_connection_table.c
    if exist amq_server_connection_list_test.c del amq_server_connection_list_test.c
    if exist amq_server_connection_list.h del amq_server_connection_list.h
    if exist amq_server_connection_list.c del amq_server_connection_list.c
    if exist amq_server_channel_agent.smt del amq_server_channel_agent.smt
    if exist amq_server_channel_agent.h del amq_server_channel_agent.h
    if exist amq_server_channel_agent.c del amq_server_channel_agent.c
    if exist amq_server_channel_test.c del amq_server_channel_test.c
    if exist amq_server_channel.h del amq_server_channel.h
    if exist amq_server_channel.c del amq_server_channel.c
    if exist amq_server_channel_table_test.c del amq_server_channel_table_test.c
    if exist amq_server_channel_table.h del amq_server_channel_table.h
    if exist amq_server_channel_table.c del amq_server_channel_table.c
    if exist amq_server_resource_test.c del amq_server_resource_test.c
    if exist amq_server_resource.h del amq_server_resource.h
    if exist amq_server_resource.c del amq_server_resource.c
    if exist amq_broker_agent.smt del amq_broker_agent.smt
    if exist amq_broker_agent.h del amq_broker_agent.h
    if exist amq_broker_agent.c del amq_broker_agent.c
    if exist amq_broker_test.c del amq_broker_test.c
    if exist amq_broker.h del amq_broker.h
    if exist amq_broker.c del amq_broker.c
    if exist amq_peering_agent.smt del amq_peering_agent.smt
    if exist amq_peering_agent.h del amq_peering_agent.h
    if exist amq_peering_agent.c del amq_peering_agent.c
    if exist amq_peering_test.c del amq_peering_test.c
    if exist amq_peering.h del amq_peering.h
    if exist amq_peering.c del amq_peering.c
    if exist amq_peer_method_test.c del amq_peer_method_test.c
    if exist amq_peer_method.h del amq_peer_method.h
    if exist amq_peer_method.c del amq_peer_method.c
    if exist amq_peer_config.icl del amq_peer_config.icl
    if exist amq_peer_config_test.c del amq_peer_config_test.c
    if exist amq_peer_config.h del amq_peer_config.h
    if exist amq_peer_config.c del amq_peer_config.c
    if exist amq_peer_config.txt del amq_peer_config.txt
    if exist amq_peer_agent.h del amq_peer_agent.h
    if exist amq_peer_agent.c del amq_peer_agent.c
    if exist amq_exchange_system_test.c del amq_exchange_system_test.c
    if exist amq_exchange_system.h del amq_exchange_system.h
    if exist amq_exchange_system.c del amq_exchange_system.c
    if exist amq_exchange_fanout_test.c del amq_exchange_fanout_test.c
    if exist amq_exchange_fanout.h del amq_exchange_fanout.h
    if exist amq_exchange_fanout.c del amq_exchange_fanout.c
    if exist amq_exchange_direct_test.c del amq_exchange_direct_test.c
    if exist amq_exchange_direct.h del amq_exchange_direct.h
    if exist amq_exchange_direct.c del amq_exchange_direct.c
    if exist amq_exchange_topic_test.c del amq_exchange_topic_test.c
    if exist amq_exchange_topic.h del amq_exchange_topic.h
    if exist amq_exchange_topic.c del amq_exchange_topic.c
    if exist amq_exchange_headers_test.c del amq_exchange_headers_test.c
    if exist amq_exchange_headers.h del amq_exchange_headers.h
    if exist amq_exchange_headers.c del amq_exchange_headers.c
    if exist amq_exchange_regexp_test.c del amq_exchange_regexp_test.c
    if exist amq_exchange_regexp.h del amq_exchange_regexp.h
    if exist amq_exchange_regexp.c del amq_exchange_regexp.c
    if exist amq_exchange_agent.smt del amq_exchange_agent.smt
    if exist amq_exchange_agent.h del amq_exchange_agent.h
    if exist amq_exchange_agent.c del amq_exchange_agent.c
    if exist amq_exchange_test.c del amq_exchange_test.c
    if exist amq_exchange.h del amq_exchange.h
    if exist amq_exchange.c del amq_exchange.c
    if exist amq_exchange_table_test.c del amq_exchange_table_test.c
    if exist amq_exchange_table.h del amq_exchange_table.h
    if exist amq_exchange_table.c del amq_exchange_table.c
    if exist amq_exchange_list_test.c del amq_exchange_list_test.c
    if exist amq_exchange_list.h del amq_exchange_list.h
    if exist amq_exchange_list.c del amq_exchange_list.c
    if exist amq_binding_test.c del amq_binding_test.c
    if exist amq_binding.h del amq_binding.h
    if exist amq_binding.c del amq_binding.c
    if exist amq_binding_list_test.c del amq_binding_list_test.c
    if exist amq_binding_list.h del amq_binding_list.h
    if exist amq_binding_list.c del amq_binding_list.c
    if exist amq_binding_mgt_agent.smt del amq_binding_mgt_agent.smt
    if exist amq_binding_mgt_agent.h del amq_binding_mgt_agent.h
    if exist amq_binding_mgt_agent.c del amq_binding_mgt_agent.c
    if exist amq_binding_mgt_test.c del amq_binding_mgt_test.c
    if exist amq_binding_mgt.h del amq_binding_mgt.h
    if exist amq_binding_mgt.c del amq_binding_mgt.c
    if exist amq_queue_bindings_list_test.c del amq_queue_bindings_list_test.c
    if exist amq_queue_bindings_list.h del amq_queue_bindings_list.h
    if exist amq_queue_bindings_list.c del amq_queue_bindings_list.c
    if exist amq_queue_bindings_list_table_test.c del amq_queue_bindings_list_table_test.c
    if exist amq_queue_bindings_list_table.h del amq_queue_bindings_list_table.h
    if exist amq_queue_bindings_list_table.c del amq_queue_bindings_list_table.c
    if exist amq_hitset_test.c del amq_hitset_test.c
    if exist amq_hitset.h del amq_hitset.h
    if exist amq_hitset.c del amq_hitset.c
    if exist amq_index_test.c del amq_index_test.c
    if exist amq_index.h del amq_index.h
    if exist amq_index.c del amq_index.c
    if exist amq_index_hash_test.c del amq_index_hash_test.c
    if exist amq_index_hash.h del amq_index_hash.h
    if exist amq_index_hash.c del amq_index_hash.c
    if exist amq_index_array_test.c del amq_index_array_test.c
    if exist amq_index_array.h del amq_index_array.h
    if exist amq_index_array.c del amq_index_array.c
    if exist amq_queue_agent.smt del amq_queue_agent.smt
    if exist amq_queue_agent.h del amq_queue_agent.h
    if exist amq_queue_agent.c del amq_queue_agent.c
    if exist amq_queue_test.c del amq_queue_test.c
    if exist amq_queue.h del amq_queue.h
    if exist amq_queue.c del amq_queue.c
    if exist amq_queue_table_test.c del amq_queue_table_test.c
    if exist amq_queue_table.h del amq_queue_table.h
    if exist amq_queue_table.c del amq_queue_table.c
    if exist amq_queue_list_test.c del amq_queue_list_test.c
    if exist amq_queue_list.h del amq_queue_list.h
    if exist amq_queue_list.c del amq_queue_list.c
    if exist amq_queue_set_test.c del amq_queue_set_test.c
    if exist amq_queue_set.h del amq_queue_set.h
    if exist amq_queue_set.c del amq_queue_set.c
    if exist amq_queue_basic_test.c del amq_queue_basic_test.c
    if exist amq_queue_basic.h del amq_queue_basic.h
    if exist amq_queue_basic.c del amq_queue_basic.c
    if exist amq_connection_agent.smt del amq_connection_agent.smt
    if exist amq_connection_agent.h del amq_connection_agent.h
    if exist amq_connection_agent.c del amq_connection_agent.c
    if exist amq_connection_test.c del amq_connection_test.c
    if exist amq_connection.h del amq_connection.h
    if exist amq_connection.c del amq_connection.c
    if exist amq_connection_by_broker_test.c del amq_connection_by_broker_test.c
    if exist amq_connection_by_broker.h del amq_connection_by_broker.h
    if exist amq_connection_by_broker.c del amq_connection_by_broker.c
    if exist amq_consumer_test.c del amq_consumer_test.c
    if exist amq_consumer.h del amq_consumer.h
    if exist amq_consumer.c del amq_consumer.c
    if exist amq_consumer_table_test.c del amq_consumer_table_test.c
    if exist amq_consumer_table.h del amq_consumer_table.h
    if exist amq_consumer_table.c del amq_consumer_table.c
    if exist amq_consumer_by_queue_test.c del amq_consumer_by_queue_test.c
    if exist amq_consumer_by_queue.h del amq_consumer_by_queue.h
    if exist amq_consumer_by_queue.c del amq_consumer_by_queue.c
    if exist amq_consumer_by_channel_test.c del amq_consumer_by_channel_test.c
    if exist amq_consumer_by_channel.h del amq_consumer_by_channel.h
    if exist amq_consumer_by_channel.c del amq_consumer_by_channel.c
    if exist amq_consumer_basic_test.c del amq_consumer_basic_test.c
    if exist amq_consumer_basic.h del amq_consumer_basic.h
    if exist amq_consumer_basic.c del amq_consumer_basic.c
    if exist amq_queue_connection_agent.smt del amq_queue_connection_agent.smt
    if exist amq_queue_connection_agent.h del amq_queue_connection_agent.h
    if exist amq_queue_connection_agent.c del amq_queue_connection_agent.c
    if exist amq_queue_connection_test.c del amq_queue_connection_test.c
    if exist amq_queue_connection.h del amq_queue_connection.h
    if exist amq_queue_connection.c del amq_queue_connection.c
    if exist amq_queue_binding_agent.smt del amq_queue_binding_agent.smt
    if exist amq_queue_binding_agent.h del amq_queue_binding_agent.h
    if exist amq_queue_binding_agent.c del amq_queue_binding_agent.c
    if exist amq_queue_binding_test.c del amq_queue_binding_test.c
    if exist amq_queue_binding.h del amq_queue_binding.h
    if exist amq_queue_binding.c del amq_queue_binding.c
    if exist amq_connection_queue_agent.smt del amq_connection_queue_agent.smt
    if exist amq_connection_queue_agent.h del amq_connection_queue_agent.h
    if exist amq_connection_queue_agent.c del amq_connection_queue_agent.c
    if exist amq_connection_queue_test.c del amq_connection_queue_test.c
    if exist amq_connection_queue.h del amq_connection_queue.h
    if exist amq_connection_queue.c del amq_connection_queue.c
    if exist amq_resource_test.c del amq_resource_test.c
    if exist amq_resource.h del amq_resource.h
    if exist amq_resource.c del amq_resource.c
    if exist amq_server_method_test.c del amq_server_method_test.c
    if exist amq_server_method.h del amq_server_method.h
    if exist amq_server_method.c del amq_server_method.c
    if exist amq_federation_agent.smt del amq_federation_agent.smt
    if exist amq_federation_agent.h del amq_federation_agent.h
    if exist amq_federation_agent.c del amq_federation_agent.c
    if exist amq_federation_test.c del amq_federation_test.c
    if exist amq_federation.h del amq_federation.h
    if exist amq_federation.c del amq_federation.c
    if exist amq_failover_agent.smt del amq_failover_agent.smt
    if exist amq_failover_agent.h del amq_failover_agent.h
    if exist amq_failover_agent.c del amq_failover_agent.c
    if exist amq_failover_test.c del amq_failover_test.c
    if exist amq_failover.h del amq_failover.h
    if exist amq_failover.c del amq_failover.c
    if exist amq_lease_test.c del amq_lease_test.c
    if exist amq_lease.h del amq_lease.h
    if exist amq_lease.c del amq_lease.c
    if exist amq_lease_table_test.c del amq_lease_table_test.c
    if exist amq_lease_table.h del amq_lease_table.h
    if exist amq_lease_table.c del amq_lease_table.c
    if exist amq_console_agent.smt del amq_console_agent.smt
    if exist amq_console_agent.h del amq_console_agent.h
    if exist amq_console_agent.c del amq_console_agent.c
    if exist amq_console_test.c del amq_console_test.c
    if exist amq_console.h del amq_console.h
    if exist amq_console.c del amq_console.c
    if exist amq_console_class_test.c del amq_console_class_test.c
    if exist amq_console_class.h del amq_console_class.h
    if exist amq_console_class.c del amq_console_class.c
    if exist amq_console_config_agent.smt del amq_console_config_agent.smt
    if exist amq_console_config_agent.h del amq_console_config_agent.h
    if exist amq_console_config_agent.c del amq_console_config_agent.c
    if exist amq_console_config_test.c del amq_console_config_test.c
    if exist amq_console_config.h del amq_console_config.h
    if exist amq_console_config.c del amq_console_config.c
    if exist amq_cml_test.c del amq_cml_test.c
    if exist amq_cml.h del amq_cml.h
    if exist amq_cml.c del amq_cml.c
    if exist stamp_generate del stamp_generate
    if exist configure del configure
    if exist Makefile.unix del Makefile.unix
    if exist configure.bat del configure.bat
    if exist Makefile.win32 del Makefile.win32
    if exist amq_server.vcproj del amq_server.vcproj
    if exist libamq_server.vcproj del libamq_server.vcproj
    if exist OpenAMQ_Server_*.zip del OpenAMQ_Server_*.zip
    goto :eof

:-------------------------   REPORT HELP INFORMATION   ------------------------

:a_report_help_information
    echo The commands you can currently use on this project are:
    echo.
    goto r_!state!
    goto :eof

:-------------------------   REPORT PROJECT VERSION   -------------------------

:a_report_project_version
    echo OpenAMQ_Server-1.4c1
    goto :eof

:--------------------------   RUN REGRESSION TESTS   --------------------------

:a_run_regression_tests
    echo boom I: [OpenAMQ_Server]: Running regression tests...
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_config_test
    ) else (
        set RUN_COMMAND=amq_server_config_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_connection_test
    ) else (
        set RUN_COMMAND=amq_server_connection_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_connection_table_test
    ) else (
        set RUN_COMMAND=amq_server_connection_table_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_connection_list_test
    ) else (
        set RUN_COMMAND=amq_server_connection_list_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_channel_test
    ) else (
        set RUN_COMMAND=amq_server_channel_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_channel_table_test
    ) else (
        set RUN_COMMAND=amq_server_channel_table_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_resource_test
    ) else (
        set RUN_COMMAND=amq_server_resource_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_broker_test
    ) else (
        set RUN_COMMAND=amq_broker_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_peering_test
    ) else (
        set RUN_COMMAND=amq_peering_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_peer_method_test
    ) else (
        set RUN_COMMAND=amq_peer_method_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_peer_config_test
    ) else (
        set RUN_COMMAND=amq_peer_config_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_system_test
    ) else (
        set RUN_COMMAND=amq_exchange_system_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_fanout_test
    ) else (
        set RUN_COMMAND=amq_exchange_fanout_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_direct_test
    ) else (
        set RUN_COMMAND=amq_exchange_direct_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_topic_test
    ) else (
        set RUN_COMMAND=amq_exchange_topic_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_headers_test
    ) else (
        set RUN_COMMAND=amq_exchange_headers_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_regexp_test
    ) else (
        set RUN_COMMAND=amq_exchange_regexp_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_test
    ) else (
        set RUN_COMMAND=amq_exchange_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_table_test
    ) else (
        set RUN_COMMAND=amq_exchange_table_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_exchange_list_test
    ) else (
        set RUN_COMMAND=amq_exchange_list_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_binding_test
    ) else (
        set RUN_COMMAND=amq_binding_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_binding_list_test
    ) else (
        set RUN_COMMAND=amq_binding_list_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_binding_mgt_test
    ) else (
        set RUN_COMMAND=amq_binding_mgt_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_bindings_list_test
    ) else (
        set RUN_COMMAND=amq_queue_bindings_list_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_bindings_list_table_test
    ) else (
        set RUN_COMMAND=amq_queue_bindings_list_table_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_hitset_test
    ) else (
        set RUN_COMMAND=amq_hitset_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_index_test
    ) else (
        set RUN_COMMAND=amq_index_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_index_hash_test
    ) else (
        set RUN_COMMAND=amq_index_hash_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_index_array_test
    ) else (
        set RUN_COMMAND=amq_index_array_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_test
    ) else (
        set RUN_COMMAND=amq_queue_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_table_test
    ) else (
        set RUN_COMMAND=amq_queue_table_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_list_test
    ) else (
        set RUN_COMMAND=amq_queue_list_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_set_test
    ) else (
        set RUN_COMMAND=amq_queue_set_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_basic_test
    ) else (
        set RUN_COMMAND=amq_queue_basic_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_connection_test
    ) else (
        set RUN_COMMAND=amq_connection_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_connection_by_broker_test
    ) else (
        set RUN_COMMAND=amq_connection_by_broker_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_consumer_test
    ) else (
        set RUN_COMMAND=amq_consumer_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_consumer_table_test
    ) else (
        set RUN_COMMAND=amq_consumer_table_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_consumer_by_queue_test
    ) else (
        set RUN_COMMAND=amq_consumer_by_queue_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_consumer_by_channel_test
    ) else (
        set RUN_COMMAND=amq_consumer_by_channel_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_consumer_basic_test
    ) else (
        set RUN_COMMAND=amq_consumer_basic_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_connection_test
    ) else (
        set RUN_COMMAND=amq_queue_connection_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_queue_binding_test
    ) else (
        set RUN_COMMAND=amq_queue_binding_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_connection_queue_test
    ) else (
        set RUN_COMMAND=amq_connection_queue_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_resource_test
    ) else (
        set RUN_COMMAND=amq_resource_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_server_method_test
    ) else (
        set RUN_COMMAND=amq_server_method_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_federation_test
    ) else (
        set RUN_COMMAND=amq_federation_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_failover_test
    ) else (
        set RUN_COMMAND=amq_failover_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_lease_test
    ) else (
        set RUN_COMMAND=amq_lease_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_lease_table_test
    ) else (
        set RUN_COMMAND=amq_lease_table_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_console_test
    ) else (
        set RUN_COMMAND=amq_console_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_console_class_test
    ) else (
        set RUN_COMMAND=amq_console_class_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_console_config_test
    ) else (
        set RUN_COMMAND=amq_console_config_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=amq_cml_test
    ) else (
        set RUN_COMMAND=amq_cml_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    :-  Run local selftest script if present
    if exist selftest.bat (
    if "!BOOM_TRACE!"=="1" echo selftest
    verify>nul
    call selftest
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Server]: 'selftest' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   USE SOURCE CONTROL REVISION   ----------------------

:a_use_source_control_revision
    set SVN_REVISION=svn
    if exist .svn
ul (
        for /f "usebackq tokens=1,2 delims=: " %%v in (`svn info`) do if "%%v"=="Revision" set SVN_REVISION=%%w
    )
    set MY_VERSION=!MY_VERSION!-!SVN_REVISION!
    goto :eof

:s_initial
    if "!debug!"=="1" echo State: initial
    if "!event!"=="" goto s_1_empty
    if "!event!"=="ok" goto s_1_1
    goto s_win32
:s_1_1
    if "!debug!"=="1" echo Event: ok
    set event=
    if "!debug!"=="1" echo Action: check operating context
    set _exception=
    call :a_check_operating_context
    if "!_exception!"=="1" exit /b 1
    set state=initial_check
    goto s_!state!
:s_1_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial
:r_initial
    goto r_win32

:s_initial_check
    if "!debug!"=="1" echo State: initial check
    if "!event!"=="" goto s_2_empty
    if "!event!"=="repository" goto s_2_1
    if "!event!"=="source" goto s_2_2
    if "!event!"=="stripped" goto s_2_3
    goto s_win32
:s_2_1
    if "!debug!"=="1" echo Event: repository
    set event=
    set state=repository
    goto s_!state!
:s_2_2
    if "!debug!"=="1" echo Event: source
    set event=
    set state=source
    goto s_!state!
:s_2_3
    if "!debug!"=="1" echo Event: stripped
    set event=
    set state=stripped
    goto s_!state!
:s_2_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial_check
:r_initial_check
    goto r_win32

:s_repository
    if "!debug!"=="1" echo State: repository
    if "!event!"=="" goto s_3_empty
    if "!event!"=="build" goto s_3_1
    if "!event!"=="compile" goto s_3_2
    if "!event!"=="clean" goto s_3_3
    if "!event!"=="regen" goto s_3_4
    if "!event!"=="allgen" goto s_3_5
    if "!event!"=="distrib" goto s_3_6
    if "!event!"=="distsrc" goto s_3_7
    if "!event!"=="distrev" goto s_3_8
    goto s_default
:s_3_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_2
    if "!debug!"=="1" echo Event: compile
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_3
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated sources
    set _exception=
    call :a_remove_generated_sources
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_4
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_5
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_6
    if "!debug!"=="1" echo Event: distrib
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_7
    if "!debug!"=="1" echo Event: distsrc
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_8
    if "!debug!"=="1" echo Event: distrev
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: use source control revision
    set _exception=
    call :a_use_source_control_revision
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_repository
:r_repository
echo build:
    echo   From the raw project sources, produces all generated files, and
    echo     compiles all source files.
echo compile:
    echo   From the raw project sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the raw project sources, removes all generated
    echo     source and binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
echo distrib:
    echo   Creates a source distribution for the project.  Note that binary
    echo     distributions can only be created at the product level.
echo distsrc:
    echo   Equivalent to distrib, provided for compatibility.
echo distrev:
    echo   Creates a source distribution for the project.  Builds distribution
    echo     packages based on source control version number. Note that binary
    echo     distributions can only be created at the product level.
    goto r_default

:s_source
    if "!debug!"=="1" echo State: source
    if "!event!"=="" goto s_4_empty
    if "!event!"=="build" goto s_4_1
    if "!event!"=="clean" goto s_4_2
    if "!event!"=="regen" goto s_4_3
    if "!event!"=="allgen" goto s_4_4
    goto s_default
:s_4_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_3
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_4
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_source
:r_source
echo build:
    echo   From the packaged sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
    goto r_default

:s_stripped
    if "!debug!"=="1" echo State: stripped
    if "!event!"=="" goto s_5_empty
    if "!event!"=="build" goto s_5_1
    if "!event!"=="clean" goto s_5_2
    goto s_default
:s_5_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_stripped
:r_stripped
echo build:
    echo   From the stripped-down packaged sources, compiles all source files
    echo     without any code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
    goto r_default

:s_default
    if "!debug!"=="1" echo State: default
    if "!event!"=="" goto s_6_empty
    if "!event!"=="install" goto s_6_1
    if "!event!"=="test" goto s_6_2
    if "!event!"=="help" goto s_6_3
    if "!event!"=="version" goto s_6_4
    if "!event!"=="empty" goto s_6_5
    goto s_win32
:s_6_1
    if "!debug!"=="1" echo Event: install
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: install deliverables
    set _exception=
    call :a_install_deliverables
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_2
    if "!debug!"=="1" echo Event: test
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: run regression tests
    set _exception=
    call :a_run_regression_tests
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_3
    if "!debug!"=="1" echo Event: help
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_4
    if "!debug!"=="1" echo Event: version
    set event=
    if "!debug!"=="1" echo Action: report project version
    set _exception=
    call :a_report_project_version
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_5
    if "!debug!"=="1" echo Event: empty
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_default
:r_default
echo install:
    echo   Installs deliverables into the final or temporary install tree.
    echo     This action is only valid after a successful build.
echo test:
    echo   Runs regression tests for the project.
echo help:
    echo   Shows a list of the commands allowed on the project.
echo version:
    echo   Show project version.
    goto r_win32


exit /b 0
