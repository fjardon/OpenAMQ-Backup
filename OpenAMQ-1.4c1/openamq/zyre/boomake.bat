@echo off
:-
:-  Boom builder for OpenAMQ Zyre 1.4c1
:-  Generated by iMatix Boom from standard.pwl
:-  
:-  Copyright (c) 1996-2009 iMatix Corporation
:-  All rights reserved.
:-  
:-  This file is licensed under the BSD license as follows:
:-  
:-  Redistribution and use in source and binary forms, with or without
:-  modification, are permitted provided that the following conditions
:-  are met:
:-  
:-  * Redistributions of source code must retain the above copyright
:-    notice, this list of conditions and the following disclaimer.
:-  * Redistributions in binary form must reproduce the above copyright
:-    notice, this list of conditions and the following disclaimer in
:-    the documentation and/or other materials provided with the
:-    distribution.
:-  * Neither the name of iMatix Corporation nor the names of its
:-    contributors may be used to endorse or promote products derived
:-    from this software without specific prior written permission.
:-  
:-  THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
:-  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
:-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
:-  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
:-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
:-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
:-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
:-  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
:-  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
:-  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
:-  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
:-
:-  Start CMD.EXE version detection
verify other 2>nul
setlocal enableextensions
if errorlevel 0 goto __cmd_ok
echo %0: This command requires command extensions version 2 in CMD.EXE.  
echo %0: Please use a supported system (Windows 2000 or newer).
exit
:__cmd_ok
setlocal enabledelayedexpansion
:-  End CMD.EXE version detection
goto :init
:-
:-  Subroutine: boom_model_init
:-  Initialises BOOM_MODEL to default if not set
:-  Expands BOOM_MODEL components into individual environment variables
:-
:boom_model_init
if "!BOOM_MODEL!"=="" (
    set BOOM_MODEL=release,st
)
set BOOM_MODEL__PLACEHOLDER=1
for /f "usebackq delims==" %%v in (`set BOOM_MODEL_`) do set %%v=
set BOOM_MODEL__PLACEHOLDER=
for %%m in (!BOOM_MODEL!) do set BOOM_MODEL_%%m=1
:-  If the user set BOOM_MODEL but did not include release/debug or st/mt
:-  set these to defaults.
if not "!BOOM_MODEL_RELEASE!"=="1" (
    if not "!BOOM_MODEL_DEBUG!"=="1" (
        set BOOM_MODEL_RELEASE=1
        set BOOM_MODEL=!BOOM_MODEL!,release
    )
)
if not "!BOOM_MODEL_ST!"=="1" (
    if not "!BOOM_MODEL_MT!"=="1" (
        set BOOM_MODEL_ST=1
        set BOOM_MODEL=!BOOM_MODEL!,st
    )
)
goto :eof
:init
setlocal
:-
:-  Set environment variables to point to install location
:-  Start by using final IBASE, then handle -install path
set self=%0
set MY_VERSION=1.4c1
set OLDPATH=!PATH!
set OLDPERLLIB=!PERLLIB!
if .!IBASE!==. (
    echo boom E: [OpenAMQ_Zyre]: The IBASE variable is not set.    Please set it to the location where OpenAMQ Zyre should be installed.
    exit /b 1
)
if .%1==.-v (
    set BOOM_TRACE=1
    shift
)
call :boom_model_init
if .%1==.-install goto tempinst
:-  Normal use, use IBASE
    set PATH=!IBASE!\bin;!PATH!
    set PERLLIB=!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!IBASE!\include
    set _INSTALL_ROOT=!IBASE!
    goto process

:tempinst
:-  Building product, we use -install directory first, then IBASE
    if not exist %2 (
       echo "Invalid command syntax - please contact imatix-tech"
       exit /b 1
    )
    pushd %2
    set _LOCAL_BASE=!cd!
    popd
    set PATH=!_LOCAL_BASE!\bin;!IBASE!\bin;!PATH!
    set PERLLIB=!_LOCAL_BASE!\bin;!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!_LOCAL_BASE!\include;!IBASE!\include
    set _INSTALL_ROOT=!_LOCAL_BASE!
    shift
    shift
    goto process

:batch
    shift

:process
    set state=initial
    set event=ok
    set debug=0
    goto s_!state!

:---------------------------   BUILD BINARY FILES   ---------------------------

:a_build_binary_files
    echo boom I: [OpenAMQ_Zyre]: Building OpenAMQ Zyre...
    if "!MSVCDir!"=="" set MSVCDir=C:\Program Files\Microsoft Visual Studio\VC98
    if not exist "!MSVCDir!\bin" (
        echo boom E: [OpenAMQ_Zyre]: Cannot find MSVC compiler in !MSVCdir!.
        echo boom E: [OpenAMQ_Zyre]: Please set MSVCDir environment variable to VC98 directory.
        set _exception=1
        goto :eof
    )
    set INCDIR=
    set LIBDIR=
    if "!BOOM_TRACE!"=="1" (
        set MY_COPTS=-v
    ) else (
        set MY_COPTS=-q
    )
    if not "!_LOCAL_BASE!"=="" (
        set MY_COPTS=!MY_COPTS! -li !_LOCAL_BASE!\include -ll !_LOCAL_BASE!\lib
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre
    verify>nul
    call c !MY_COPTS! zyre
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_config_test
    verify>nul
    call c !MY_COPTS! zyre_config_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_config_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_config
    verify>nul
    call c !MY_COPTS! zyre_config
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_config' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_backend_test
    verify>nul
    call c !MY_COPTS! zyre_backend_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_backend_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_backend
    verify>nul
    call c !MY_COPTS! zyre_backend
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_backend' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_resource_test
    verify>nul
    call c !MY_COPTS! zyre_resource_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_resource_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_resource
    verify>nul
    call c !MY_COPTS! zyre_resource
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_resource' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_domain_test
    verify>nul
    call c !MY_COPTS! zyre_domain_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_domain_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_domain
    verify>nul
    call c !MY_COPTS! zyre_domain
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_domain' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_feed_test
    verify>nul
    call c !MY_COPTS! zyre_feed_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_feed_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_feed
    verify>nul
    call c !MY_COPTS! zyre_feed
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_feed' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_pipe_test
    verify>nul
    call c !MY_COPTS! zyre_pipe_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_pipe_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_pipe
    verify>nul
    call c !MY_COPTS! zyre_pipe
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_pipe' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_join_test
    verify>nul
    call c !MY_COPTS! zyre_join_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_join_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_join
    verify>nul
    call c !MY_COPTS! zyre_join
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_join' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_message_test
    verify>nul
    call c !MY_COPTS! zyre_message_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_message_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_message
    verify>nul
    call c !MY_COPTS! zyre_message
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_message' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_content_test
    verify>nul
    call c !MY_COPTS! zyre_content_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_content_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_content
    verify>nul
    call c !MY_COPTS! zyre_content
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_content' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_restms_agent
    verify>nul
    call c !MY_COPTS! zyre_restms_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_restms_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_restms_test
    verify>nul
    call c !MY_COPTS! zyre_restms_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_restms_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_restms
    verify>nul
    call c !MY_COPTS! zyre_restms
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_restms' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_amqp_feed_test
    verify>nul
    call c !MY_COPTS! zyre_amqp_feed_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_amqp_feed_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_amqp_feed
    verify>nul
    call c !MY_COPTS! zyre_amqp_feed
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_amqp_feed' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_amqp_pipe_test
    verify>nul
    call c !MY_COPTS! zyre_amqp_pipe_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_amqp_pipe_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_amqp_pipe
    verify>nul
    call c !MY_COPTS! zyre_amqp_pipe
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_amqp_pipe' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_amqp_join_test
    verify>nul
    call c !MY_COPTS! zyre_amqp_join_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_amqp_join_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_amqp_join
    verify>nul
    call c !MY_COPTS! zyre_amqp_join
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_amqp_join' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_backend_amqp_agent
    verify>nul
    call c !MY_COPTS! zyre_backend_amqp_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_backend_amqp_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_backend_amqp_test
    verify>nul
    call c !MY_COPTS! zyre_backend_amqp_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_backend_amqp_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_backend_amqp
    verify>nul
    call c !MY_COPTS! zyre_backend_amqp
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_backend_amqp' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_digest_amqp_agent
    verify>nul
    call c !MY_COPTS! zyre_digest_amqp_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_digest_amqp_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_digest_amqp_test
    verify>nul
    call c !MY_COPTS! zyre_digest_amqp_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_digest_amqp_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_digest_amqp
    verify>nul
    call c !MY_COPTS! zyre_digest_amqp
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_digest_amqp' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_peer_method_test
    verify>nul
    call c !MY_COPTS! zyre_peer_method_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_peer_method_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_peer_method
    verify>nul
    call c !MY_COPTS! zyre_peer_method
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_peer_method' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_peer_config_test
    verify>nul
    call c !MY_COPTS! zyre_peer_config_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_peer_config_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_peer_config
    verify>nul
    call c !MY_COPTS! zyre_peer_config
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_peer_config' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_peer_agent
    verify>nul
    call c !MY_COPTS! zyre_peer_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_peer_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_classes
    verify>nul
    call c !MY_COPTS! zyre_classes
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_classes' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_static_test
    verify>nul
    call c !MY_COPTS! zyre_static_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_static_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! zyre_static
    verify>nul
    call c !MY_COPTS! zyre_static
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! zyre_static' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_config
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_config
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_config' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_backend
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_backend
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_backend' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_resource
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_resource
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_resource' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_domain
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_domain
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_domain' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_feed
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_feed
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_feed' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_pipe
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_pipe
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_pipe' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_join
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_join
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_join' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_message
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_message
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_message' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_content
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_content
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_content' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_restms_agent
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_restms_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_restms_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_restms
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_restms
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_restms' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_feed
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_feed
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_feed' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_pipe
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_pipe
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_pipe' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_join
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_join
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_amqp_join' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_backend_amqp_agent
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_backend_amqp_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_backend_amqp_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_backend_amqp
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_backend_amqp
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_backend_amqp' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_digest_amqp_agent
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_digest_amqp_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_digest_amqp_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_digest_amqp
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_digest_amqp
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_digest_amqp' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_peer_method
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_peer_method
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_peer_method' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_peer_config
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_peer_config
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_peer_config' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_peer_agent
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_peer_agent
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_peer_agent' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_classes
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_classes
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_classes' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -r libamq_zyre.lib zyre_static
    verify>nul
    call c !MY_COPTS! -r libamq_zyre.lib zyre_static
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -r libamq_zyre.lib zyre_static' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre
    verify>nul
    call c !MY_COPTS! -L zyre
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_config_test
    verify>nul
    call c !MY_COPTS! -L zyre_config_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_config_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_backend_test
    verify>nul
    call c !MY_COPTS! -L zyre_backend_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_backend_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_resource_test
    verify>nul
    call c !MY_COPTS! -L zyre_resource_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_resource_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_domain_test
    verify>nul
    call c !MY_COPTS! -L zyre_domain_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_domain_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_feed_test
    verify>nul
    call c !MY_COPTS! -L zyre_feed_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_feed_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_pipe_test
    verify>nul
    call c !MY_COPTS! -L zyre_pipe_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_pipe_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_join_test
    verify>nul
    call c !MY_COPTS! -L zyre_join_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_join_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_message_test
    verify>nul
    call c !MY_COPTS! -L zyre_message_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_message_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_content_test
    verify>nul
    call c !MY_COPTS! -L zyre_content_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_content_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_restms_test
    verify>nul
    call c !MY_COPTS! -L zyre_restms_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_restms_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_amqp_feed_test
    verify>nul
    call c !MY_COPTS! -L zyre_amqp_feed_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_amqp_feed_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_amqp_pipe_test
    verify>nul
    call c !MY_COPTS! -L zyre_amqp_pipe_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_amqp_pipe_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_amqp_join_test
    verify>nul
    call c !MY_COPTS! -L zyre_amqp_join_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_amqp_join_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_backend_amqp_test
    verify>nul
    call c !MY_COPTS! -L zyre_backend_amqp_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_backend_amqp_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_digest_amqp_test
    verify>nul
    call c !MY_COPTS! -L zyre_digest_amqp_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_digest_amqp_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_peer_method_test
    verify>nul
    call c !MY_COPTS! -L zyre_peer_method_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_peer_method_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_peer_config_test
    verify>nul
    call c !MY_COPTS! -L zyre_peer_config_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_peer_config_test' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo c !MY_COPTS! -L zyre_static_test
    verify>nul
    call c !MY_COPTS! -L zyre_static_test
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'c !MY_COPTS! -L zyre_static_test' failed - stop.
        set _exception=1
        goto :eof
    )
    pushd webpages\
    popd
    goto :eof

:--------------------------   BUILD SOURCE PACKAGES   -------------------------

:a_build_source_packages
   if exist _package.lst del _package.lst
    if exist zyre\version.h echo zyre\version.h>>_package.lst
    if exist zyre\zyre.c echo zyre\zyre.c>>_package.lst
    if exist zyre\zyre_main.inc echo zyre\zyre_main.inc>>_package.lst
    if exist zyre\zyre_config.opf echo zyre\zyre_config.opf>>_package.lst
    if exist zyre\zyre_config.icl echo zyre\zyre_config.icl>>_package.lst
    if exist zyre\zyre_backend.icl echo zyre\zyre_backend.icl>>_package.lst
    if exist zyre\zyre_resource.icl echo zyre\zyre_resource.icl>>_package.lst
    if exist zyre\zyre_domain.icl echo zyre\zyre_domain.icl>>_package.lst
    if exist zyre\zyre_feed.icl echo zyre\zyre_feed.icl>>_package.lst
    if exist zyre\zyre_pipe.icl echo zyre\zyre_pipe.icl>>_package.lst
    if exist zyre\zyre_join.icl echo zyre\zyre_join.icl>>_package.lst
    if exist zyre\zyre_message.icl echo zyre\zyre_message.icl>>_package.lst
    if exist zyre\zyre_content.icl echo zyre\zyre_content.icl>>_package.lst
    if exist zyre\zyre_restms.icl echo zyre\zyre_restms.icl>>_package.lst
    if exist zyre\zyre_amqp_feed.icl echo zyre\zyre_amqp_feed.icl>>_package.lst
    if exist zyre\zyre_amqp_pipe.icl echo zyre\zyre_amqp_pipe.icl>>_package.lst
    if exist zyre\zyre_amqp_join.icl echo zyre\zyre_amqp_join.icl>>_package.lst
    if exist zyre\zyre_backend_amqp.icl echo zyre\zyre_backend_amqp.icl>>_package.lst
    if exist zyre\zyre_digest_amqp.icl echo zyre\zyre_digest_amqp.icl>>_package.lst
    if exist zyre\zyre_peer.asl echo zyre\zyre_peer.asl>>_package.lst
    if exist zyre\zyre_peer_method.icl echo zyre\zyre_peer_method.icl>>_package.lst
    if exist zyre\zyre_peer_config.opf echo zyre\zyre_peer_config.opf>>_package.lst
    if exist zyre\zyre_peer_config.icl echo zyre\zyre_peer_config.icl>>_package.lst
    if exist zyre\zyre_peer_config.txt echo zyre\zyre_peer_config.txt>>_package.lst
    if exist zyre\zyre_peer_agent.smt echo zyre\zyre_peer_agent.smt>>_package.lst
    if exist zyre\zyre_classes.icl echo zyre\zyre_classes.icl>>_package.lst
    if exist zyre\zyre_static.rc echo zyre\zyre_static.rc>>_package.lst
    if exist zyre\zyre_base.cfg echo zyre\zyre_base.cfg>>_package.lst
    if exist zyre\prelude.pdl echo zyre\prelude.pdl>>_package.lst
    if exist zyre\license.gpl echo zyre\license.gpl>>_package.lst
    if exist zyre\project.pdl echo zyre\project.pdl>>_package.lst
    if exist zyre\readme.txt echo zyre\readme.txt>>_package.lst
    if exist zyre\zyre_config_test.c echo zyre\zyre_config_test.c>>_package.lst
    if exist zyre\zyre_config.h echo zyre\zyre_config.h>>_package.lst
    if exist zyre\zyre_config.c echo zyre\zyre_config.c>>_package.lst
    if exist zyre\zyre_backend_front.icl echo zyre\zyre_backend_front.icl>>_package.lst
    if exist zyre\zyre_backend_back.icl echo zyre\zyre_backend_back.icl>>_package.lst
    if exist zyre\zyre_backend_test.c echo zyre\zyre_backend_test.c>>_package.lst
    if exist zyre\zyre_backend.h echo zyre\zyre_backend.h>>_package.lst
    if exist zyre\zyre_backend.c echo zyre\zyre_backend.c>>_package.lst
    if exist zyre\zyre_resource_front.icl echo zyre\zyre_resource_front.icl>>_package.lst
    if exist zyre\zyre_resource_back.icl echo zyre\zyre_resource_back.icl>>_package.lst
    if exist zyre\zyre_resource_test.c echo zyre\zyre_resource_test.c>>_package.lst
    if exist zyre\zyre_resource.h echo zyre\zyre_resource.h>>_package.lst
    if exist zyre\zyre_resource.c echo zyre\zyre_resource.c>>_package.lst
    if exist zyre\zyre_domain_test.c echo zyre\zyre_domain_test.c>>_package.lst
    if exist zyre\zyre_domain.h echo zyre\zyre_domain.h>>_package.lst
    if exist zyre\zyre_domain.c echo zyre\zyre_domain.c>>_package.lst
    if exist zyre\zyre_feed_test.c echo zyre\zyre_feed_test.c>>_package.lst
    if exist zyre\zyre_feed.h echo zyre\zyre_feed.h>>_package.lst
    if exist zyre\zyre_feed.c echo zyre\zyre_feed.c>>_package.lst
    if exist zyre\zyre_pipe_test.c echo zyre\zyre_pipe_test.c>>_package.lst
    if exist zyre\zyre_pipe.h echo zyre\zyre_pipe.h>>_package.lst
    if exist zyre\zyre_pipe.c echo zyre\zyre_pipe.c>>_package.lst
    if exist zyre\zyre_join_test.c echo zyre\zyre_join_test.c>>_package.lst
    if exist zyre\zyre_join.h echo zyre\zyre_join.h>>_package.lst
    if exist zyre\zyre_join.c echo zyre\zyre_join.c>>_package.lst
    if exist zyre\zyre_message_test.c echo zyre\zyre_message_test.c>>_package.lst
    if exist zyre\zyre_message.h echo zyre\zyre_message.h>>_package.lst
    if exist zyre\zyre_message.c echo zyre\zyre_message.c>>_package.lst
    if exist zyre\zyre_content_test.c echo zyre\zyre_content_test.c>>_package.lst
    if exist zyre\zyre_content.h echo zyre\zyre_content.h>>_package.lst
    if exist zyre\zyre_content.c echo zyre\zyre_content.c>>_package.lst
    if exist zyre\zyre_restms_agent.smt echo zyre\zyre_restms_agent.smt>>_package.lst
    if exist zyre\zyre_restms_agent.h echo zyre\zyre_restms_agent.h>>_package.lst
    if exist zyre\zyre_restms_agent.c echo zyre\zyre_restms_agent.c>>_package.lst
    if exist zyre\zyre_restms_test.c echo zyre\zyre_restms_test.c>>_package.lst
    if exist zyre\zyre_restms.h echo zyre\zyre_restms.h>>_package.lst
    if exist zyre\zyre_restms.c echo zyre\zyre_restms.c>>_package.lst
    if exist zyre\zyre_amqp_feed_test.c echo zyre\zyre_amqp_feed_test.c>>_package.lst
    if exist zyre\zyre_amqp_feed.h echo zyre\zyre_amqp_feed.h>>_package.lst
    if exist zyre\zyre_amqp_feed.c echo zyre\zyre_amqp_feed.c>>_package.lst
    if exist zyre\zyre_amqp_pipe_test.c echo zyre\zyre_amqp_pipe_test.c>>_package.lst
    if exist zyre\zyre_amqp_pipe.h echo zyre\zyre_amqp_pipe.h>>_package.lst
    if exist zyre\zyre_amqp_pipe.c echo zyre\zyre_amqp_pipe.c>>_package.lst
    if exist zyre\zyre_amqp_join_test.c echo zyre\zyre_amqp_join_test.c>>_package.lst
    if exist zyre\zyre_amqp_join.h echo zyre\zyre_amqp_join.h>>_package.lst
    if exist zyre\zyre_amqp_join.c echo zyre\zyre_amqp_join.c>>_package.lst
    if exist zyre\zyre_backend_amqp_agent.smt echo zyre\zyre_backend_amqp_agent.smt>>_package.lst
    if exist zyre\zyre_backend_amqp_agent.h echo zyre\zyre_backend_amqp_agent.h>>_package.lst
    if exist zyre\zyre_backend_amqp_agent.c echo zyre\zyre_backend_amqp_agent.c>>_package.lst
    if exist zyre\zyre_backend_amqp_test.c echo zyre\zyre_backend_amqp_test.c>>_package.lst
    if exist zyre\zyre_backend_amqp.h echo zyre\zyre_backend_amqp.h>>_package.lst
    if exist zyre\zyre_backend_amqp.c echo zyre\zyre_backend_amqp.c>>_package.lst
    if exist zyre\zyre_digest_amqp_agent.smt echo zyre\zyre_digest_amqp_agent.smt>>_package.lst
    if exist zyre\zyre_digest_amqp_agent.h echo zyre\zyre_digest_amqp_agent.h>>_package.lst
    if exist zyre\zyre_digest_amqp_agent.c echo zyre\zyre_digest_amqp_agent.c>>_package.lst
    if exist zyre\zyre_digest_amqp_test.c echo zyre\zyre_digest_amqp_test.c>>_package.lst
    if exist zyre\zyre_digest_amqp.h echo zyre\zyre_digest_amqp.h>>_package.lst
    if exist zyre\zyre_digest_amqp.c echo zyre\zyre_digest_amqp.c>>_package.lst
    if exist zyre\zyre_peer_method_test.c echo zyre\zyre_peer_method_test.c>>_package.lst
    if exist zyre\zyre_peer_method.h echo zyre\zyre_peer_method.h>>_package.lst
    if exist zyre\zyre_peer_method.c echo zyre\zyre_peer_method.c>>_package.lst
    if exist zyre\zyre_peer_config_test.c echo zyre\zyre_peer_config_test.c>>_package.lst
    if exist zyre\zyre_peer_config.h echo zyre\zyre_peer_config.h>>_package.lst
    if exist zyre\zyre_peer_config.c echo zyre\zyre_peer_config.c>>_package.lst
    if exist zyre\zyre_peer_agent.h echo zyre\zyre_peer_agent.h>>_package.lst
    if exist zyre\zyre_peer_agent.c echo zyre\zyre_peer_agent.c>>_package.lst
    if exist zyre\zyre_classes.h echo zyre\zyre_classes.h>>_package.lst
    if exist zyre\zyre_classes.c echo zyre\zyre_classes.c>>_package.lst
    if exist zyre\zyre_static.icl echo zyre\zyre_static.icl>>_package.lst
    if exist zyre\zyre_static_test.c echo zyre\zyre_static_test.c>>_package.lst
    if exist zyre\zyre_static.h echo zyre\zyre_static.h>>_package.lst
    if exist zyre\zyre_static.c echo zyre\zyre_static.c>>_package.lst
    if exist zyre\stamp_generate echo zyre\stamp_generate>>_package.lst
    if exist zyre\boomakew.bat echo zyre\boomakew.bat>>_package.lst
    if exist zyre\configure echo zyre\configure>>_package.lst
    if exist zyre\Makefile.unix echo zyre\Makefile.unix>>_package.lst
    if exist zyre\boomake echo zyre\boomake>>_package.lst
    if exist zyre\configure.bat echo zyre\configure.bat>>_package.lst
    if exist zyre\Makefile.win32 echo zyre\Makefile.win32>>_package.lst
    if exist zyre\boomake.bat echo zyre\boomake.bat>>_package.lst
    if exist zyre\zyre.vcproj echo zyre\zyre.vcproj>>_package.lst
    if exist zyre\libamq_zyre.vcproj echo zyre\libamq_zyre.vcproj>>_package.lst
    if exist zyre\webpages\http_base.css echo zyre\webpages\http_base.css>>_package.lst
    if exist zyre\webpages\index.html echo zyre\webpages\index.html>>_package.lst
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    echo boom I: [OpenAMQ_Zyre]: Building OpenAMQ_Zyre-!MY_VERSION!-src.zip...
    zip  -rq _package -@<_package.lst
    unzip -q _package -d OpenAMQ_Zyre-!MY_VERSION!
    if exist  OpenAMQ_Zyre-!MY_VERSION!-src.zip del OpenAMQ_Zyre-!MY_VERSION!-src.zip
    zip -rmq OpenAMQ_Zyre-!MY_VERSION!-src.zip OpenAMQ_Zyre-!MY_VERSION!
    del _package.zip
    del _package.lst
    del stamp_source
    goto :eof

:----------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

:a_check_all_source_files_exist
    if not exist version.h (
        echo boom E: [OpenAMQ_Zyre]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre.c (
        echo boom E: [OpenAMQ_Zyre]: zyre.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_main.inc (
        echo boom E: [OpenAMQ_Zyre]: zyre_main.inc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.opf (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer.asl (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.opf (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.txt (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.rc (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.rc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_base.cfg (
        echo boom E: [OpenAMQ_Zyre]: zyre_base.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [OpenAMQ_Zyre]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Zyre]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_front.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_front.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_back.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_back.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_front.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_front.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_back.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_back.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_join_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_message_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_content_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_static_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [OpenAMQ_Zyre]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [OpenAMQ_Zyre]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [OpenAMQ_Zyre]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [OpenAMQ_Zyre]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [OpenAMQ_Zyre]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [OpenAMQ_Zyre]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [OpenAMQ_Zyre]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [OpenAMQ_Zyre]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre.vcproj (
        echo boom E: [OpenAMQ_Zyre]: zyre.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist libamq_zyre.vcproj (
        echo boom E: [OpenAMQ_Zyre]: libamq_zyre.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    pushd webpages
    if not exist http_base.css (
        echo boom E: [OpenAMQ_Zyre]: http_base.css is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    if not exist index.html (
        echo boom E: [OpenAMQ_Zyre]: index.html is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    popd
    goto :eof

:------------------------   CHECK BINARY FILES EXIST   ------------------------

:a_check_binary_files_exist
    if not exist libamq_zyre.lib (
        echo boom E: [OpenAMQ_Zyre]: libamq_zyre.lib is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre.exe (
        echo boom E: [OpenAMQ_Zyre]: zyre.exe is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.txt (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Zyre]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_front.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_front.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_back.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_back.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_front.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_front.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_back.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_back.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    pushd webpages
    if not exist http_base.css (
        echo boom E: [OpenAMQ_Zyre]: http_base.css is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    if not exist index.html (
        echo boom E: [OpenAMQ_Zyre]: index.html is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    popd
    goto :eof

:-------------------------   CHECK OPERATING CONTEXT   ------------------------

:a_check_operating_context
    set event=repository
    if exist stamp_source   set event=source
    if exist stamp_stripped set event=stripped
    goto :eof

:------------------------   CHECK PROJECT FILES EXIST   -----------------------

:a_check_project_files_exist
    if not exist version.h (
        echo boom E: [OpenAMQ_Zyre]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre.c (
        echo boom E: [OpenAMQ_Zyre]: zyre.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_main.inc (
        echo boom E: [OpenAMQ_Zyre]: zyre_main.inc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.opf (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer.asl (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.opf (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.rc (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.rc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_base.cfg (
        echo boom E: [OpenAMQ_Zyre]: zyre_base.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [OpenAMQ_Zyre]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Zyre]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [OpenAMQ_Zyre]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [OpenAMQ_Zyre]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [OpenAMQ_Zyre]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist webpages\nul (
        echo boom E: [OpenAMQ_Zyre]: directory webpages is missing, cannot continue
        set _exception=1
        goto :eof
    )
    pushd webpages
    if not exist http_base.css (
        echo boom E: [OpenAMQ_Zyre]: http_base.css is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    if not exist index.html (
        echo boom E: [OpenAMQ_Zyre]: index.html is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    popd
    goto :eof

:------------------------   CHECK SOURCE FILES EXIST   ------------------------

:a_check_source_files_exist
    if not exist version.h (
        echo boom E: [OpenAMQ_Zyre]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre.c (
        echo boom E: [OpenAMQ_Zyre]: zyre.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_main.inc (
        echo boom E: [OpenAMQ_Zyre]: zyre_main.inc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.opf (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer.asl (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer.asl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.opf (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.opf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.txt (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.rc (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.rc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_base.cfg (
        echo boom E: [OpenAMQ_Zyre]: zyre_base.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [OpenAMQ_Zyre]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [OpenAMQ_Zyre]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_config.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_front.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_front.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_back.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_back.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_front.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_front.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_back.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_back.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_resource.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_resource.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_domain.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_domain.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_feed.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_feed.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_pipe.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_pipe.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_join_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_join.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_join.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_message_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_message.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_message.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_content_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_content.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_content.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_restms.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_restms.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_feed.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_feed.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_pipe.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_pipe.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_amqp_join.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_amqp_join.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_backend_amqp.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_backend_amqp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_agent.smt (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_agent.smt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_digest_amqp.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_digest_amqp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_method.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_method.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_config.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_config.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_agent.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_agent.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_peer_agent.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_peer_agent.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_classes.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_classes.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.icl (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.icl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static_test.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_static_test.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.h (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre_static.c (
        echo boom E: [OpenAMQ_Zyre]: zyre_static.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [OpenAMQ_Zyre]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [OpenAMQ_Zyre]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [OpenAMQ_Zyre]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [OpenAMQ_Zyre]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [OpenAMQ_Zyre]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [OpenAMQ_Zyre]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [OpenAMQ_Zyre]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [OpenAMQ_Zyre]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist zyre.vcproj (
        echo boom E: [OpenAMQ_Zyre]: zyre.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist libamq_zyre.vcproj (
        echo boom E: [OpenAMQ_Zyre]: libamq_zyre.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    pushd webpages
    if not exist http_base.css (
        echo boom E: [OpenAMQ_Zyre]: http_base.css is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    if not exist index.html (
        echo boom E: [OpenAMQ_Zyre]: index.html is missing, cannot continue
    popd
        set _exception=1
        goto :eof
    )
    popd
    goto :eof

:--------------------------   INSTALL DELIVERABLES   --------------------------

:a_install_deliverables
    echo boom I: [OpenAMQ_Zyre]: installing OpenAMQ Zyre into !_INSTALL_ROOT!...
    if not exist !_INSTALL_ROOT! mkdir !_INSTALL_ROOT!
    if not exist !_INSTALL_ROOT!\lib\nul mkdir !_INSTALL_ROOT!\lib\
    if "!BOOM_TRACE!"=="1" echo copy/y libamq_zyre.lib !_INSTALL_ROOT!\lib\>nul
    verify>nul
    call copy/y libamq_zyre.lib !_INSTALL_ROOT!\lib\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y libamq_zyre.lib !_INSTALL_ROOT!\lib\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y zyre.exe !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre.exe !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre.exe !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_domain.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_domain.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_domain.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_feed.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_feed.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_feed.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_pipe.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_pipe.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_pipe.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_join.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_join.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_join.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_message.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_message.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_message.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_content.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_content.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_content.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_amqp_feed.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_amqp_feed.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_amqp_feed.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_amqp_pipe.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_amqp_pipe.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_amqp_pipe.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_amqp_join.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_amqp_join.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_amqp_join.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_peer_method.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_peer_method.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_peer_method.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_peer_config.txt !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_peer_config.txt !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_peer_config.txt !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_classes.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_classes.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_classes.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\doc\OpenAMQ_Zyre\nul mkdir !_INSTALL_ROOT!\doc\OpenAMQ_Zyre\
    if "!BOOM_TRACE!"=="1" echo copy/y readme.txt !_INSTALL_ROOT!\doc\OpenAMQ_Zyre\>nul
    verify>nul
    call copy/y readme.txt !_INSTALL_ROOT!\doc\OpenAMQ_Zyre\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y readme.txt !_INSTALL_ROOT!\doc\OpenAMQ_Zyre\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_config.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_config.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_config.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_backend_front.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_backend_front.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_backend_front.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_backend_back.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_backend_back.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_backend_back.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_backend.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_backend.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_backend.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_resource_front.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_resource_front.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_resource_front.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_resource_back.icl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y zyre_resource_back.icl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_resource_back.icl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_resource.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_resource.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_resource.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_domain.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_domain.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_domain.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_feed.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_feed.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_feed.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_pipe.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_pipe.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_pipe.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_join.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_join.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_join.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_message.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_message.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_message.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_content.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_content.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_content.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_restms.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_restms.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_restms.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_amqp_feed.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_amqp_feed.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_amqp_feed.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_amqp_pipe.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_amqp_pipe.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_amqp_pipe.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_amqp_join.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_amqp_join.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_amqp_join.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_backend_amqp.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_backend_amqp.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_backend_amqp.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_digest_amqp.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_digest_amqp.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_digest_amqp.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_peer_method.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_peer_method.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_peer_method.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_peer_config.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_peer_config.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_peer_config.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_classes.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_classes.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_classes.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y zyre_static.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y zyre_static.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y zyre_static.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y webpages\http_base.css !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y webpages\http_base.css !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y webpages\http_base.css !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y webpages\index.html !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y webpages\index.html !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'copy/y webpages\index.html !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if exist installer.bat (
    if "!BOOM_TRACE!"=="1" echo installer
    verify>nul
    call installer
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'installer' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   PRODUCE ALL GENERATED FILES   ----------------------

:a_produce_all_generated_files
    echo boom I: [OpenAMQ_Zyre]: Generating files...
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_config.opf
    verify>nul
    call gsl -q -quiet:1 zyre_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_config.icl
    verify>nul
    call gsl -q -quiet:1 zyre_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_backend.icl
    verify>nul
    call gsl -q -quiet:1 zyre_backend.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_backend.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_resource.icl
    verify>nul
    call gsl -q -quiet:1 zyre_resource.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_resource.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_domain.icl
    verify>nul
    call gsl -q -quiet:1 zyre_domain.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_domain.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_feed.icl
    verify>nul
    call gsl -q -quiet:1 zyre_feed.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_feed.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_pipe.icl
    verify>nul
    call gsl -q -quiet:1 zyre_pipe.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_pipe.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_join.icl
    verify>nul
    call gsl -q -quiet:1 zyre_join.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_join.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_message.icl
    verify>nul
    call gsl -q -quiet:1 zyre_message.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_message.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_content.icl
    verify>nul
    call gsl -q -quiet:1 zyre_content.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_content.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_restms.icl
    verify>nul
    call gsl -q -quiet:1 zyre_restms.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_restms.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_amqp_feed.icl
    verify>nul
    call gsl -q -quiet:1 zyre_amqp_feed.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_amqp_feed.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_amqp_pipe.icl
    verify>nul
    call gsl -q -quiet:1 zyre_amqp_pipe.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_amqp_pipe.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_amqp_join.icl
    verify>nul
    call gsl -q -quiet:1 zyre_amqp_join.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_amqp_join.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_backend_amqp.icl
    verify>nul
    call gsl -q -quiet:1 zyre_backend_amqp.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_backend_amqp.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_digest_amqp.icl
    verify>nul
    call gsl -q -quiet:1 zyre_digest_amqp.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_digest_amqp.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer.asl
    verify>nul
    call gsl -q -quiet:1 zyre_peer.asl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer.asl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_method.icl
    verify>nul
    call gsl -q -quiet:1 zyre_peer_method.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_method.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_config.opf
    verify>nul
    call gsl -q -quiet:1 zyre_peer_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_config.icl
    verify>nul
    call gsl -q -quiet:1 zyre_peer_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_peer_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_classes.icl
    verify>nul
    call gsl -q -quiet:1 zyre_classes.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_classes.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo perl -S ipr_resource.pl -@ zyre_static.rc
    verify>nul
    call perl -S ipr_resource.pl -@ zyre_static.rc
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'perl -S ipr_resource.pl -@ zyre_static.rc' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_restms_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_restms_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_restms_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_backend_amqp_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_backend_amqp_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_backend_amqp_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_digest_amqp_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_digest_amqp_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_digest_amqp_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_static.icl
    verify>nul
    call gsl -q -quiet:1 zyre_static.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_static.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    pushd webpages
    popd
    echo Source files successfully generated>stamp_generate
    goto :eof

:-------------------------   PRODUCE GENERATED FILES   ------------------------

:a_produce_generated_files
    echo boom I: [OpenAMQ_Zyre]: Generating files...
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_config.opf
    verify>nul
    call gsl -q -quiet:1 zyre_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_config.icl
    verify>nul
    call gsl -q -quiet:1 zyre_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_backend.icl
    verify>nul
    call gsl -q -quiet:1 zyre_backend.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_backend.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_resource.icl
    verify>nul
    call gsl -q -quiet:1 zyre_resource.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_resource.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_domain.icl
    verify>nul
    call gsl -q -quiet:1 zyre_domain.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_domain.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_feed.icl
    verify>nul
    call gsl -q -quiet:1 zyre_feed.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_feed.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_pipe.icl
    verify>nul
    call gsl -q -quiet:1 zyre_pipe.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_pipe.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_join.icl
    verify>nul
    call gsl -q -quiet:1 zyre_join.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_join.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_message.icl
    verify>nul
    call gsl -q -quiet:1 zyre_message.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_message.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_content.icl
    verify>nul
    call gsl -q -quiet:1 zyre_content.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_content.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_restms.icl
    verify>nul
    call gsl -q -quiet:1 zyre_restms.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_restms.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_amqp_feed.icl
    verify>nul
    call gsl -q -quiet:1 zyre_amqp_feed.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_amqp_feed.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_amqp_pipe.icl
    verify>nul
    call gsl -q -quiet:1 zyre_amqp_pipe.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_amqp_pipe.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_amqp_join.icl
    verify>nul
    call gsl -q -quiet:1 zyre_amqp_join.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_amqp_join.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_backend_amqp.icl
    verify>nul
    call gsl -q -quiet:1 zyre_backend_amqp.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_backend_amqp.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_digest_amqp.icl
    verify>nul
    call gsl -q -quiet:1 zyre_digest_amqp.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_digest_amqp.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer.asl
    verify>nul
    call gsl -q -quiet:1 zyre_peer.asl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer.asl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_method.icl
    verify>nul
    call gsl -q -quiet:1 zyre_peer_method.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_method.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_config.opf
    verify>nul
    call gsl -q -quiet:1 zyre_peer_config.opf
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_config.opf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_config.icl
    verify>nul
    call gsl -q -quiet:1 zyre_peer_config.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_config.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_peer_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_peer_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_peer_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_classes.icl
    verify>nul
    call gsl -q -quiet:1 zyre_classes.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_classes.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo perl -S ipr_resource.pl -@ zyre_static.rc
    verify>nul
    call perl -S ipr_resource.pl -@ zyre_static.rc
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'perl -S ipr_resource.pl -@ zyre_static.rc' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_restms_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_restms_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_restms_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_backend_amqp_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_backend_amqp_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_backend_amqp_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_digest_amqp_agent.smt
    verify>nul
    call gsl -q -quiet:1 zyre_digest_amqp_agent.smt
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_digest_amqp_agent.smt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl -q -quiet:1 zyre_static.icl
    verify>nul
    call gsl -q -quiet:1 zyre_static.icl
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'gsl -q -quiet:1 zyre_static.icl' failed - stop.
        set _exception=1
        goto :eof
    )
    pushd webpages
    popd
    echo Source files successfully generated>stamp_generate
    goto :eof

:------------------------   REMOVE GENERATED BINARIES   -----------------------

:a_remove_generated_binaries
    if exist libamq_zyre.lib del libamq_zyre.lib
    if exist zyre.exe del zyre.exe
    if exist zyre.obj del zyre.obj
    if exist zyre.exe del zyre.exe
    if exist zyre_config_test_test.obj del zyre_config_test_test.obj
    if exist zyre_config_test_test.exe del zyre_config_test_test.exe
    if exist zyre_config.obj del zyre_config.obj
    if exist zyre_backend_test_test.obj del zyre_backend_test_test.obj
    if exist zyre_backend_test_test.exe del zyre_backend_test_test.exe
    if exist zyre_backend.obj del zyre_backend.obj
    if exist zyre_resource_test_test.obj del zyre_resource_test_test.obj
    if exist zyre_resource_test_test.exe del zyre_resource_test_test.exe
    if exist zyre_resource.obj del zyre_resource.obj
    if exist zyre_domain_test_test.obj del zyre_domain_test_test.obj
    if exist zyre_domain_test_test.exe del zyre_domain_test_test.exe
    if exist zyre_domain.obj del zyre_domain.obj
    if exist zyre_feed_test_test.obj del zyre_feed_test_test.obj
    if exist zyre_feed_test_test.exe del zyre_feed_test_test.exe
    if exist zyre_feed.obj del zyre_feed.obj
    if exist zyre_pipe_test_test.obj del zyre_pipe_test_test.obj
    if exist zyre_pipe_test_test.exe del zyre_pipe_test_test.exe
    if exist zyre_pipe.obj del zyre_pipe.obj
    if exist zyre_join_test_test.obj del zyre_join_test_test.obj
    if exist zyre_join_test_test.exe del zyre_join_test_test.exe
    if exist zyre_join.obj del zyre_join.obj
    if exist zyre_message_test_test.obj del zyre_message_test_test.obj
    if exist zyre_message_test_test.exe del zyre_message_test_test.exe
    if exist zyre_message.obj del zyre_message.obj
    if exist zyre_content_test_test.obj del zyre_content_test_test.obj
    if exist zyre_content_test_test.exe del zyre_content_test_test.exe
    if exist zyre_content.obj del zyre_content.obj
    if exist zyre_restms_agent.obj del zyre_restms_agent.obj
    if exist zyre_restms_test_test.obj del zyre_restms_test_test.obj
    if exist zyre_restms_test_test.exe del zyre_restms_test_test.exe
    if exist zyre_restms.obj del zyre_restms.obj
    if exist zyre_amqp_feed_test_test.obj del zyre_amqp_feed_test_test.obj
    if exist zyre_amqp_feed_test_test.exe del zyre_amqp_feed_test_test.exe
    if exist zyre_amqp_feed.obj del zyre_amqp_feed.obj
    if exist zyre_amqp_pipe_test_test.obj del zyre_amqp_pipe_test_test.obj
    if exist zyre_amqp_pipe_test_test.exe del zyre_amqp_pipe_test_test.exe
    if exist zyre_amqp_pipe.obj del zyre_amqp_pipe.obj
    if exist zyre_amqp_join_test_test.obj del zyre_amqp_join_test_test.obj
    if exist zyre_amqp_join_test_test.exe del zyre_amqp_join_test_test.exe
    if exist zyre_amqp_join.obj del zyre_amqp_join.obj
    if exist zyre_backend_amqp_agent.obj del zyre_backend_amqp_agent.obj
    if exist zyre_backend_amqp_test_test.obj del zyre_backend_amqp_test_test.obj
    if exist zyre_backend_amqp_test_test.exe del zyre_backend_amqp_test_test.exe
    if exist zyre_backend_amqp.obj del zyre_backend_amqp.obj
    if exist zyre_digest_amqp_agent.obj del zyre_digest_amqp_agent.obj
    if exist zyre_digest_amqp_test_test.obj del zyre_digest_amqp_test_test.obj
    if exist zyre_digest_amqp_test_test.exe del zyre_digest_amqp_test_test.exe
    if exist zyre_digest_amqp.obj del zyre_digest_amqp.obj
    if exist zyre_peer_method_test_test.obj del zyre_peer_method_test_test.obj
    if exist zyre_peer_method_test_test.exe del zyre_peer_method_test_test.exe
    if exist zyre_peer_method.obj del zyre_peer_method.obj
    if exist zyre_peer_config_test_test.obj del zyre_peer_config_test_test.obj
    if exist zyre_peer_config_test_test.exe del zyre_peer_config_test_test.exe
    if exist zyre_peer_config.obj del zyre_peer_config.obj
    if exist zyre_peer_agent.obj del zyre_peer_agent.obj
    if exist zyre_classes.obj del zyre_classes.obj
    if exist zyre_static_test_test.obj del zyre_static_test_test.obj
    if exist zyre_static_test_test.exe del zyre_static_test_test.exe
    if exist zyre_static.obj del zyre_static.obj
    if exist zyre_config_test.obj del zyre_config_test.obj
    if exist zyre_config_test.exe del zyre_config_test.exe
    if exist zyre_config.obj del zyre_config.obj
    if exist zyre_backend_test.obj del zyre_backend_test.obj
    if exist zyre_backend_test.exe del zyre_backend_test.exe
    if exist zyre_backend.obj del zyre_backend.obj
    if exist zyre_resource_test.obj del zyre_resource_test.obj
    if exist zyre_resource_test.exe del zyre_resource_test.exe
    if exist zyre_resource.obj del zyre_resource.obj
    if exist zyre_domain_test.obj del zyre_domain_test.obj
    if exist zyre_domain_test.exe del zyre_domain_test.exe
    if exist zyre_domain.obj del zyre_domain.obj
    if exist zyre_feed_test.obj del zyre_feed_test.obj
    if exist zyre_feed_test.exe del zyre_feed_test.exe
    if exist zyre_feed.obj del zyre_feed.obj
    if exist zyre_pipe_test.obj del zyre_pipe_test.obj
    if exist zyre_pipe_test.exe del zyre_pipe_test.exe
    if exist zyre_pipe.obj del zyre_pipe.obj
    if exist zyre_join_test.obj del zyre_join_test.obj
    if exist zyre_join_test.exe del zyre_join_test.exe
    if exist zyre_join.obj del zyre_join.obj
    if exist zyre_message_test.obj del zyre_message_test.obj
    if exist zyre_message_test.exe del zyre_message_test.exe
    if exist zyre_message.obj del zyre_message.obj
    if exist zyre_content_test.obj del zyre_content_test.obj
    if exist zyre_content_test.exe del zyre_content_test.exe
    if exist zyre_content.obj del zyre_content.obj
    if exist zyre_restms_agent.obj del zyre_restms_agent.obj
    if exist zyre_restms_test.obj del zyre_restms_test.obj
    if exist zyre_restms_test.exe del zyre_restms_test.exe
    if exist zyre_restms.obj del zyre_restms.obj
    if exist zyre_amqp_feed_test.obj del zyre_amqp_feed_test.obj
    if exist zyre_amqp_feed_test.exe del zyre_amqp_feed_test.exe
    if exist zyre_amqp_feed.obj del zyre_amqp_feed.obj
    if exist zyre_amqp_pipe_test.obj del zyre_amqp_pipe_test.obj
    if exist zyre_amqp_pipe_test.exe del zyre_amqp_pipe_test.exe
    if exist zyre_amqp_pipe.obj del zyre_amqp_pipe.obj
    if exist zyre_amqp_join_test.obj del zyre_amqp_join_test.obj
    if exist zyre_amqp_join_test.exe del zyre_amqp_join_test.exe
    if exist zyre_amqp_join.obj del zyre_amqp_join.obj
    if exist zyre_backend_amqp_agent.obj del zyre_backend_amqp_agent.obj
    if exist zyre_backend_amqp_test.obj del zyre_backend_amqp_test.obj
    if exist zyre_backend_amqp_test.exe del zyre_backend_amqp_test.exe
    if exist zyre_backend_amqp.obj del zyre_backend_amqp.obj
    if exist zyre_digest_amqp_agent.obj del zyre_digest_amqp_agent.obj
    if exist zyre_digest_amqp_test.obj del zyre_digest_amqp_test.obj
    if exist zyre_digest_amqp_test.exe del zyre_digest_amqp_test.exe
    if exist zyre_digest_amqp.obj del zyre_digest_amqp.obj
    if exist zyre_peer_method_test.obj del zyre_peer_method_test.obj
    if exist zyre_peer_method_test.exe del zyre_peer_method_test.exe
    if exist zyre_peer_method.obj del zyre_peer_method.obj
    if exist zyre_peer_config_test.obj del zyre_peer_config_test.obj
    if exist zyre_peer_config_test.exe del zyre_peer_config_test.exe
    if exist zyre_peer_config.obj del zyre_peer_config.obj
    if exist zyre_peer_agent.obj del zyre_peer_agent.obj
    if exist zyre_classes.obj del zyre_classes.obj
    if exist zyre_static_test.obj del zyre_static_test.obj
    if exist zyre_static_test.exe del zyre_static_test.exe
    if exist zyre_static.obj del zyre_static.obj
    if exist webpages\libamq_zyre.lib del webpages\libamq_zyre.lib
    pushd webpages
    popd
    if exist vc60.pdb del vc60.pdb
    goto :eof

:------------------------   REMOVE GENERATED SOURCES   ------------------------

:a_remove_generated_sources
    if exist zyre_config.icl del zyre_config.icl
    if exist zyre_peer_method.icl del zyre_peer_method.icl
    if exist zyre_peer_config.icl del zyre_peer_config.icl
    if exist zyre_peer_config.txt del zyre_peer_config.txt
    if exist zyre_peer_agent.smt del zyre_peer_agent.smt
    if exist zyre_config_test.c del zyre_config_test.c
    if exist zyre_config.h del zyre_config.h
    if exist zyre_config.c del zyre_config.c
    if exist zyre_backend_front.icl del zyre_backend_front.icl
    if exist zyre_backend_back.icl del zyre_backend_back.icl
    if exist zyre_backend_test.c del zyre_backend_test.c
    if exist zyre_backend.h del zyre_backend.h
    if exist zyre_backend.c del zyre_backend.c
    if exist zyre_resource_front.icl del zyre_resource_front.icl
    if exist zyre_resource_back.icl del zyre_resource_back.icl
    if exist zyre_resource_test.c del zyre_resource_test.c
    if exist zyre_resource.h del zyre_resource.h
    if exist zyre_resource.c del zyre_resource.c
    if exist zyre_domain_test.c del zyre_domain_test.c
    if exist zyre_domain.h del zyre_domain.h
    if exist zyre_domain.c del zyre_domain.c
    if exist zyre_feed_test.c del zyre_feed_test.c
    if exist zyre_feed.h del zyre_feed.h
    if exist zyre_feed.c del zyre_feed.c
    if exist zyre_pipe_test.c del zyre_pipe_test.c
    if exist zyre_pipe.h del zyre_pipe.h
    if exist zyre_pipe.c del zyre_pipe.c
    if exist zyre_join_test.c del zyre_join_test.c
    if exist zyre_join.h del zyre_join.h
    if exist zyre_join.c del zyre_join.c
    if exist zyre_message_test.c del zyre_message_test.c
    if exist zyre_message.h del zyre_message.h
    if exist zyre_message.c del zyre_message.c
    if exist zyre_content_test.c del zyre_content_test.c
    if exist zyre_content.h del zyre_content.h
    if exist zyre_content.c del zyre_content.c
    if exist zyre_restms_agent.smt del zyre_restms_agent.smt
    if exist zyre_restms_agent.h del zyre_restms_agent.h
    if exist zyre_restms_agent.c del zyre_restms_agent.c
    if exist zyre_restms_test.c del zyre_restms_test.c
    if exist zyre_restms.h del zyre_restms.h
    if exist zyre_restms.c del zyre_restms.c
    if exist zyre_amqp_feed_test.c del zyre_amqp_feed_test.c
    if exist zyre_amqp_feed.h del zyre_amqp_feed.h
    if exist zyre_amqp_feed.c del zyre_amqp_feed.c
    if exist zyre_amqp_pipe_test.c del zyre_amqp_pipe_test.c
    if exist zyre_amqp_pipe.h del zyre_amqp_pipe.h
    if exist zyre_amqp_pipe.c del zyre_amqp_pipe.c
    if exist zyre_amqp_join_test.c del zyre_amqp_join_test.c
    if exist zyre_amqp_join.h del zyre_amqp_join.h
    if exist zyre_amqp_join.c del zyre_amqp_join.c
    if exist zyre_backend_amqp_agent.smt del zyre_backend_amqp_agent.smt
    if exist zyre_backend_amqp_agent.h del zyre_backend_amqp_agent.h
    if exist zyre_backend_amqp_agent.c del zyre_backend_amqp_agent.c
    if exist zyre_backend_amqp_test.c del zyre_backend_amqp_test.c
    if exist zyre_backend_amqp.h del zyre_backend_amqp.h
    if exist zyre_backend_amqp.c del zyre_backend_amqp.c
    if exist zyre_digest_amqp_agent.smt del zyre_digest_amqp_agent.smt
    if exist zyre_digest_amqp_agent.h del zyre_digest_amqp_agent.h
    if exist zyre_digest_amqp_agent.c del zyre_digest_amqp_agent.c
    if exist zyre_digest_amqp_test.c del zyre_digest_amqp_test.c
    if exist zyre_digest_amqp.h del zyre_digest_amqp.h
    if exist zyre_digest_amqp.c del zyre_digest_amqp.c
    if exist zyre_peer_method_test.c del zyre_peer_method_test.c
    if exist zyre_peer_method.h del zyre_peer_method.h
    if exist zyre_peer_method.c del zyre_peer_method.c
    if exist zyre_peer_config_test.c del zyre_peer_config_test.c
    if exist zyre_peer_config.h del zyre_peer_config.h
    if exist zyre_peer_config.c del zyre_peer_config.c
    if exist zyre_peer_agent.h del zyre_peer_agent.h
    if exist zyre_peer_agent.c del zyre_peer_agent.c
    if exist zyre_classes.h del zyre_classes.h
    if exist zyre_classes.c del zyre_classes.c
    if exist zyre_static.icl del zyre_static.icl
    if exist zyre_static_test.c del zyre_static_test.c
    if exist zyre_static.h del zyre_static.h
    if exist zyre_static.c del zyre_static.c
    if exist stamp_generate del stamp_generate
    if exist configure del configure
    if exist Makefile.unix del Makefile.unix
    if exist configure.bat del configure.bat
    if exist Makefile.win32 del Makefile.win32
    if exist zyre.vcproj del zyre.vcproj
    if exist libamq_zyre.vcproj del libamq_zyre.vcproj
    pushd webpages
    popd
    if exist OpenAMQ_Zyre_*.zip del OpenAMQ_Zyre_*.zip
    goto :eof

:-------------------------   REPORT HELP INFORMATION   ------------------------

:a_report_help_information
    echo The commands you can currently use on this project are:
    echo.
    goto r_!state!
    goto :eof

:-------------------------   REPORT PROJECT VERSION   -------------------------

:a_report_project_version
    echo OpenAMQ_Zyre-1.4c1
    goto :eof

:--------------------------   RUN REGRESSION TESTS   --------------------------

:a_run_regression_tests
    echo boom I: [OpenAMQ_Zyre]: Running regression tests...
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_config_test
    ) else (
        set RUN_COMMAND=zyre_config_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_backend_test
    ) else (
        set RUN_COMMAND=zyre_backend_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_resource_test
    ) else (
        set RUN_COMMAND=zyre_resource_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_domain_test
    ) else (
        set RUN_COMMAND=zyre_domain_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_feed_test
    ) else (
        set RUN_COMMAND=zyre_feed_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_pipe_test
    ) else (
        set RUN_COMMAND=zyre_pipe_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_join_test
    ) else (
        set RUN_COMMAND=zyre_join_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_message_test
    ) else (
        set RUN_COMMAND=zyre_message_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_content_test
    ) else (
        set RUN_COMMAND=zyre_content_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_restms_test
    ) else (
        set RUN_COMMAND=zyre_restms_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_amqp_feed_test
    ) else (
        set RUN_COMMAND=zyre_amqp_feed_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_amqp_pipe_test
    ) else (
        set RUN_COMMAND=zyre_amqp_pipe_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_amqp_join_test
    ) else (
        set RUN_COMMAND=zyre_amqp_join_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_backend_amqp_test
    ) else (
        set RUN_COMMAND=zyre_backend_amqp_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_digest_amqp_test
    ) else (
        set RUN_COMMAND=zyre_digest_amqp_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_peer_method_test
    ) else (
        set RUN_COMMAND=zyre_peer_method_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_peer_config_test
    ) else (
        set RUN_COMMAND=zyre_peer_config_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" (
        set RUN_COMMAND=zyre_static_test
    ) else (
        set RUN_COMMAND=zyre_static_test -q
    )
    if "!BOOM_TRACE!"=="1" echo !RUN_COMMAND!
    verify>nul
    call !RUN_COMMAND!
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: '!RUN_COMMAND!' failed - stop.
        set _exception=1
        goto :eof
    )
    pushd webpages
    popd
    :-  Run local selftest script if present
    if exist selftest.bat (
    if "!BOOM_TRACE!"=="1" echo selftest
    verify>nul
    call selftest
    if errorlevel 1 (
        echo boom E: [OpenAMQ_Zyre]: 'selftest' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   USE SOURCE CONTROL REVISION   ----------------------

:a_use_source_control_revision
    set SVN_REVISION=svn
    if exist .svn
ul (
        for /f "usebackq tokens=1,2 delims=: " %%v in (`svn info`) do if "%%v"=="Revision" set SVN_REVISION=%%w
    )
    set MY_VERSION=!MY_VERSION!-!SVN_REVISION!
    goto :eof

:s_initial
    if "!debug!"=="1" echo State: initial
    if "!event!"=="" goto s_1_empty
    if "!event!"=="ok" goto s_1_1
    echo Unknown command - use one of:
    echo.
    goto r_!state!
:s_1_1
    if "!debug!"=="1" echo Event: ok
    set event=
    if "!debug!"=="1" echo Action: check operating context
    set _exception=
    call :a_check_operating_context
    if "!_exception!"=="1" exit /b 1
    set state=initial_check
    goto s_!state!
:s_1_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial
:r_initial
    exit /b 0

:s_initial_check
    if "!debug!"=="1" echo State: initial check
    if "!event!"=="" goto s_2_empty
    if "!event!"=="repository" goto s_2_1
    if "!event!"=="source" goto s_2_2
    if "!event!"=="stripped" goto s_2_3
    echo Unknown command - use one of:
    echo.
    goto r_!state!
:s_2_1
    if "!debug!"=="1" echo Event: repository
    set event=
    set state=repository
    goto s_!state!
:s_2_2
    if "!debug!"=="1" echo Event: source
    set event=
    set state=source
    goto s_!state!
:s_2_3
    if "!debug!"=="1" echo Event: stripped
    set event=
    set state=stripped
    goto s_!state!
:s_2_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial_check
:r_initial_check
    exit /b 0

:s_repository
    if "!debug!"=="1" echo State: repository
    if "!event!"=="" goto s_3_empty
    if "!event!"=="build" goto s_3_1
    if "!event!"=="compile" goto s_3_2
    if "!event!"=="clean" goto s_3_3
    if "!event!"=="regen" goto s_3_4
    if "!event!"=="allgen" goto s_3_5
    if "!event!"=="distrib" goto s_3_6
    if "!event!"=="distsrc" goto s_3_7
    if "!event!"=="distrev" goto s_3_8
    goto s_default
:s_3_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_2
    if "!debug!"=="1" echo Event: compile
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_3
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated sources
    set _exception=
    call :a_remove_generated_sources
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_4
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_5
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_6
    if "!debug!"=="1" echo Event: distrib
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_7
    if "!debug!"=="1" echo Event: distsrc
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_8
    if "!debug!"=="1" echo Event: distrev
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: use source control revision
    set _exception=
    call :a_use_source_control_revision
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_repository
:r_repository
echo build:
    echo   From the raw project sources, produces all generated files, and
    echo     compiles all source files.
echo compile:
    echo   From the raw project sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the raw project sources, removes all generated
    echo     source and binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
echo distrib:
    echo   Creates a source distribution for the project.  Note that binary
    echo     distributions can only be created at the product level.
echo distsrc:
    echo   Equivalent to distrib, provided for compatibility.
echo distrev:
    echo   Creates a source distribution for the project.  Builds distribution
    echo     packages based on source control version number. Note that binary
    echo     distributions can only be created at the product level.
    goto r_default

:s_source
    if "!debug!"=="1" echo State: source
    if "!event!"=="" goto s_4_empty
    if "!event!"=="build" goto s_4_1
    if "!event!"=="clean" goto s_4_2
    if "!event!"=="regen" goto s_4_3
    if "!event!"=="allgen" goto s_4_4
    goto s_default
:s_4_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_3
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_4
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_source
:r_source
echo build:
    echo   From the packaged sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
    goto r_default

:s_stripped
    if "!debug!"=="1" echo State: stripped
    if "!event!"=="" goto s_5_empty
    if "!event!"=="build" goto s_5_1
    if "!event!"=="clean" goto s_5_2
    goto s_default
:s_5_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_stripped
:r_stripped
echo build:
    echo   From the stripped-down packaged sources, compiles all source files
    echo     without any code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
    goto r_default

:s_default
    if "!debug!"=="1" echo State: default
    if "!event!"=="" goto s_6_empty
    if "!event!"=="install" goto s_6_1
    if "!event!"=="test" goto s_6_2
    if "!event!"=="help" goto s_6_3
    if "!event!"=="version" goto s_6_4
    if "!event!"=="empty" goto s_6_5
    echo Unknown command - use one of:
    echo.
    goto r_!state!
:s_6_1
    if "!debug!"=="1" echo Event: install
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: install deliverables
    set _exception=
    call :a_install_deliverables
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_2
    if "!debug!"=="1" echo Event: test
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: run regression tests
    set _exception=
    call :a_run_regression_tests
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_3
    if "!debug!"=="1" echo Event: help
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_4
    if "!debug!"=="1" echo Event: version
    set event=
    if "!debug!"=="1" echo Action: report project version
    set _exception=
    call :a_report_project_version
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_5
    if "!debug!"=="1" echo Event: empty
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_default
:r_default
echo install:
    echo   Installs deliverables into the final or temporary install tree.
    echo     This action is only valid after a successful build.
echo test:
    echo   Runs regression tests for the project.
echo help:
    echo   Shows a list of the commands allowed on the project.
echo version:
    echo   Show project version.
    exit /b 0


exit /b 0
