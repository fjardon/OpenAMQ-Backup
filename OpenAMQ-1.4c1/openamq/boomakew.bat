@echo off
:-
:-  Boom builder for OpenAMQ 1.4c1
:-  Generated by iMatix Boom from product.pwl
:-  
:-  Copyright (c) 1996-2009 iMatix Corporation
:-  All rights reserved.
:-  
:-  This file is licensed under the BSD license as follows:
:-  
:-  Redistribution and use in source and binary forms, with or without
:-  modification, are permitted provided that the following conditions
:-  are met:
:-  
:-  * Redistributions of source code must retain the above copyright
:-    notice, this list of conditions and the following disclaimer.
:-  * Redistributions in binary form must reproduce the above copyright
:-    notice, this list of conditions and the following disclaimer in
:-    the documentation and/or other materials provided with the
:-    distribution.
:-  * Neither the name of iMatix Corporation nor the names of its
:-    contributors may be used to endorse or promote products derived
:-    from this software without specific prior written permission.
:-  
:-  THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
:-  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
:-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
:-  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
:-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
:-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
:-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
:-  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
:-  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
:-  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
:-  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
:-
:-  Start CMD.EXE version detection
verify other 2>nul
setlocal enableextensions
if errorlevel 0 goto __cmd_ok
echo %0: This command requires command extensions version 2 in CMD.EXE.  
echo %0: Please use a supported system (Windows 2000 or newer).
exit
:__cmd_ok
setlocal enabledelayedexpansion
:-  End CMD.EXE version detection
goto :init
:-
:-  Subroutine: boom_model_init
:-  Initialises BOOM_MODEL to default if not set
:-  Expands BOOM_MODEL components into individual environment variables
:-
:boom_model_init
if "!BOOM_MODEL!"=="" (
    set BOOM_MODEL=release,st
)
set BOOM_MODEL__PLACEHOLDER=1
for /f "usebackq delims==" %%v in (`set BOOM_MODEL_`) do set %%v=
set BOOM_MODEL__PLACEHOLDER=
for %%m in (!BOOM_MODEL!) do set BOOM_MODEL_%%m=1
:-  If the user set BOOM_MODEL but did not include release/debug or st/mt
:-  set these to defaults.
if not "!BOOM_MODEL_RELEASE!"=="1" (
    if not "!BOOM_MODEL_DEBUG!"=="1" (
        set BOOM_MODEL_RELEASE=1
        set BOOM_MODEL=!BOOM_MODEL!,release
    )
)
if not "!BOOM_MODEL_ST!"=="1" (
    if not "!BOOM_MODEL_MT!"=="1" (
        set BOOM_MODEL_ST=1
        set BOOM_MODEL=!BOOM_MODEL!,st
    )
)
goto :eof
:init
setlocal
:-
:-  Set environment variables to point to install location
:-  Start by using final IBASE, then handle -install path
set self=%0
set MY_VERSION=1.4c1
set OLDPATH=!PATH!
set OLDPERLLIB=!PERLLIB!
if .!IBASE!==. (
    echo boom E: [OpenAMQ]: The IBASE variable is not set.         Please set it to the location where OpenAMQ should be installed.
    exit /b 1
)
if .%1==.-v (
    set BOOM_TRACE=1
    shift
)
call :boom_model_init
if .%1==.-install goto tempinst
:-  Normal use, use IBASE
    set PATH=!IBASE!\bin;!PATH!
    set PERLLIB=!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!IBASE!\include
    set _INSTALL_ROOT=!IBASE!
    goto process

:tempinst
:-  Building product, we use -install directory first, then IBASE
    if not exist %2 (
       echo "Invalid command syntax - please contact imatix-tech"
       exit /b 1
    )
    pushd %2
    set _LOCAL_BASE=!cd!
    popd
    set PATH=!_LOCAL_BASE!\bin;!IBASE!\bin;!PATH!
    set PERLLIB=!_LOCAL_BASE!\bin;!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!_LOCAL_BASE!\include;!IBASE!\include
    set _INSTALL_ROOT=!_LOCAL_BASE!
    shift
    shift
    goto process

:batch
    shift

:process
    set state=initial
    set event=ok
    set debug=0
    goto s_!state!

:-----------------------------   ALLGEN PROJECTS   ----------------------------

:a_allgen_projects
    pushd common
    if exist boomake.bat (
        call boomake allgen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
        call boomake allgen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
        call boomake allgen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
        call boomake allgen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
        call boomake allgen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd windows
    if exist boomake.bat (
        call boomake allgen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    goto :eof

:---------------------   BUILD PRODUCT INSTALL PACKAGES   ---------------------

:a_build_product_install_packages
    echo boom I: [OpenAMQ]: building OpenAMQ install...
    if exist _install\nul rmdir /s /q _install
    mkdir _install
    mkdir _install\lib
    mkdir _install\include
    mkdir _install\bin
    pushd common
    if exist boomake.bat (
    call boomake -install ..\_install install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
    call boomake -install ..\_install install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
    call boomake -install ..\_install install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
    call boomake -install ..\_install install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
    call boomake -install ..\_install install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    if exist OpenAMQ-!MY_VERSION! rmdir /s/q OpenAMQ-!MY_VERSION!
    ren _install OpenAMQ-!MY_VERSION!
    if "!BOOM_TRACE!"=="1" echo pkg_zip OpenAMQ-!MY_VERSION!
    verify>nul
    call pkg_zip OpenAMQ-!MY_VERSION!
    if errorlevel 1 (
        echo boom E: [OpenAMQ]: 'pkg_zip OpenAMQ-!MY_VERSION!' failed - stop.
        set _exception=1
        goto :eof
    )
    rmdir /s/q OpenAMQ-!MY_VERSION!
    goto :eof

:----------------------   BUILD PRODUCT SOURCE PACKAGES   ---------------------

:a_build_product_source_packages
    if exist _package.lst del _package.lst
    if exist project.pdl echo project.pdl>>_package.lst
    if exist readme.txt echo readme.txt>>_package.lst
    if exist release.txt echo release.txt>>_package.lst
    if exist contrib.txt echo contrib.txt>>_package.lst
    if exist stamp_generate echo stamp_generate>>_package.lst
    if exist boomakew.bat echo boomakew.bat>>_package.lst
    if exist configure echo configure>>_package.lst
    if exist Makefile.unix echo Makefile.unix>>_package.lst
    if exist boomake echo boomake>>_package.lst
    if exist configure.bat echo configure.bat>>_package.lst
    if exist Makefile.win32 echo Makefile.win32>>_package.lst
    if exist boomake.bat echo boomake.bat>>_package.lst
    pushd common
    popd
    if exist common\version.h echo common\version.h>>_package.lst
    if exist common\amq.asl echo common\amq.asl>>_package.lst
    if exist common\amq_exchange.asl echo common\amq_exchange.asl>>_package.lst
    if exist common\amq_queue.asl echo common\amq_queue.asl>>_package.lst
    if exist common\amq_basic.asl echo common\amq_basic.asl>>_package.lst
    if exist common\amq_restms.asl echo common\amq_restms.asl>>_package.lst
    if exist common\amq_pal.xnf echo common\amq_pal.xnf>>_package.lst
    if exist common\amq_pal_stdc.gsl echo common\amq_pal_stdc.gsl>>_package.lst
    if exist common\amq_pal_codegen.gsl echo common\amq_pal_codegen.gsl>>_package.lst
    if exist common\amq_pal_gen.gsl echo common\amq_pal_gen.gsl>>_package.lst
    if exist common\amq_pal_inherit.gsl echo common\amq_pal_inherit.gsl>>_package.lst
    if exist common\amq_pal_parse.gsl echo common\amq_pal_parse.gsl>>_package.lst
    if exist common\amq_pal_preproc.gsl echo common\amq_pal_preproc.gsl>>_package.lst
    if exist common\amq_sequence.icl echo common\amq_sequence.icl>>_package.lst
    if exist common\amq_sequence_table.icl echo common\amq_sequence_table.icl>>_package.lst
    if exist common\amq_constants.icl echo common\amq_constants.icl>>_package.lst
    if exist common\amq_content_basic.icl echo common\amq_content_basic.icl>>_package.lst
    if exist common\amq_content_basic_list.icl echo common\amq_content_basic_list.icl>>_package.lst
    if exist common\prelude.pdl echo common\prelude.pdl>>_package.lst
    if exist common\license.gpl echo common\license.gpl>>_package.lst
    if exist common\project.pdl echo common\project.pdl>>_package.lst
    if exist common\readme.txt echo common\readme.txt>>_package.lst
    if exist common\amq_sequence_test.c echo common\amq_sequence_test.c>>_package.lst
    if exist common\amq_sequence.h echo common\amq_sequence.h>>_package.lst
    if exist common\amq_sequence.c echo common\amq_sequence.c>>_package.lst
    if exist common\amq_sequence_table_test.c echo common\amq_sequence_table_test.c>>_package.lst
    if exist common\amq_sequence_table.h echo common\amq_sequence_table.h>>_package.lst
    if exist common\amq_sequence_table.c echo common\amq_sequence_table.c>>_package.lst
    if exist common\amq_constants.h echo common\amq_constants.h>>_package.lst
    if exist common\amq_constants.c echo common\amq_constants.c>>_package.lst
    if exist common\amq_content_basic_test.c echo common\amq_content_basic_test.c>>_package.lst
    if exist common\amq_content_basic.h echo common\amq_content_basic.h>>_package.lst
    if exist common\amq_content_basic.c echo common\amq_content_basic.c>>_package.lst
    if exist common\amq_content_basic_list_test.c echo common\amq_content_basic_list_test.c>>_package.lst
    if exist common\amq_content_basic_list.h echo common\amq_content_basic_list.h>>_package.lst
    if exist common\amq_content_basic_list.c echo common\amq_content_basic_list.c>>_package.lst
    if exist common\stamp_generate echo common\stamp_generate>>_package.lst
    if exist common\boomakew.bat echo common\boomakew.bat>>_package.lst
    if exist common\configure echo common\configure>>_package.lst
    if exist common\Makefile.unix echo common\Makefile.unix>>_package.lst
    if exist common\boomake echo common\boomake>>_package.lst
    if exist common\configure.bat echo common\configure.bat>>_package.lst
    if exist common\Makefile.win32 echo common\Makefile.win32>>_package.lst
    if exist common\boomake.bat echo common\boomake.bat>>_package.lst
    if exist common\libamq_common.vcproj echo common\libamq_common.vcproj>>_package.lst
    pushd wireapi
    popd
    if exist wireapi\version.h echo wireapi\version.h>>_package.lst
    if exist wireapi\wireapi.h echo wireapi\wireapi.h>>_package.lst
    if exist wireapi\amq_client.c echo wireapi\amq_client.c>>_package.lst
    if exist wireapi\amq_client.asl echo wireapi\amq_client.asl>>_package.lst
    if exist wireapi\amq_client_method.icl echo wireapi\amq_client_method.icl>>_package.lst
    if exist wireapi\amq_client_agent.smt echo wireapi\amq_client_agent.smt>>_package.lst
    if exist wireapi\amq_client_config.opf echo wireapi\amq_client_config.opf>>_package.lst
    if exist wireapi\amq_client_config.icl echo wireapi\amq_client_config.icl>>_package.lst
    if exist wireapi\amq_client_classes.icl echo wireapi\amq_client_classes.icl>>_package.lst
    if exist wireapi\amq_client_connection.icl echo wireapi\amq_client_connection.icl>>_package.lst
    if exist wireapi\amq_client_session.icl echo wireapi\amq_client_session.icl>>_package.lst
    if exist wireapi\amq_client_channel.icl echo wireapi\amq_client_channel.icl>>_package.lst
    if exist wireapi\amq_client_channel_table.icl echo wireapi\amq_client_channel_table.icl>>_package.lst
    if exist wireapi\amq_client_chrono.pal echo wireapi\amq_client_chrono.pal>>_package.lst
    if exist wireapi\prelude.pdl echo wireapi\prelude.pdl>>_package.lst
    if exist wireapi\license.gpl echo wireapi\license.gpl>>_package.lst
    if exist wireapi\project.pdl echo wireapi\project.pdl>>_package.lst
    if exist wireapi\readme.txt echo wireapi\readme.txt>>_package.lst
    if exist wireapi\amq_client_method_test.c echo wireapi\amq_client_method_test.c>>_package.lst
    if exist wireapi\amq_client_method.h echo wireapi\amq_client_method.h>>_package.lst
    if exist wireapi\amq_client_method.c echo wireapi\amq_client_method.c>>_package.lst
    if exist wireapi\amq_client_agent.h echo wireapi\amq_client_agent.h>>_package.lst
    if exist wireapi\amq_client_agent.c echo wireapi\amq_client_agent.c>>_package.lst
    if exist wireapi\amq_client_config_test.c echo wireapi\amq_client_config_test.c>>_package.lst
    if exist wireapi\amq_client_config.h echo wireapi\amq_client_config.h>>_package.lst
    if exist wireapi\amq_client_config.c echo wireapi\amq_client_config.c>>_package.lst
    if exist wireapi\amq_client_classes.h echo wireapi\amq_client_classes.h>>_package.lst
    if exist wireapi\amq_client_classes.c echo wireapi\amq_client_classes.c>>_package.lst
    if exist wireapi\amq_client_connection_test.c echo wireapi\amq_client_connection_test.c>>_package.lst
    if exist wireapi\amq_client_connection.h echo wireapi\amq_client_connection.h>>_package.lst
    if exist wireapi\amq_client_connection.c echo wireapi\amq_client_connection.c>>_package.lst
    if exist wireapi\amq_client_session_test.c echo wireapi\amq_client_session_test.c>>_package.lst
    if exist wireapi\amq_client_session.h echo wireapi\amq_client_session.h>>_package.lst
    if exist wireapi\amq_client_session.c echo wireapi\amq_client_session.c>>_package.lst
    if exist wireapi\amq_client_channel_test.c echo wireapi\amq_client_channel_test.c>>_package.lst
    if exist wireapi\amq_client_channel.h echo wireapi\amq_client_channel.h>>_package.lst
    if exist wireapi\amq_client_channel.c echo wireapi\amq_client_channel.c>>_package.lst
    if exist wireapi\amq_client_channel_table_test.c echo wireapi\amq_client_channel_table_test.c>>_package.lst
    if exist wireapi\amq_client_channel_table.h echo wireapi\amq_client_channel_table.h>>_package.lst
    if exist wireapi\amq_client_channel_table.c echo wireapi\amq_client_channel_table.c>>_package.lst
    if exist wireapi\stamp_generate echo wireapi\stamp_generate>>_package.lst
    if exist wireapi\boomakew.bat echo wireapi\boomakew.bat>>_package.lst
    if exist wireapi\configure echo wireapi\configure>>_package.lst
    if exist wireapi\Makefile.unix echo wireapi\Makefile.unix>>_package.lst
    if exist wireapi\boomake echo wireapi\boomake>>_package.lst
    if exist wireapi\configure.bat echo wireapi\configure.bat>>_package.lst
    if exist wireapi\Makefile.win32 echo wireapi\Makefile.win32>>_package.lst
    if exist wireapi\boomake.bat echo wireapi\boomake.bat>>_package.lst
    if exist wireapi\amq_client.vcproj echo wireapi\amq_client.vcproj>>_package.lst
    if exist wireapi\libamq_wireapi.vcproj echo wireapi\libamq_wireapi.vcproj>>_package.lst
    pushd server
    popd
    if exist server\gpl_output echo server\gpl_output>>_package.lst
    if exist server\version.h echo server\version.h>>_package.lst
    if exist server\amq_server.asl echo server\amq_server.asl>>_package.lst
    if exist server\amq_server.c echo server\amq_server.c>>_package.lst
    if exist server\amq_server_main.inc echo server\amq_server_main.inc>>_package.lst
    if exist server\amq_server_config.opf echo server\amq_server_config.opf>>_package.lst
    if exist server\amq_server_agent.smt echo server\amq_server_agent.smt>>_package.lst
    if exist server\amq_server_classes.icl echo server\amq_server_classes.icl>>_package.lst
    if exist server\amq_server_connection.icl echo server\amq_server_connection.icl>>_package.lst
    if exist server\amq_server_connection_table.icl echo server\amq_server_connection_table.icl>>_package.lst
    if exist server\amq_server_connection_list.icl echo server\amq_server_connection_list.icl>>_package.lst
    if exist server\amq_server_channel.icl echo server\amq_server_channel.icl>>_package.lst
    if exist server\amq_server_channel_table.icl echo server\amq_server_channel_table.icl>>_package.lst
    if exist server\amq_server_resource.rc echo server\amq_server_resource.rc>>_package.lst
    if exist server\amq_server_resource.icl echo server\amq_server_resource.icl>>_package.lst
    if exist server\amq_broker.icl echo server\amq_broker.icl>>_package.lst
    if exist server\amq_peering.icl echo server\amq_peering.icl>>_package.lst
    if exist server\amq_peer.asl echo server\amq_peer.asl>>_package.lst
    if exist server\amq_peer_method.icl echo server\amq_peer_method.icl>>_package.lst
    if exist server\amq_peer_config.opf echo server\amq_peer_config.opf>>_package.lst
    if exist server\amq_peer_agent.smt echo server\amq_peer_agent.smt>>_package.lst
    if exist server\amq_exchange_system.icl echo server\amq_exchange_system.icl>>_package.lst
    if exist server\amq_exchange_fanout.icl echo server\amq_exchange_fanout.icl>>_package.lst
    if exist server\amq_exchange_direct.icl echo server\amq_exchange_direct.icl>>_package.lst
    if exist server\amq_exchange_topic.icl echo server\amq_exchange_topic.icl>>_package.lst
    if exist server\amq_exchange_headers.icl echo server\amq_exchange_headers.icl>>_package.lst
    if exist server\amq_exchange_regexp.icl echo server\amq_exchange_regexp.icl>>_package.lst
    if exist server\amq_exchange_base.icl echo server\amq_exchange_base.icl>>_package.lst
    if exist server\amq_exchange.icl echo server\amq_exchange.icl>>_package.lst
    if exist server\amq_exchange_table.icl echo server\amq_exchange_table.icl>>_package.lst
    if exist server\amq_exchange_list.icl echo server\amq_exchange_list.icl>>_package.lst
    if exist server\amq_binding.icl echo server\amq_binding.icl>>_package.lst
    if exist server\amq_binding_list.icl echo server\amq_binding_list.icl>>_package.lst
    if exist server\amq_binding_mgt.icl echo server\amq_binding_mgt.icl>>_package.lst
    if exist server\amq_queue_bindings_list.icl echo server\amq_queue_bindings_list.icl>>_package.lst
    if exist server\amq_queue_bindings_list_table.icl echo server\amq_queue_bindings_list_table.icl>>_package.lst
    if exist server\amq_hitset.icl echo server\amq_hitset.icl>>_package.lst
    if exist server\amq_index.icl echo server\amq_index.icl>>_package.lst
    if exist server\amq_index_hash.icl echo server\amq_index_hash.icl>>_package.lst
    if exist server\amq_index_array.icl echo server\amq_index_array.icl>>_package.lst
    if exist server\amq_queue.icl echo server\amq_queue.icl>>_package.lst
    if exist server\amq_queue_table.icl echo server\amq_queue_table.icl>>_package.lst
    if exist server\amq_queue_list.icl echo server\amq_queue_list.icl>>_package.lst
    if exist server\amq_queue_set.icl echo server\amq_queue_set.icl>>_package.lst
    if exist server\amq_queue_basic.icl echo server\amq_queue_basic.icl>>_package.lst
    if exist server\amq_connection.icl echo server\amq_connection.icl>>_package.lst
    if exist server\amq_connection_by_broker.icl echo server\amq_connection_by_broker.icl>>_package.lst
    if exist server\amq_consumer.icl echo server\amq_consumer.icl>>_package.lst
    if exist server\amq_consumer_table.icl echo server\amq_consumer_table.icl>>_package.lst
    if exist server\amq_consumer_by_queue.icl echo server\amq_consumer_by_queue.icl>>_package.lst
    if exist server\amq_consumer_by_channel.icl echo server\amq_consumer_by_channel.icl>>_package.lst
    if exist server\amq_consumer_basic.icl echo server\amq_consumer_basic.icl>>_package.lst
    if exist server\amq_queue_connection.icl echo server\amq_queue_connection.icl>>_package.lst
    if exist server\amq_queue_binding.icl echo server\amq_queue_binding.icl>>_package.lst
    if exist server\amq_connection_queue.icl echo server\amq_connection_queue.icl>>_package.lst
    if exist server\amq_resource.icl echo server\amq_resource.icl>>_package.lst
    if exist server\amq_server_method.icl echo server\amq_server_method.icl>>_package.lst
    if exist server\amq_server_base.cfg echo server\amq_server_base.cfg>>_package.lst
    if exist server\amq_federation.icl echo server\amq_federation.icl>>_package.lst
    if exist server\amq_failover.icl echo server\amq_failover.icl>>_package.lst
    if exist server\amq_lease.icl echo server\amq_lease.icl>>_package.lst
    if exist server\amq_lease_table.icl echo server\amq_lease_table.icl>>_package.lst
    if exist server\amq_console.icl echo server\amq_console.icl>>_package.lst
    if exist server\amq_console_object.icl echo server\amq_console_object.icl>>_package.lst
    if exist server\amq_console_class.icl echo server\amq_console_class.icl>>_package.lst
    if exist server\amq_console_schema.gsl echo server\amq_console_schema.gsl>>_package.lst
    if exist server\amq_console_schema.cml echo server\amq_console_schema.cml>>_package.lst
    if exist server\amq_console_schema.xml echo server\amq_console_schema.xml>>_package.lst
    if exist server\amq_console_config.gsl echo server\amq_console_config.gsl>>_package.lst
    if exist server\amq_console_config.icl echo server\amq_console_config.icl>>_package.lst
    if exist server\amq_cml.icl echo server\amq_cml.icl>>_package.lst
    if exist server\restms_class_test.pal echo server\restms_class_test.pal>>_package.lst
    if exist server\prelude.pdl echo server\prelude.pdl>>_package.lst
    if exist server\license.gpl echo server\license.gpl>>_package.lst
    if exist server\project.pdl echo server\project.pdl>>_package.lst
    if exist server\readme.txt echo server\readme.txt>>_package.lst
    if exist server\amq_server_config.icl echo server\amq_server_config.icl>>_package.lst
    if exist server\amq_server_config_test.c echo server\amq_server_config_test.c>>_package.lst
    if exist server\amq_server_config.h echo server\amq_server_config.h>>_package.lst
    if exist server\amq_server_config.c echo server\amq_server_config.c>>_package.lst
    if exist server\amq_server_config.txt echo server\amq_server_config.txt>>_package.lst
    if exist server\amq_server_agent.h echo server\amq_server_agent.h>>_package.lst
    if exist server\amq_server_agent.c echo server\amq_server_agent.c>>_package.lst
    if exist server\amq_server_classes.h echo server\amq_server_classes.h>>_package.lst
    if exist server\amq_server_classes.c echo server\amq_server_classes.c>>_package.lst
    if exist server\amq_server_connection_test.c echo server\amq_server_connection_test.c>>_package.lst
    if exist server\amq_server_connection.h echo server\amq_server_connection.h>>_package.lst
    if exist server\amq_server_connection.c echo server\amq_server_connection.c>>_package.lst
    if exist server\amq_server_connection_table_test.c echo server\amq_server_connection_table_test.c>>_package.lst
    if exist server\amq_server_connection_table.h echo server\amq_server_connection_table.h>>_package.lst
    if exist server\amq_server_connection_table.c echo server\amq_server_connection_table.c>>_package.lst
    if exist server\amq_server_connection_list_test.c echo server\amq_server_connection_list_test.c>>_package.lst
    if exist server\amq_server_connection_list.h echo server\amq_server_connection_list.h>>_package.lst
    if exist server\amq_server_connection_list.c echo server\amq_server_connection_list.c>>_package.lst
    if exist server\amq_server_channel_agent.smt echo server\amq_server_channel_agent.smt>>_package.lst
    if exist server\amq_server_channel_agent.h echo server\amq_server_channel_agent.h>>_package.lst
    if exist server\amq_server_channel_agent.c echo server\amq_server_channel_agent.c>>_package.lst
    if exist server\amq_server_channel_test.c echo server\amq_server_channel_test.c>>_package.lst
    if exist server\amq_server_channel.h echo server\amq_server_channel.h>>_package.lst
    if exist server\amq_server_channel.c echo server\amq_server_channel.c>>_package.lst
    if exist server\amq_server_channel_table_test.c echo server\amq_server_channel_table_test.c>>_package.lst
    if exist server\amq_server_channel_table.h echo server\amq_server_channel_table.h>>_package.lst
    if exist server\amq_server_channel_table.c echo server\amq_server_channel_table.c>>_package.lst
    if exist server\amq_server_resource_test.c echo server\amq_server_resource_test.c>>_package.lst
    if exist server\amq_server_resource.h echo server\amq_server_resource.h>>_package.lst
    if exist server\amq_server_resource.c echo server\amq_server_resource.c>>_package.lst
    if exist server\amq_broker_agent.smt echo server\amq_broker_agent.smt>>_package.lst
    if exist server\amq_broker_agent.h echo server\amq_broker_agent.h>>_package.lst
    if exist server\amq_broker_agent.c echo server\amq_broker_agent.c>>_package.lst
    if exist server\amq_broker_test.c echo server\amq_broker_test.c>>_package.lst
    if exist server\amq_broker.h echo server\amq_broker.h>>_package.lst
    if exist server\amq_broker.c echo server\amq_broker.c>>_package.lst
    if exist server\amq_peering_agent.smt echo server\amq_peering_agent.smt>>_package.lst
    if exist server\amq_peering_agent.h echo server\amq_peering_agent.h>>_package.lst
    if exist server\amq_peering_agent.c echo server\amq_peering_agent.c>>_package.lst
    if exist server\amq_peering_test.c echo server\amq_peering_test.c>>_package.lst
    if exist server\amq_peering.h echo server\amq_peering.h>>_package.lst
    if exist server\amq_peering.c echo server\amq_peering.c>>_package.lst
    if exist server\amq_peer_method_test.c echo server\amq_peer_method_test.c>>_package.lst
    if exist server\amq_peer_method.h echo server\amq_peer_method.h>>_package.lst
    if exist server\amq_peer_method.c echo server\amq_peer_method.c>>_package.lst
    if exist server\amq_peer_config.icl echo server\amq_peer_config.icl>>_package.lst
    if exist server\amq_peer_config_test.c echo server\amq_peer_config_test.c>>_package.lst
    if exist server\amq_peer_config.h echo server\amq_peer_config.h>>_package.lst
    if exist server\amq_peer_config.c echo server\amq_peer_config.c>>_package.lst
    if exist server\amq_peer_config.txt echo server\amq_peer_config.txt>>_package.lst
    if exist server\amq_peer_agent.h echo server\amq_peer_agent.h>>_package.lst
    if exist server\amq_peer_agent.c echo server\amq_peer_agent.c>>_package.lst
    if exist server\amq_exchange_system_test.c echo server\amq_exchange_system_test.c>>_package.lst
    if exist server\amq_exchange_system.h echo server\amq_exchange_system.h>>_package.lst
    if exist server\amq_exchange_system.c echo server\amq_exchange_system.c>>_package.lst
    if exist server\amq_exchange_fanout_test.c echo server\amq_exchange_fanout_test.c>>_package.lst
    if exist server\amq_exchange_fanout.h echo server\amq_exchange_fanout.h>>_package.lst
    if exist server\amq_exchange_fanout.c echo server\amq_exchange_fanout.c>>_package.lst
    if exist server\amq_exchange_direct_test.c echo server\amq_exchange_direct_test.c>>_package.lst
    if exist server\amq_exchange_direct.h echo server\amq_exchange_direct.h>>_package.lst
    if exist server\amq_exchange_direct.c echo server\amq_exchange_direct.c>>_package.lst
    if exist server\amq_exchange_topic_test.c echo server\amq_exchange_topic_test.c>>_package.lst
    if exist server\amq_exchange_topic.h echo server\amq_exchange_topic.h>>_package.lst
    if exist server\amq_exchange_topic.c echo server\amq_exchange_topic.c>>_package.lst
    if exist server\amq_exchange_headers_test.c echo server\amq_exchange_headers_test.c>>_package.lst
    if exist server\amq_exchange_headers.h echo server\amq_exchange_headers.h>>_package.lst
    if exist server\amq_exchange_headers.c echo server\amq_exchange_headers.c>>_package.lst
    if exist server\amq_exchange_regexp_test.c echo server\amq_exchange_regexp_test.c>>_package.lst
    if exist server\amq_exchange_regexp.h echo server\amq_exchange_regexp.h>>_package.lst
    if exist server\amq_exchange_regexp.c echo server\amq_exchange_regexp.c>>_package.lst
    if exist server\amq_exchange_agent.smt echo server\amq_exchange_agent.smt>>_package.lst
    if exist server\amq_exchange_agent.h echo server\amq_exchange_agent.h>>_package.lst
    if exist server\amq_exchange_agent.c echo server\amq_exchange_agent.c>>_package.lst
    if exist server\amq_exchange_test.c echo server\amq_exchange_test.c>>_package.lst
    if exist server\amq_exchange.h echo server\amq_exchange.h>>_package.lst
    if exist server\amq_exchange.c echo server\amq_exchange.c>>_package.lst
    if exist server\amq_exchange_table_test.c echo server\amq_exchange_table_test.c>>_package.lst
    if exist server\amq_exchange_table.h echo server\amq_exchange_table.h>>_package.lst
    if exist server\amq_exchange_table.c echo server\amq_exchange_table.c>>_package.lst
    if exist server\amq_exchange_list_test.c echo server\amq_exchange_list_test.c>>_package.lst
    if exist server\amq_exchange_list.h echo server\amq_exchange_list.h>>_package.lst
    if exist server\amq_exchange_list.c echo server\amq_exchange_list.c>>_package.lst
    if exist server\amq_binding_test.c echo server\amq_binding_test.c>>_package.lst
    if exist server\amq_binding.h echo server\amq_binding.h>>_package.lst
    if exist server\amq_binding.c echo server\amq_binding.c>>_package.lst
    if exist server\amq_binding_list_test.c echo server\amq_binding_list_test.c>>_package.lst
    if exist server\amq_binding_list.h echo server\amq_binding_list.h>>_package.lst
    if exist server\amq_binding_list.c echo server\amq_binding_list.c>>_package.lst
    if exist server\amq_binding_mgt_agent.smt echo server\amq_binding_mgt_agent.smt>>_package.lst
    if exist server\amq_binding_mgt_agent.h echo server\amq_binding_mgt_agent.h>>_package.lst
    if exist server\amq_binding_mgt_agent.c echo server\amq_binding_mgt_agent.c>>_package.lst
    if exist server\amq_binding_mgt_test.c echo server\amq_binding_mgt_test.c>>_package.lst
    if exist server\amq_binding_mgt.h echo server\amq_binding_mgt.h>>_package.lst
    if exist server\amq_binding_mgt.c echo server\amq_binding_mgt.c>>_package.lst
    if exist server\amq_queue_bindings_list_test.c echo server\amq_queue_bindings_list_test.c>>_package.lst
    if exist server\amq_queue_bindings_list.h echo server\amq_queue_bindings_list.h>>_package.lst
    if exist server\amq_queue_bindings_list.c echo server\amq_queue_bindings_list.c>>_package.lst
    if exist server\amq_queue_bindings_list_table_test.c echo server\amq_queue_bindings_list_table_test.c>>_package.lst
    if exist server\amq_queue_bindings_list_table.h echo server\amq_queue_bindings_list_table.h>>_package.lst
    if exist server\amq_queue_bindings_list_table.c echo server\amq_queue_bindings_list_table.c>>_package.lst
    if exist server\amq_hitset_test.c echo server\amq_hitset_test.c>>_package.lst
    if exist server\amq_hitset.h echo server\amq_hitset.h>>_package.lst
    if exist server\amq_hitset.c echo server\amq_hitset.c>>_package.lst
    if exist server\amq_index_test.c echo server\amq_index_test.c>>_package.lst
    if exist server\amq_index.h echo server\amq_index.h>>_package.lst
    if exist server\amq_index.c echo server\amq_index.c>>_package.lst
    if exist server\amq_index_hash_test.c echo server\amq_index_hash_test.c>>_package.lst
    if exist server\amq_index_hash.h echo server\amq_index_hash.h>>_package.lst
    if exist server\amq_index_hash.c echo server\amq_index_hash.c>>_package.lst
    if exist server\amq_index_array_test.c echo server\amq_index_array_test.c>>_package.lst
    if exist server\amq_index_array.h echo server\amq_index_array.h>>_package.lst
    if exist server\amq_index_array.c echo server\amq_index_array.c>>_package.lst
    if exist server\amq_queue_agent.smt echo server\amq_queue_agent.smt>>_package.lst
    if exist server\amq_queue_agent.h echo server\amq_queue_agent.h>>_package.lst
    if exist server\amq_queue_agent.c echo server\amq_queue_agent.c>>_package.lst
    if exist server\amq_queue_test.c echo server\amq_queue_test.c>>_package.lst
    if exist server\amq_queue.h echo server\amq_queue.h>>_package.lst
    if exist server\amq_queue.c echo server\amq_queue.c>>_package.lst
    if exist server\amq_queue_table_test.c echo server\amq_queue_table_test.c>>_package.lst
    if exist server\amq_queue_table.h echo server\amq_queue_table.h>>_package.lst
    if exist server\amq_queue_table.c echo server\amq_queue_table.c>>_package.lst
    if exist server\amq_queue_list_test.c echo server\amq_queue_list_test.c>>_package.lst
    if exist server\amq_queue_list.h echo server\amq_queue_list.h>>_package.lst
    if exist server\amq_queue_list.c echo server\amq_queue_list.c>>_package.lst
    if exist server\amq_queue_set_test.c echo server\amq_queue_set_test.c>>_package.lst
    if exist server\amq_queue_set.h echo server\amq_queue_set.h>>_package.lst
    if exist server\amq_queue_set.c echo server\amq_queue_set.c>>_package.lst
    if exist server\amq_queue_basic_test.c echo server\amq_queue_basic_test.c>>_package.lst
    if exist server\amq_queue_basic.h echo server\amq_queue_basic.h>>_package.lst
    if exist server\amq_queue_basic.c echo server\amq_queue_basic.c>>_package.lst
    if exist server\amq_connection_agent.smt echo server\amq_connection_agent.smt>>_package.lst
    if exist server\amq_connection_agent.h echo server\amq_connection_agent.h>>_package.lst
    if exist server\amq_connection_agent.c echo server\amq_connection_agent.c>>_package.lst
    if exist server\amq_connection_test.c echo server\amq_connection_test.c>>_package.lst
    if exist server\amq_connection.h echo server\amq_connection.h>>_package.lst
    if exist server\amq_connection.c echo server\amq_connection.c>>_package.lst
    if exist server\amq_connection_by_broker_test.c echo server\amq_connection_by_broker_test.c>>_package.lst
    if exist server\amq_connection_by_broker.h echo server\amq_connection_by_broker.h>>_package.lst
    if exist server\amq_connection_by_broker.c echo server\amq_connection_by_broker.c>>_package.lst
    if exist server\amq_consumer_test.c echo server\amq_consumer_test.c>>_package.lst
    if exist server\amq_consumer.h echo server\amq_consumer.h>>_package.lst
    if exist server\amq_consumer.c echo server\amq_consumer.c>>_package.lst
    if exist server\amq_consumer_table_test.c echo server\amq_consumer_table_test.c>>_package.lst
    if exist server\amq_consumer_table.h echo server\amq_consumer_table.h>>_package.lst
    if exist server\amq_consumer_table.c echo server\amq_consumer_table.c>>_package.lst
    if exist server\amq_consumer_by_queue_test.c echo server\amq_consumer_by_queue_test.c>>_package.lst
    if exist server\amq_consumer_by_queue.h echo server\amq_consumer_by_queue.h>>_package.lst
    if exist server\amq_consumer_by_queue.c echo server\amq_consumer_by_queue.c>>_package.lst
    if exist server\amq_consumer_by_channel_test.c echo server\amq_consumer_by_channel_test.c>>_package.lst
    if exist server\amq_consumer_by_channel.h echo server\amq_consumer_by_channel.h>>_package.lst
    if exist server\amq_consumer_by_channel.c echo server\amq_consumer_by_channel.c>>_package.lst
    if exist server\amq_consumer_basic_test.c echo server\amq_consumer_basic_test.c>>_package.lst
    if exist server\amq_consumer_basic.h echo server\amq_consumer_basic.h>>_package.lst
    if exist server\amq_consumer_basic.c echo server\amq_consumer_basic.c>>_package.lst
    if exist server\amq_queue_connection_agent.smt echo server\amq_queue_connection_agent.smt>>_package.lst
    if exist server\amq_queue_connection_agent.h echo server\amq_queue_connection_agent.h>>_package.lst
    if exist server\amq_queue_connection_agent.c echo server\amq_queue_connection_agent.c>>_package.lst
    if exist server\amq_queue_connection_test.c echo server\amq_queue_connection_test.c>>_package.lst
    if exist server\amq_queue_connection.h echo server\amq_queue_connection.h>>_package.lst
    if exist server\amq_queue_connection.c echo server\amq_queue_connection.c>>_package.lst
    if exist server\amq_queue_binding_agent.smt echo server\amq_queue_binding_agent.smt>>_package.lst
    if exist server\amq_queue_binding_agent.h echo server\amq_queue_binding_agent.h>>_package.lst
    if exist server\amq_queue_binding_agent.c echo server\amq_queue_binding_agent.c>>_package.lst
    if exist server\amq_queue_binding_test.c echo server\amq_queue_binding_test.c>>_package.lst
    if exist server\amq_queue_binding.h echo server\amq_queue_binding.h>>_package.lst
    if exist server\amq_queue_binding.c echo server\amq_queue_binding.c>>_package.lst
    if exist server\amq_connection_queue_agent.smt echo server\amq_connection_queue_agent.smt>>_package.lst
    if exist server\amq_connection_queue_agent.h echo server\amq_connection_queue_agent.h>>_package.lst
    if exist server\amq_connection_queue_agent.c echo server\amq_connection_queue_agent.c>>_package.lst
    if exist server\amq_connection_queue_test.c echo server\amq_connection_queue_test.c>>_package.lst
    if exist server\amq_connection_queue.h echo server\amq_connection_queue.h>>_package.lst
    if exist server\amq_connection_queue.c echo server\amq_connection_queue.c>>_package.lst
    if exist server\amq_resource_test.c echo server\amq_resource_test.c>>_package.lst
    if exist server\amq_resource.h echo server\amq_resource.h>>_package.lst
    if exist server\amq_resource.c echo server\amq_resource.c>>_package.lst
    if exist server\amq_server_method_test.c echo server\amq_server_method_test.c>>_package.lst
    if exist server\amq_server_method.h echo server\amq_server_method.h>>_package.lst
    if exist server\amq_server_method.c echo server\amq_server_method.c>>_package.lst
    if exist server\amq_federation_agent.smt echo server\amq_federation_agent.smt>>_package.lst
    if exist server\amq_federation_agent.h echo server\amq_federation_agent.h>>_package.lst
    if exist server\amq_federation_agent.c echo server\amq_federation_agent.c>>_package.lst
    if exist server\amq_federation_test.c echo server\amq_federation_test.c>>_package.lst
    if exist server\amq_federation.h echo server\amq_federation.h>>_package.lst
    if exist server\amq_federation.c echo server\amq_federation.c>>_package.lst
    if exist server\amq_failover_agent.smt echo server\amq_failover_agent.smt>>_package.lst
    if exist server\amq_failover_agent.h echo server\amq_failover_agent.h>>_package.lst
    if exist server\amq_failover_agent.c echo server\amq_failover_agent.c>>_package.lst
    if exist server\amq_failover_test.c echo server\amq_failover_test.c>>_package.lst
    if exist server\amq_failover.h echo server\amq_failover.h>>_package.lst
    if exist server\amq_failover.c echo server\amq_failover.c>>_package.lst
    if exist server\amq_lease_test.c echo server\amq_lease_test.c>>_package.lst
    if exist server\amq_lease.h echo server\amq_lease.h>>_package.lst
    if exist server\amq_lease.c echo server\amq_lease.c>>_package.lst
    if exist server\amq_lease_table_test.c echo server\amq_lease_table_test.c>>_package.lst
    if exist server\amq_lease_table.h echo server\amq_lease_table.h>>_package.lst
    if exist server\amq_lease_table.c echo server\amq_lease_table.c>>_package.lst
    if exist server\amq_console_agent.smt echo server\amq_console_agent.smt>>_package.lst
    if exist server\amq_console_agent.h echo server\amq_console_agent.h>>_package.lst
    if exist server\amq_console_agent.c echo server\amq_console_agent.c>>_package.lst
    if exist server\amq_console_test.c echo server\amq_console_test.c>>_package.lst
    if exist server\amq_console.h echo server\amq_console.h>>_package.lst
    if exist server\amq_console.c echo server\amq_console.c>>_package.lst
    if exist server\amq_console_class_test.c echo server\amq_console_class_test.c>>_package.lst
    if exist server\amq_console_class.h echo server\amq_console_class.h>>_package.lst
    if exist server\amq_console_class.c echo server\amq_console_class.c>>_package.lst
    if exist server\amq_console_config_agent.smt echo server\amq_console_config_agent.smt>>_package.lst
    if exist server\amq_console_config_agent.h echo server\amq_console_config_agent.h>>_package.lst
    if exist server\amq_console_config_agent.c echo server\amq_console_config_agent.c>>_package.lst
    if exist server\amq_console_config_test.c echo server\amq_console_config_test.c>>_package.lst
    if exist server\amq_console_config.h echo server\amq_console_config.h>>_package.lst
    if exist server\amq_console_config.c echo server\amq_console_config.c>>_package.lst
    if exist server\amq_cml_test.c echo server\amq_cml_test.c>>_package.lst
    if exist server\amq_cml.h echo server\amq_cml.h>>_package.lst
    if exist server\amq_cml.c echo server\amq_cml.c>>_package.lst
    if exist server\stamp_generate echo server\stamp_generate>>_package.lst
    if exist server\boomakew.bat echo server\boomakew.bat>>_package.lst
    if exist server\configure echo server\configure>>_package.lst
    if exist server\Makefile.unix echo server\Makefile.unix>>_package.lst
    if exist server\boomake echo server\boomake>>_package.lst
    if exist server\configure.bat echo server\configure.bat>>_package.lst
    if exist server\Makefile.win32 echo server\Makefile.win32>>_package.lst
    if exist server\boomake.bat echo server\boomake.bat>>_package.lst
    if exist server\amq_server.vcproj echo server\amq_server.vcproj>>_package.lst
    if exist server\libamq_server.vcproj echo server\libamq_server.vcproj>>_package.lst
    pushd shell
    popd
    if exist shell\gpl_output echo shell\gpl_output>>_package.lst
    if exist shell\version.h echo shell\version.h>>_package.lst
    if exist shell\amq_shell.c echo shell\amq_shell.c>>_package.lst
    if exist shell\amq_mgt_console.icl echo shell\amq_mgt_console.icl>>_package.lst
    if exist shell\amq_mgt_broker.icl echo shell\amq_mgt_broker.icl>>_package.lst
    if exist shell\amq_mgt_exchange.icl echo shell\amq_mgt_exchange.icl>>_package.lst
    if exist shell\amq_mgt_binding.icl echo shell\amq_mgt_binding.icl>>_package.lst
    if exist shell\amq_mgt_queue.icl echo shell\amq_mgt_queue.icl>>_package.lst
    if exist shell\amq_mgt_config.icl echo shell\amq_mgt_config.icl>>_package.lst
    if exist shell\amq_mgt_connection.icl echo shell\amq_mgt_connection.icl>>_package.lst
    if exist shell\amq_mgt_queue_connection.icl echo shell\amq_mgt_queue_connection.icl>>_package.lst
    if exist shell\amq_mgt_queue_binding.icl echo shell\amq_mgt_queue_binding.icl>>_package.lst
    if exist shell\amq_mgt_connection_queue.icl echo shell\amq_mgt_connection_queue.icl>>_package.lst
    if exist shell\amq_operate_api.gsl echo shell\amq_operate_api.gsl>>_package.lst
    if exist shell\prelude.pdl echo shell\prelude.pdl>>_package.lst
    if exist shell\license.gpl echo shell\license.gpl>>_package.lst
    if exist shell\project.pdl echo shell\project.pdl>>_package.lst
    if exist shell\readme.txt echo shell\readme.txt>>_package.lst
    if exist shell\amq_mgt_console_test.c echo shell\amq_mgt_console_test.c>>_package.lst
    if exist shell\amq_mgt_console.h echo shell\amq_mgt_console.h>>_package.lst
    if exist shell\amq_mgt_console.c echo shell\amq_mgt_console.c>>_package.lst
    if exist shell\amq_mgt_broker_test.c echo shell\amq_mgt_broker_test.c>>_package.lst
    if exist shell\amq_mgt_broker.h echo shell\amq_mgt_broker.h>>_package.lst
    if exist shell\amq_mgt_broker.c echo shell\amq_mgt_broker.c>>_package.lst
    if exist shell\amq_mgt_exchange_test.c echo shell\amq_mgt_exchange_test.c>>_package.lst
    if exist shell\amq_mgt_exchange.h echo shell\amq_mgt_exchange.h>>_package.lst
    if exist shell\amq_mgt_exchange.c echo shell\amq_mgt_exchange.c>>_package.lst
    if exist shell\amq_mgt_binding_test.c echo shell\amq_mgt_binding_test.c>>_package.lst
    if exist shell\amq_mgt_binding.h echo shell\amq_mgt_binding.h>>_package.lst
    if exist shell\amq_mgt_binding.c echo shell\amq_mgt_binding.c>>_package.lst
    if exist shell\amq_mgt_queue_test.c echo shell\amq_mgt_queue_test.c>>_package.lst
    if exist shell\amq_mgt_queue.h echo shell\amq_mgt_queue.h>>_package.lst
    if exist shell\amq_mgt_queue.c echo shell\amq_mgt_queue.c>>_package.lst
    if exist shell\amq_mgt_config_test.c echo shell\amq_mgt_config_test.c>>_package.lst
    if exist shell\amq_mgt_config.h echo shell\amq_mgt_config.h>>_package.lst
    if exist shell\amq_mgt_config.c echo shell\amq_mgt_config.c>>_package.lst
    if exist shell\amq_mgt_connection_test.c echo shell\amq_mgt_connection_test.c>>_package.lst
    if exist shell\amq_mgt_connection.h echo shell\amq_mgt_connection.h>>_package.lst
    if exist shell\amq_mgt_connection.c echo shell\amq_mgt_connection.c>>_package.lst
    if exist shell\amq_mgt_queue_connection_test.c echo shell\amq_mgt_queue_connection_test.c>>_package.lst
    if exist shell\amq_mgt_queue_connection.h echo shell\amq_mgt_queue_connection.h>>_package.lst
    if exist shell\amq_mgt_queue_connection.c echo shell\amq_mgt_queue_connection.c>>_package.lst
    if exist shell\amq_mgt_queue_binding_test.c echo shell\amq_mgt_queue_binding_test.c>>_package.lst
    if exist shell\amq_mgt_queue_binding.h echo shell\amq_mgt_queue_binding.h>>_package.lst
    if exist shell\amq_mgt_queue_binding.c echo shell\amq_mgt_queue_binding.c>>_package.lst
    if exist shell\amq_mgt_connection_queue_test.c echo shell\amq_mgt_connection_queue_test.c>>_package.lst
    if exist shell\amq_mgt_connection_queue.h echo shell\amq_mgt_connection_queue.h>>_package.lst
    if exist shell\amq_mgt_connection_queue.c echo shell\amq_mgt_connection_queue.c>>_package.lst
    if exist shell\stamp_generate echo shell\stamp_generate>>_package.lst
    if exist shell\boomakew.bat echo shell\boomakew.bat>>_package.lst
    if exist shell\configure echo shell\configure>>_package.lst
    if exist shell\Makefile.unix echo shell\Makefile.unix>>_package.lst
    if exist shell\boomake echo shell\boomake>>_package.lst
    if exist shell\configure.bat echo shell\configure.bat>>_package.lst
    if exist shell\Makefile.win32 echo shell\Makefile.win32>>_package.lst
    if exist shell\boomake.bat echo shell\boomake.bat>>_package.lst
    if exist shell\amq_shell.vcproj echo shell\amq_shell.vcproj>>_package.lst
    if exist shell\libamq_shell.vcproj echo shell\libamq_shell.vcproj>>_package.lst
    pushd zyre
    popd
    if exist zyre\version.h echo zyre\version.h>>_package.lst
    if exist zyre\zyre.c echo zyre\zyre.c>>_package.lst
    if exist zyre\zyre_main.inc echo zyre\zyre_main.inc>>_package.lst
    if exist zyre\zyre_config.opf echo zyre\zyre_config.opf>>_package.lst
    if exist zyre\zyre_config.icl echo zyre\zyre_config.icl>>_package.lst
    if exist zyre\zyre_backend.icl echo zyre\zyre_backend.icl>>_package.lst
    if exist zyre\zyre_resource.icl echo zyre\zyre_resource.icl>>_package.lst
    if exist zyre\zyre_domain.icl echo zyre\zyre_domain.icl>>_package.lst
    if exist zyre\zyre_feed.icl echo zyre\zyre_feed.icl>>_package.lst
    if exist zyre\zyre_pipe.icl echo zyre\zyre_pipe.icl>>_package.lst
    if exist zyre\zyre_join.icl echo zyre\zyre_join.icl>>_package.lst
    if exist zyre\zyre_message.icl echo zyre\zyre_message.icl>>_package.lst
    if exist zyre\zyre_content.icl echo zyre\zyre_content.icl>>_package.lst
    if exist zyre\zyre_restms.icl echo zyre\zyre_restms.icl>>_package.lst
    if exist zyre\zyre_amqp_feed.icl echo zyre\zyre_amqp_feed.icl>>_package.lst
    if exist zyre\zyre_amqp_pipe.icl echo zyre\zyre_amqp_pipe.icl>>_package.lst
    if exist zyre\zyre_amqp_join.icl echo zyre\zyre_amqp_join.icl>>_package.lst
    if exist zyre\zyre_backend_amqp.icl echo zyre\zyre_backend_amqp.icl>>_package.lst
    if exist zyre\zyre_digest_amqp.icl echo zyre\zyre_digest_amqp.icl>>_package.lst
    if exist zyre\zyre_peer.asl echo zyre\zyre_peer.asl>>_package.lst
    if exist zyre\zyre_peer_method.icl echo zyre\zyre_peer_method.icl>>_package.lst
    if exist zyre\zyre_peer_config.opf echo zyre\zyre_peer_config.opf>>_package.lst
    if exist zyre\zyre_peer_config.icl echo zyre\zyre_peer_config.icl>>_package.lst
    if exist zyre\zyre_peer_config.txt echo zyre\zyre_peer_config.txt>>_package.lst
    if exist zyre\zyre_peer_agent.smt echo zyre\zyre_peer_agent.smt>>_package.lst
    if exist zyre\zyre_classes.icl echo zyre\zyre_classes.icl>>_package.lst
    if exist zyre\zyre_static.rc echo zyre\zyre_static.rc>>_package.lst
    if exist zyre\zyre_base.cfg echo zyre\zyre_base.cfg>>_package.lst
    if exist zyre\prelude.pdl echo zyre\prelude.pdl>>_package.lst
    if exist zyre\license.gpl echo zyre\license.gpl>>_package.lst
    if exist zyre\project.pdl echo zyre\project.pdl>>_package.lst
    if exist zyre\readme.txt echo zyre\readme.txt>>_package.lst
    if exist zyre\zyre_config_test.c echo zyre\zyre_config_test.c>>_package.lst
    if exist zyre\zyre_config.h echo zyre\zyre_config.h>>_package.lst
    if exist zyre\zyre_config.c echo zyre\zyre_config.c>>_package.lst
    if exist zyre\zyre_backend_front.icl echo zyre\zyre_backend_front.icl>>_package.lst
    if exist zyre\zyre_backend_back.icl echo zyre\zyre_backend_back.icl>>_package.lst
    if exist zyre\zyre_backend_test.c echo zyre\zyre_backend_test.c>>_package.lst
    if exist zyre\zyre_backend.h echo zyre\zyre_backend.h>>_package.lst
    if exist zyre\zyre_backend.c echo zyre\zyre_backend.c>>_package.lst
    if exist zyre\zyre_resource_front.icl echo zyre\zyre_resource_front.icl>>_package.lst
    if exist zyre\zyre_resource_back.icl echo zyre\zyre_resource_back.icl>>_package.lst
    if exist zyre\zyre_resource_test.c echo zyre\zyre_resource_test.c>>_package.lst
    if exist zyre\zyre_resource.h echo zyre\zyre_resource.h>>_package.lst
    if exist zyre\zyre_resource.c echo zyre\zyre_resource.c>>_package.lst
    if exist zyre\zyre_domain_test.c echo zyre\zyre_domain_test.c>>_package.lst
    if exist zyre\zyre_domain.h echo zyre\zyre_domain.h>>_package.lst
    if exist zyre\zyre_domain.c echo zyre\zyre_domain.c>>_package.lst
    if exist zyre\zyre_feed_test.c echo zyre\zyre_feed_test.c>>_package.lst
    if exist zyre\zyre_feed.h echo zyre\zyre_feed.h>>_package.lst
    if exist zyre\zyre_feed.c echo zyre\zyre_feed.c>>_package.lst
    if exist zyre\zyre_pipe_test.c echo zyre\zyre_pipe_test.c>>_package.lst
    if exist zyre\zyre_pipe.h echo zyre\zyre_pipe.h>>_package.lst
    if exist zyre\zyre_pipe.c echo zyre\zyre_pipe.c>>_package.lst
    if exist zyre\zyre_join_test.c echo zyre\zyre_join_test.c>>_package.lst
    if exist zyre\zyre_join.h echo zyre\zyre_join.h>>_package.lst
    if exist zyre\zyre_join.c echo zyre\zyre_join.c>>_package.lst
    if exist zyre\zyre_message_test.c echo zyre\zyre_message_test.c>>_package.lst
    if exist zyre\zyre_message.h echo zyre\zyre_message.h>>_package.lst
    if exist zyre\zyre_message.c echo zyre\zyre_message.c>>_package.lst
    if exist zyre\zyre_content_test.c echo zyre\zyre_content_test.c>>_package.lst
    if exist zyre\zyre_content.h echo zyre\zyre_content.h>>_package.lst
    if exist zyre\zyre_content.c echo zyre\zyre_content.c>>_package.lst
    if exist zyre\zyre_restms_agent.smt echo zyre\zyre_restms_agent.smt>>_package.lst
    if exist zyre\zyre_restms_agent.h echo zyre\zyre_restms_agent.h>>_package.lst
    if exist zyre\zyre_restms_agent.c echo zyre\zyre_restms_agent.c>>_package.lst
    if exist zyre\zyre_restms_test.c echo zyre\zyre_restms_test.c>>_package.lst
    if exist zyre\zyre_restms.h echo zyre\zyre_restms.h>>_package.lst
    if exist zyre\zyre_restms.c echo zyre\zyre_restms.c>>_package.lst
    if exist zyre\zyre_amqp_feed_test.c echo zyre\zyre_amqp_feed_test.c>>_package.lst
    if exist zyre\zyre_amqp_feed.h echo zyre\zyre_amqp_feed.h>>_package.lst
    if exist zyre\zyre_amqp_feed.c echo zyre\zyre_amqp_feed.c>>_package.lst
    if exist zyre\zyre_amqp_pipe_test.c echo zyre\zyre_amqp_pipe_test.c>>_package.lst
    if exist zyre\zyre_amqp_pipe.h echo zyre\zyre_amqp_pipe.h>>_package.lst
    if exist zyre\zyre_amqp_pipe.c echo zyre\zyre_amqp_pipe.c>>_package.lst
    if exist zyre\zyre_amqp_join_test.c echo zyre\zyre_amqp_join_test.c>>_package.lst
    if exist zyre\zyre_amqp_join.h echo zyre\zyre_amqp_join.h>>_package.lst
    if exist zyre\zyre_amqp_join.c echo zyre\zyre_amqp_join.c>>_package.lst
    if exist zyre\zyre_backend_amqp_agent.smt echo zyre\zyre_backend_amqp_agent.smt>>_package.lst
    if exist zyre\zyre_backend_amqp_agent.h echo zyre\zyre_backend_amqp_agent.h>>_package.lst
    if exist zyre\zyre_backend_amqp_agent.c echo zyre\zyre_backend_amqp_agent.c>>_package.lst
    if exist zyre\zyre_backend_amqp_test.c echo zyre\zyre_backend_amqp_test.c>>_package.lst
    if exist zyre\zyre_backend_amqp.h echo zyre\zyre_backend_amqp.h>>_package.lst
    if exist zyre\zyre_backend_amqp.c echo zyre\zyre_backend_amqp.c>>_package.lst
    if exist zyre\zyre_digest_amqp_agent.smt echo zyre\zyre_digest_amqp_agent.smt>>_package.lst
    if exist zyre\zyre_digest_amqp_agent.h echo zyre\zyre_digest_amqp_agent.h>>_package.lst
    if exist zyre\zyre_digest_amqp_agent.c echo zyre\zyre_digest_amqp_agent.c>>_package.lst
    if exist zyre\zyre_digest_amqp_test.c echo zyre\zyre_digest_amqp_test.c>>_package.lst
    if exist zyre\zyre_digest_amqp.h echo zyre\zyre_digest_amqp.h>>_package.lst
    if exist zyre\zyre_digest_amqp.c echo zyre\zyre_digest_amqp.c>>_package.lst
    if exist zyre\zyre_peer_method_test.c echo zyre\zyre_peer_method_test.c>>_package.lst
    if exist zyre\zyre_peer_method.h echo zyre\zyre_peer_method.h>>_package.lst
    if exist zyre\zyre_peer_method.c echo zyre\zyre_peer_method.c>>_package.lst
    if exist zyre\zyre_peer_config_test.c echo zyre\zyre_peer_config_test.c>>_package.lst
    if exist zyre\zyre_peer_config.h echo zyre\zyre_peer_config.h>>_package.lst
    if exist zyre\zyre_peer_config.c echo zyre\zyre_peer_config.c>>_package.lst
    if exist zyre\zyre_peer_agent.h echo zyre\zyre_peer_agent.h>>_package.lst
    if exist zyre\zyre_peer_agent.c echo zyre\zyre_peer_agent.c>>_package.lst
    if exist zyre\zyre_classes.h echo zyre\zyre_classes.h>>_package.lst
    if exist zyre\zyre_classes.c echo zyre\zyre_classes.c>>_package.lst
    if exist zyre\zyre_static.icl echo zyre\zyre_static.icl>>_package.lst
    if exist zyre\zyre_static_test.c echo zyre\zyre_static_test.c>>_package.lst
    if exist zyre\zyre_static.h echo zyre\zyre_static.h>>_package.lst
    if exist zyre\zyre_static.c echo zyre\zyre_static.c>>_package.lst
    if exist zyre\stamp_generate echo zyre\stamp_generate>>_package.lst
    if exist zyre\boomakew.bat echo zyre\boomakew.bat>>_package.lst
    if exist zyre\configure echo zyre\configure>>_package.lst
    if exist zyre\Makefile.unix echo zyre\Makefile.unix>>_package.lst
    if exist zyre\boomake echo zyre\boomake>>_package.lst
    if exist zyre\configure.bat echo zyre\configure.bat>>_package.lst
    if exist zyre\Makefile.win32 echo zyre\Makefile.win32>>_package.lst
    if exist zyre\boomake.bat echo zyre\boomake.bat>>_package.lst
    if exist zyre\zyre.vcproj echo zyre\zyre.vcproj>>_package.lst
    if exist zyre\libamq_zyre.vcproj echo zyre\libamq_zyre.vcproj>>_package.lst
    if exist zyre\webpages\http_base.css echo zyre\webpages\http_base.css>>_package.lst
    if exist zyre\webpages\index.html echo zyre\webpages\index.html>>_package.lst
    pushd windows
    popd
    if exist windows\OpenAMQ.sln echo windows\OpenAMQ.sln>>_package.lst
    if exist windows\prelude.pdl echo windows\prelude.pdl>>_package.lst
    if exist windows\license.gpl echo windows\license.gpl>>_package.lst
    if exist windows\project.pdl echo windows\project.pdl>>_package.lst
    if exist windows\readme.txt echo windows\readme.txt>>_package.lst
    if exist windows\stamp_generate echo windows\stamp_generate>>_package.lst
    if exist windows\boomakew.bat echo windows\boomakew.bat>>_package.lst
    if exist windows\configure echo windows\configure>>_package.lst
    if exist windows\Makefile.unix echo windows\Makefile.unix>>_package.lst
    if exist windows\boomake echo windows\boomake>>_package.lst
    if exist windows\configure.bat echo windows\configure.bat>>_package.lst
    if exist windows\Makefile.win32 echo windows\Makefile.win32>>_package.lst
    if exist windows\boomake.bat echo windows\boomake.bat>>_package.lst
    echo "Source package successfully generated">common\stamp_source
    echo "common\stamp_source">>_package.lst
    echo "Source package successfully generated">wireapi\stamp_source
    echo "wireapi\stamp_source">>_package.lst
    echo "Source package successfully generated">server\stamp_source
    echo "server\stamp_source">>_package.lst
    echo "Source package successfully generated">shell\stamp_source
    echo "shell\stamp_source">>_package.lst
    echo "Source package successfully generated">zyre\stamp_source
    echo "zyre\stamp_source">>_package.lst
    echo "Source package successfully generated">windows\stamp_source
    echo "windows\stamp_source">>_package.lst
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    echo boom I: [OpenAMQ]: Building OpenAMQ-!MY_VERSION!-src.zip...
    zip  -rq _package -@<_package.lst
    unzip -q _package -d OpenAMQ-!MY_VERSION!
    if exist  OpenAMQ-!MY_VERSION!-src.zip del OpenAMQ-!MY_VERSION!-src.zip
    zip -rmq OpenAMQ-!MY_VERSION!-src.zip OpenAMQ-!MY_VERSION!
    del _package.zip
    del _package.lst
    del stamp_source
    del common\stamp_source
    del wireapi\stamp_source
    del server\stamp_source
    del shell\stamp_source
    del zyre\stamp_source
    del windows\stamp_source
    goto :eof

:-----------------------------   BUILD PROJECTS   -----------------------------

:a_build_projects
    if exist _install\nul rmdir /s /q _install
    mkdir _install
    mkdir _install\lib
    mkdir _install\include
    mkdir _install\bin
    pushd common
    if exist boomake.bat (
        call boomake -install ..\_install build install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
        call boomake -install ..\_install build install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
        call boomake -install ..\_install build install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
        call boomake -install ..\_install build install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
        call boomake -install ..\_install build install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd windows
    if exist boomake.bat (
        call boomake -install ..\_install build install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    goto :eof

:-------------------------   CHECK OPERATING CONTEXT   ------------------------

:a_check_operating_context
    set event=repository
    if exist stamp_source   set event=source
    if exist stamp_stripped set event=stripped
    goto :eof

:-----------------------------   CLEAN PROJECTS   -----------------------------

:a_clean_projects
    if exist _install\nul rmdir /s /q _install
    pushd common
    if exist boomake.bat (
        call boomake clean
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
        call boomake clean
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
        call boomake clean
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
        call boomake clean
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
        call boomake clean
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd windows
    if exist boomake.bat (
        call boomake clean
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    goto :eof

:----------------------------   COMPILE PROJECTS   ----------------------------

:a_compile_projects
    pushd common
    if exist boomake.bat (
        call boomake compile
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
        call boomake compile
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
        call boomake compile
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
        call boomake compile
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
        call boomake compile
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd windows
    if exist boomake.bat (
        call boomake compile
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    goto :eof

:----------------------------   INSTALL PROJECTS   ----------------------------

:a_install_projects
    pushd common
    if exist boomake.bat (
        call boomake install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
        call boomake install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
        call boomake install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
        call boomake install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
        call boomake install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd windows
    if exist boomake.bat (
        call boomake install
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    if exist installer.bat (
    if "!BOOM_TRACE!"=="1" echo installer
    verify>nul
    call installer
    if errorlevel 1 (
        echo boom E: [OpenAMQ]: 'installer' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------------   REGEN PROJECTS   -----------------------------

:a_regen_projects
    pushd common
    if exist boomake.bat (
        call boomake regen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
        call boomake regen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
        call boomake regen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
        call boomake regen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
        call boomake regen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd windows
    if exist boomake.bat (
        call boomake regen
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    goto :eof

:-------------------------   REPORT HELP INFORMATION   ------------------------

:a_report_help_information
    echo The commands you can currently use on this project are:
    echo.
    goto r_!state!
    goto :eof

:-------------------------   REPORT PROJECT VERSION   -------------------------

:a_report_project_version
    echo OpenAMQ-1.4c1
    goto :eof

:------------------------------   TEST PROJECTS   -----------------------------

:a_test_projects
    pushd common
    if exist boomake.bat (
        call boomake test
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd wireapi
    if exist boomake.bat (
        call boomake test
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd server
    if exist boomake.bat (
        call boomake test
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd shell
    if exist boomake.bat (
        call boomake test
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd zyre
    if exist boomake.bat (
        call boomake test
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    pushd windows
    if exist boomake.bat (
        call boomake test
    ) else (
        echo boom E: [OpenAMQ]: project is not configured - run 'boom configure'
    )
    popd
    if exist selftest.bat (
    if "!BOOM_TRACE!"=="1" echo selftest
    verify>nul
    call selftest
    if errorlevel 1 (
        echo boom E: [OpenAMQ]: 'selftest' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   USE SOURCE CONTROL REVISION   ----------------------

:a_use_source_control_revision
    set SVN_REVISION=svn
    if exist .svn
ul (
        for /f "usebackq tokens=1,2 delims=: " %%v in (`svn info`) do if "%%v"=="Revision" set SVN_REVISION=%%w
    )
    set MY_VERSION=!MY_VERSION!-!SVN_REVISION!
    goto :eof

:s_initial
    if "!debug!"=="1" echo State: initial
    if "!event!"=="" goto s_1_empty
    if "!event!"=="ok" goto s_1_1
    goto s_win32
:s_1_1
    if "!debug!"=="1" echo Event: ok
    set event=
    if "!debug!"=="1" echo Action: check operating context
    set _exception=
    call :a_check_operating_context
    if "!_exception!"=="1" exit /b 1
    set state=initial_check
    goto s_!state!
:s_1_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial
:r_initial
    goto r_win32

:s_initial_check
    if "!debug!"=="1" echo State: initial check
    if "!event!"=="" goto s_2_empty
    if "!event!"=="repository" goto s_2_1
    if "!event!"=="source" goto s_2_2
    if "!event!"=="stripped" goto s_2_3
    goto s_win32
:s_2_1
    if "!debug!"=="1" echo Event: repository
    set event=
    set state=repository
    goto s_!state!
:s_2_2
    if "!debug!"=="1" echo Event: source
    set event=
    set state=source
    goto s_!state!
:s_2_3
    if "!debug!"=="1" echo Event: stripped
    set event=
    set state=stripped
    goto s_!state!
:s_2_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial_check
:r_initial_check
    goto r_win32

:s_repository
    if "!debug!"=="1" echo State: repository
    if "!event!"=="" goto s_3_empty
    if "!event!"=="build" goto s_3_1
    if "!event!"=="compile" goto s_3_2
    if "!event!"=="clean" goto s_3_3
    if "!event!"=="regen" goto s_3_4
    if "!event!"=="allgen" goto s_3_5
    if "!event!"=="distrib" goto s_3_6
    if "!event!"=="distsrc" goto s_3_7
    if "!event!"=="distrev" goto s_3_8
    goto s_default
:s_3_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: build projects
    set _exception=
    call :a_build_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_2
    if "!debug!"=="1" echo Event: compile
    set event=
    if "!debug!"=="1" echo Action: compile projects
    set _exception=
    call :a_compile_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_3
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: clean projects
    set _exception=
    call :a_clean_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_4
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: regen projects
    set _exception=
    call :a_regen_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_5
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: allgen projects
    set _exception=
    call :a_allgen_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_6
    if "!debug!"=="1" echo Event: distrib
    set event=
    if "!debug!"=="1" echo Action: build projects
    set _exception=
    call :a_build_projects
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build product source packages
    set _exception=
    call :a_build_product_source_packages
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build product install packages
    set _exception=
    call :a_build_product_install_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_7
    if "!debug!"=="1" echo Event: distsrc
    set event=
    if "!debug!"=="1" echo Action: allgen projects
    set _exception=
    call :a_allgen_projects
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build product source packages
    set _exception=
    call :a_build_product_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_8
    if "!debug!"=="1" echo Event: distrev
    set event=
    if "!debug!"=="1" echo Action: allgen projects
    set _exception=
    call :a_allgen_projects
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: use source control revision
    set _exception=
    call :a_use_source_control_revision
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build product source packages
    set _exception=
    call :a_build_product_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_repository
:r_repository
echo build:
    echo   For each project in the product, regenerate code and build binary
    echo     files ready for installation.  The projects are built in their
    echo     individual directories and installed into the temporary install tree.
echo compile:
    echo   For each project in the product, build binary files ready for installation,
    echo     but don't run the code generation phase .  The projects are built in their
    echo     individual directories and installed into the temporary install tree.
echo clean:
    echo   Deletes generated project files.  This action removes generated source
    echo     and binary files.
echo regen:
    echo   For each project in the product, regenerate any source files that
    echo     are produced via GSL, Libero or another code generation tool.
    echo     Generates only those files that are required to build under
    echo     the current model.
echo allgen:
    echo   For each project in the product, regenerate any source files that
    echo     are produced via GSL, Libero or another code generation tool.
    echo     Generates all files.
echo distrib:
    echo   Build all projects and create full distribution packages.  If you do
    echo     not want to rebuild the projects, you can use the 'distsrc' and 'distbin'
    echo     actions as shortcuts.
echo distsrc:
    echo   Build source distribution packages based on product version number.
echo distrev:
    echo   Build source distribution packages based on source control revision
    echo     number.
    goto r_default

:s_source
    if "!debug!"=="1" echo State: source
    if "!event!"=="" goto s_4_empty
    if "!event!"=="build" goto s_4_1
    if "!event!"=="clean" goto s_4_2
    if "!event!"=="regen" goto s_4_3
    if "!event!"=="allgen" goto s_4_4
    goto s_default
:s_4_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: build projects
    set _exception=
    call :a_build_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: clean projects
    set _exception=
    call :a_clean_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_3
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: regen projects
    set _exception=
    call :a_regen_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_4
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: allgen projects
    set _exception=
    call :a_allgen_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_source
:r_source
echo build:
    echo   For each project in the product, build binary files ready for
    echo     installation.  The projects are built in their individual directories
    echo     and installed into the temporary install tree.
echo clean:
    echo   Deletes generated project files.  This action removes generated binary
    echo     files.
echo regen:
    echo   For each project in the product, regenerate any source files that
    echo     are produced via GSL, Libero or another code generation tool.
    echo     Generates only those files that are required to build under
    echo     the current model.
echo allgen:
    echo   For each project in the product, regenerate any source files that
    echo     are produced via GSL, Libero or another code generation tool.
    echo     Generates all files.
    goto r_default

:s_stripped
    if "!debug!"=="1" echo State: stripped
    if "!event!"=="" goto s_5_empty
    if "!event!"=="build" goto s_5_1
    if "!event!"=="clean" goto s_5_2
    goto s_default
:s_5_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: build projects
    set _exception=
    call :a_build_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: clean projects
    set _exception=
    call :a_clean_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_stripped
:r_stripped
echo build:
    echo   For each project in the product, build binary files ready for
    echo     installation.  The projects are built in their individual directories
    echo     and installed into the temporary install tree.
echo clean:
    echo   Deletes generated project files.  This action removes generated binary
    echo     files.
    goto r_default

:s_default
    if "!debug!"=="1" echo State: default
    if "!event!"=="" goto s_6_empty
    if "!event!"=="install" goto s_6_1
    if "!event!"=="distbin" goto s_6_2
    if "!event!"=="test" goto s_6_3
    if "!event!"=="help" goto s_6_4
    if "!event!"=="version" goto s_6_5
    if "!event!"=="empty" goto s_6_6
    goto s_win32
:s_6_1
    if "!debug!"=="1" echo Event: install
    set event=
    if "!debug!"=="1" echo Action: install projects
    set _exception=
    call :a_install_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_2
    if "!debug!"=="1" echo Event: distbin
    set event=
    if "!debug!"=="1" echo Action: build product install packages
    set _exception=
    call :a_build_product_install_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_3
    if "!debug!"=="1" echo Event: test
    set event=
    if "!debug!"=="1" echo Action: test projects
    set _exception=
    call :a_test_projects
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_4
    if "!debug!"=="1" echo Event: help
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_5
    if "!debug!"=="1" echo Event: version
    set event=
    if "!debug!"=="1" echo Action: report project version
    set _exception=
    call :a_report_project_version
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_6
    if "!debug!"=="1" echo Event: empty
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_default
:r_default
echo install:
    echo   Install each project into its target directory.  The projects must
    echo     have been built (and installed into the temporary install tree, which
    echo     is what the build action does).
echo distbin:
    echo   Build binary distribution packages.  The actual packages built depend on
    echo     the project packagers used, but typically you will get a ZIP or TGZ file
    echo     containing all the projects' deliverables.  Note that this action works
    echo     entirely from the temporary install tree, which the 'build' action makes.
echo test:
    echo   Runs each project's test process.
echo help:
    echo   Shows a list of the commands allowed on the project.
echo version:
    echo   Show product version.
    goto r_win32


exit /b 0
