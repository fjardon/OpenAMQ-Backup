#!/bin/sh
#
#   Boom builder for iMatix Base2 2.3
#   Generated by iMatix Boom from product.pwl
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   All rights reserved.
#   
#   This file is licensed under the BSD license as follows:
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of iMatix Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#   Force environment variables to point to install location
#   Start by using final IBASE, then handle local -install path
#
boom_model_list () {
    set |
        awk 'BEGIN                      { FS="[=_]" }
             /^BOOM_MODEL_[A-Z0-9]*=1$/ { print $3  }'
}
boom_model_expand () {
    for MODEL in `boom_model_list`; do
        eval unset BOOM_MODEL_$MODEL
    done
    OLD_IFS=$IFS
    IFS=,
    for MODEL in $BOOM_MODEL; do
        MODEL=`echo $MODEL | tr \[a-z\] \[A-Z\]`
        eval BOOM_MODEL_$MODEL=1
        eval export BOOM_MODEL_$MODEL
    done
    IFS=$OLD_IFS
}
croak() {
    if [ -n "$*" ]; then
        echo "boom E: [base2]: $* - stop" 1>&2
    else
        echo "boom E: [base2]: stop" 1>&2
    fi
    exit 1
}
carp() {
    echo "boom I: [base2]: $*" 1>&2
}
trap 'croak "Interrupted"' INT
trap 'croak "Terminated"' TERM
trap 'croak "Quit"' QUIT
self=$0
MY_VERSION="2.3"
#
#   Set default values for BOOM_MODEL
#
#   Default is release,mt on all platforms.
#
if [ -z "$BOOM_MODEL" ]; then
    BOOM_MODEL=release,mt
fi
boom_model_expand
if [ "$BOOM_MODEL_RELEASE" != "1" ]; then
    if [ "$BOOM_MODEL_DEBUG" != "1" ]; then
        BOOM_MODEL_RELEASE=1
        BOOM_MODEL="$BOOM_MODEL,release"
    fi
fi
if [ "$BOOM_MODEL_ST" != "1" ]; then
    if [ "$BOOM_MODEL_MT" != "1" ]; then
            BOOM_MODEL="$BOOM_MODEL,mt"
    fi
fi
if [ -z "$IBASE" ]; then
    carp "The IBASE variable is not set.  Please set it to the location where iMatix Base2 should be installed."
    exit 1
fi
if [ "$1" = "-v" ]; then
    BOOM_TRACE=1
    export BOOM_TRACE
    shift
fi
if [ "$1" != "-install" ]; then
    #   Normal use, use IBASE
    PATH=.:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$IBASE/include; export INCDIR_ALT
    _LOCAL_BASE=
    _INSTALL_ROOT=$IBASE
else
    #   Building product, we use -install directory first, then IBASE
    CURDIR=`pwd`
    cd $2
    _LOCAL_BASE=`pwd`
    cd $CURDIR
    PATH=.:$_LOCAL_BASE/bin:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$_LOCAL_BASE/bin:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$_LOCAL_BASE/include:$IBASE/include; export INCDIR_ALT
    shift
    shift
    _INSTALL_ROOT=$_LOCAL_BASE
fi

# ----------------------------   ALLGEN PROJECTS   ----------------------------

a_allgen_projects() {
:
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake allgen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
}

# --------------------   BUILD PRODUCT INSTALL PACKAGES   ---------------------

a_build_product_install_packages() {
:
    carp "Building Base Install..."
    rm -rf _install
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake -install ../_install install || croak
    else
        carp "Project has not been built - boomake is missing"
    fi
    cd $PUSHDIR
    mv _install base2-$MY_VERSION
    [ "$BOOM_TRACE" ] && echo "pkg_tgz base2-$MY_VERSION"
    pkg_tgz base2-$MY_VERSION || croak "\"pkg_tgz base2-$MY_VERSION\" failed"
    rm -rf base2-$MY_VERSION
}

# ---------------------   BUILD PRODUCT SOURCE PACKAGES   ---------------------

a_build_product_source_packages() {
:
    rm -f _package.lst
    if [ -f "project.pdl" ]; then
        echo project.pdl>>_package.lst
    fi
    if [ -f "readme.txt" ]; then
        echo readme.txt>>_package.lst
    fi
    if [ -f "release.txt" ]; then
        echo release.txt>>_package.lst
    fi
    if [ -f "stamp_generate" ]; then
        echo stamp_generate>>_package.lst
    fi
    if [ -f "boomakew.bat" ]; then
        echo boomakew.bat>>_package.lst
    fi
    if [ -f "configure" ]; then
        echo configure>>_package.lst
    fi
    if [ -f "Makefile.unix" ]; then
        echo Makefile.unix>>_package.lst
    fi
    if [ -f "boomake" ]; then
        echo boomake>>_package.lst
    fi
    if [ -f "configure.bat" ]; then
        echo configure.bat>>_package.lst
    fi
    if [ -f "Makefile.win32" ]; then
        echo Makefile.win32>>_package.lst
    fi
    if [ -f "boomake.bat" ]; then
        echo boomake.bat>>_package.lst
    fi
    PUSHDIR=`pwd`
    cd xnf
    cd $PUSHDIR
    if [ -f "xnf/xnf.xnf" ]; then
        echo xnf/xnf.xnf>>_package.lst
    fi
    if [ -f "xnf/xnf_base.xnf" ]; then
        echo xnf/xnf_base.xnf>>_package.lst
    fi
    if [ -f "xnf/xnf_gen.gsl" ]; then
        echo xnf/xnf_gen.gsl>>_package.lst
    fi
    if [ -f "xnf/xnf_preproc.gsl" ]; then
        echo xnf/xnf_preproc.gsl>>_package.lst
    fi
    if [ -f "xnf/xnf_inherit.gsl" ]; then
        echo xnf/xnf_inherit.gsl>>_package.lst
    fi
    if [ -f "xnf/xnf_parse.gsl" ]; then
        echo xnf/xnf_parse.gsl>>_package.lst
    fi
    if [ -f "xnf/xnf_produce.gsl" ]; then
        echo xnf/xnf_produce.gsl>>_package.lst
    fi
    if [ -f "xnf/xnf_doc.txt" ]; then
        echo xnf/xnf_doc.txt>>_package.lst
    fi
    if [ -f "xnf/dfl.xnf" ]; then
        echo xnf/dfl.xnf>>_package.lst
    fi
    if [ -f "xnf/dfl_gen.gsl" ]; then
        echo xnf/dfl_gen.gsl>>_package.lst
    fi
    if [ -f "xnf/dfl_preproc.gsl" ]; then
        echo xnf/dfl_preproc.gsl>>_package.lst
    fi
    if [ -f "xnf/dfl_inherit.gsl" ]; then
        echo xnf/dfl_inherit.gsl>>_package.lst
    fi
    if [ -f "xnf/dfl_parse.gsl" ]; then
        echo xnf/dfl_parse.gsl>>_package.lst
    fi
    if [ -f "xnf/dfl_doc.txt" ]; then
        echo xnf/dfl_doc.txt>>_package.lst
    fi
    if [ -f "xnf/prelude.pdl" ]; then
        echo xnf/prelude.pdl>>_package.lst
    fi
    if [ -f "xnf/license.gpl" ]; then
        echo xnf/license.gpl>>_package.lst
    fi
    if [ -f "xnf/project.pdl" ]; then
        echo xnf/project.pdl>>_package.lst
    fi
    if [ -f "xnf/readme.txt" ]; then
        echo xnf/readme.txt>>_package.lst
    fi
    if [ -f "xnf/stamp_generate" ]; then
        echo xnf/stamp_generate>>_package.lst
    fi
    if [ -f "xnf/boomakew.bat" ]; then
        echo xnf/boomakew.bat>>_package.lst
    fi
    if [ -f "xnf/configure" ]; then
        echo xnf/configure>>_package.lst
    fi
    if [ -f "xnf/Makefile.unix" ]; then
        echo xnf/Makefile.unix>>_package.lst
    fi
    if [ -f "xnf/boomake" ]; then
        echo xnf/boomake>>_package.lst
    fi
    if [ -f "xnf/configure.bat" ]; then
        echo xnf/configure.bat>>_package.lst
    fi
    if [ -f "xnf/Makefile.win32" ]; then
        echo xnf/Makefile.win32>>_package.lst
    fi
    if [ -f "xnf/boomake.bat" ]; then
        echo xnf/boomake.bat>>_package.lst
    fi
    PUSHDIR=`pwd`
    cd icl
    cd $PUSHDIR
    if [ -f "icl/version.h" ]; then
        echo icl/version.h>>_package.lst
    fi
    if [ -f "icl/icl_stdc.xnf" ]; then
        echo icl/icl_stdc.xnf>>_package.lst
    fi
    if [ -f "icl/icl.xnf" ]; then
        echo icl/icl.xnf>>_package.lst
    fi
    if [ -f "icl/icl_gen.gsl" ]; then
        echo icl/icl_gen.gsl>>_package.lst
    fi
    if [ -f "icl/icl_preproc.gsl" ]; then
        echo icl/icl_preproc.gsl>>_package.lst
    fi
    if [ -f "icl/icl_inherit.gsl" ]; then
        echo icl/icl_inherit.gsl>>_package.lst
    fi
    if [ -f "icl/icl_parse.gsl" ]; then
        echo icl/icl_parse.gsl>>_package.lst
    fi
    if [ -f "icl/icl_doc.txt" ]; then
        echo icl/icl_doc.txt>>_package.lst
    fi
    if [ -f "icl/base.h" ]; then
        echo icl/base.h>>_package.lst
    fi
    if [ -f "icl/icl_stdc.gsl" ]; then
        echo icl/icl_stdc.gsl>>_package.lst
    fi
    if [ -f "icl/icl_stdc_lib.gsl" ]; then
        echo icl/icl_stdc_lib.gsl>>_package.lst
    fi
    if [ -f "icl/icl_perl.gsl" ]; then
        echo icl/icl_perl.gsl>>_package.lst
    fi
    if [ -f "icl/icl_java.gsl" ]; then
        echo icl/icl_java.gsl>>_package.lst
    fi
    if [ -f "icl/icl_ruby.gsl" ]; then
        echo icl/icl_ruby.gsl>>_package.lst
    fi
    if [ -f "icl/icl_doc.gsl" ]; then
        echo icl/icl_doc.gsl>>_package.lst
    fi
    if [ -f "icl/icl_classes.pdl" ]; then
        echo icl/icl_classes.pdl>>_package.lst
    fi
    if [ -f "icl/icl_base.icl" ]; then
        echo icl/icl_base.icl>>_package.lst
    fi
    if [ -f "icl/icl_init.icl" ]; then
        echo icl/icl_init.icl>>_package.lst
    fi
    if [ -f "icl/icl_object.icl" ]; then
        echo icl/icl_object.icl>>_package.lst
    fi
    if [ -f "icl/icl_thread.icl" ]; then
        echo icl/icl_thread.icl>>_package.lst
    fi
    if [ -f "icl/icl_mutex.icl" ]; then
        echo icl/icl_mutex.icl>>_package.lst
    fi
    if [ -f "icl/icl_cond.icl" ]; then
        echo icl/icl_cond.icl>>_package.lst
    fi
    if [ -f "icl/icl_rwlock.icl" ]; then
        echo icl/icl_rwlock.icl>>_package.lst
    fi
    if [ -f "icl/icl_apr.icl" ]; then
        echo icl/icl_apr.icl>>_package.lst
    fi
    if [ -f "icl/icl_stats.icl" ]; then
        echo icl/icl_stats.icl>>_package.lst
    fi
    if [ -f "icl/icl_trace.icl" ]; then
        echo icl/icl_trace.icl>>_package.lst
    fi
    if [ -f "icl/icl_destroy.icl" ]; then
        echo icl/icl_destroy.icl>>_package.lst
    fi
    if [ -f "icl/icl_destroy_list.icl" ]; then
        echo icl/icl_destroy_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_system.icl" ]; then
        echo icl/icl_system.icl>>_package.lst
    fi
    if [ -f "icl/icl_system_list.icl" ]; then
        echo icl/icl_system_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_console.icl" ]; then
        echo icl/icl_console.icl>>_package.lst
    fi
    if [ -f "icl/icl_longstr.icl" ]; then
        echo icl/icl_longstr.icl>>_package.lst
    fi
    if [ -f "icl/icl_shortstr.icl" ]; then
        echo icl/icl_shortstr.icl>>_package.lst
    fi
    if [ -f "icl/icl_tracker.icl" ]; then
        echo icl/icl_tracker.icl>>_package.lst
    fi
    if [ -f "icl/icl_mem.icl" ]; then
        echo icl/icl_mem.icl>>_package.lst
    fi
    if [ -f "icl/icl_mem_lib.icl" ]; then
        echo icl/icl_mem_lib.icl>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat.icl" ]; then
        echo icl/icl_mem_fat.icl>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat_list.icl" ]; then
        echo icl/icl_mem_fat_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin.icl" ]; then
        echo icl/icl_mem_thin.icl>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin_list.icl" ]; then
        echo icl/icl_mem_thin_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_cache.icl" ]; then
        echo icl/icl_cache.icl>>_package.lst
    fi
    if [ -f "icl/icl_cache_list.icl" ]; then
        echo icl/icl_cache_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_list_item.icl" ]; then
        echo icl/icl_list_item.icl>>_package.lst
    fi
    if [ -f "icl/icl_list_head.icl" ]; then
        echo icl/icl_list_head.icl>>_package.lst
    fi
    if [ -f "icl/icl_hash_item.icl" ]; then
        echo icl/icl_hash_item.icl>>_package.lst
    fi
    if [ -f "icl/icl_hash_head.icl" ]; then
        echo icl/icl_hash_head.icl>>_package.lst
    fi
    if [ -f "icl/icl_array_item.icl" ]; then
        echo icl/icl_array_item.icl>>_package.lst
    fi
    if [ -f "icl/icl_array_head.icl" ]; then
        echo icl/icl_array_head.icl>>_package.lst
    fi
    if [ -f "icl/icl_stack_item.icl" ]; then
        echo icl/icl_stack_item.icl>>_package.lst
    fi
    if [ -f "icl/icl_stack_head.icl" ]; then
        echo icl/icl_stack_head.icl>>_package.lst
    fi
    if [ -f "icl/icl_queue_item.icl" ]; then
        echo icl/icl_queue_item.icl>>_package.lst
    fi
    if [ -f "icl/icl_queue_head.icl" ]; then
        echo icl/icl_queue_head.icl>>_package.lst
    fi
    if [ -f "icl/icl_iter_list_item.icl" ]; then
        echo icl/icl_iter_list_item.icl>>_package.lst
    fi
    if [ -f "icl/icl_iter_list_head.icl" ]; then
        echo icl/icl_iter_list_head.icl>>_package.lst
    fi
    if [ -f "icl/icl_stats_examine.c" ]; then
        echo icl/icl_stats_examine.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_rwlock.icl" ]; then
        echo icl/icl_demo_rwlock.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_thread.icl" ]; then
        echo icl/icl_demo_thread.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_plain.icl" ]; then
        echo icl/icl_demo_plain.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_cache.icl" ]; then
        echo icl/icl_demo_cache.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_local.icl" ]; then
        echo icl/icl_demo_local.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_possess.icl" ]; then
        echo icl/icl_demo_possess.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_links.icl" ]; then
        echo icl/icl_demo_links.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_list.icl" ]; then
        echo icl/icl_demo_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_list_list.icl" ]; then
        echo icl/icl_demo_list_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2.icl" ]; then
        echo icl/icl_demo_list2.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list.icl" ]; then
        echo icl/icl_demo_list2_list.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list2.icl" ]; then
        echo icl/icl_demo_list2_list2.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int.icl" ]; then
        echo icl/icl_demo_hash_int.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int_table.icl" ]; then
        echo icl/icl_demo_hash_int_table.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str.icl" ]; then
        echo icl/icl_demo_hash_str.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str_table.icl" ]; then
        echo icl/icl_demo_hash_str_table.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr.icl" ]; then
        echo icl/icl_demo_hash_lstr.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr_table.icl" ]; then
        echo icl/icl_demo_hash_lstr_table.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_serial.icl" ]; then
        echo icl/icl_demo_serial.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_array.icl" ]; then
        echo icl/icl_demo_array.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_array_array.icl" ]; then
        echo icl/icl_demo_array_array.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack.icl" ]; then
        echo icl/icl_demo_stack.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack_stack.icl" ]; then
        echo icl/icl_demo_stack_stack.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue.icl" ]; then
        echo icl/icl_demo_queue.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue_queue.icl" ]; then
        echo icl/icl_demo_queue_queue.icl>>_package.lst
    fi
    if [ -f "icl/icl_demo_scope.icl" ]; then
        echo icl/icl_demo_scope.icl>>_package.lst
    fi
    if [ -f "icl/icl_list_lib.gsl" ]; then
        echo icl/icl_list_lib.gsl>>_package.lst
    fi
    if [ -f "icl/icl_list_head.gsl" ]; then
        echo icl/icl_list_head.gsl>>_package.lst
    fi
    if [ -f "icl/icl_iter_list_head.gsl" ]; then
        echo icl/icl_iter_list_head.gsl>>_package.lst
    fi
    if [ -f "icl/icl_hash_head.gsl" ]; then
        echo icl/icl_hash_head.gsl>>_package.lst
    fi
    if [ -f "icl/icl_array_head.gsl" ]; then
        echo icl/icl_array_head.gsl>>_package.lst
    fi
    if [ -f "icl/icl_stack_head.gsl" ]; then
        echo icl/icl_stack_head.gsl>>_package.lst
    fi
    if [ -f "icl/icl_queue_head.gsl" ]; then
        echo icl/icl_queue_head.gsl>>_package.lst
    fi
    if [ -f "icl/icl_serialise.gsl" ]; then
        echo icl/icl_serialise.gsl>>_package.lst
    fi
    if [ -f "icl/icl.h" ]; then
        echo icl/icl.h>>_package.lst
    fi
    if [ -f "icl/icl_prettyc.pl" ]; then
        echo icl/icl_prettyc.pl>>_package.lst
    fi
    if [ -f "icl/icl_make_doc.sh" ]; then
        echo icl/icl_make_doc.sh>>_package.lst
    fi
    if [ -f "icl/icl_make_doc.ignore" ]; then
        echo icl/icl_make_doc.ignore>>_package.lst
    fi
    if [ -f "icl/prelude.pdl" ]; then
        echo icl/prelude.pdl>>_package.lst
    fi
    if [ -f "icl/license.gpl" ]; then
        echo icl/license.gpl>>_package.lst
    fi
    if [ -f "icl/project.pdl" ]; then
        echo icl/project.pdl>>_package.lst
    fi
    if [ -f "icl/readme.txt" ]; then
        echo icl/readme.txt>>_package.lst
    fi
    if [ -f "icl/icl_mutex_test.c" ]; then
        echo icl/icl_mutex_test.c>>_package.lst
    fi
    if [ -f "icl/icl_mutex.h" ]; then
        echo icl/icl_mutex.h>>_package.lst
    fi
    if [ -f "icl/icl_mutex.c" ]; then
        echo icl/icl_mutex.c>>_package.lst
    fi
    if [ -f "icl/icl_cond_test.c" ]; then
        echo icl/icl_cond_test.c>>_package.lst
    fi
    if [ -f "icl/icl_cond.h" ]; then
        echo icl/icl_cond.h>>_package.lst
    fi
    if [ -f "icl/icl_cond.c" ]; then
        echo icl/icl_cond.c>>_package.lst
    fi
    if [ -f "icl/icl_rwlock_test.c" ]; then
        echo icl/icl_rwlock_test.c>>_package.lst
    fi
    if [ -f "icl/icl_rwlock.h" ]; then
        echo icl/icl_rwlock.h>>_package.lst
    fi
    if [ -f "icl/icl_rwlock.c" ]; then
        echo icl/icl_rwlock.c>>_package.lst
    fi
    if [ -f "icl/icl_apr_test.c" ]; then
        echo icl/icl_apr_test.c>>_package.lst
    fi
    if [ -f "icl/icl_apr.h" ]; then
        echo icl/icl_apr.h>>_package.lst
    fi
    if [ -f "icl/icl_apr.c" ]; then
        echo icl/icl_apr.c>>_package.lst
    fi
    if [ -f "icl/icl_stats_test.c" ]; then
        echo icl/icl_stats_test.c>>_package.lst
    fi
    if [ -f "icl/icl_stats.h" ]; then
        echo icl/icl_stats.h>>_package.lst
    fi
    if [ -f "icl/icl_stats.c" ]; then
        echo icl/icl_stats.c>>_package.lst
    fi
    if [ -f "icl/icl_trace_test.c" ]; then
        echo icl/icl_trace_test.c>>_package.lst
    fi
    if [ -f "icl/icl_trace.h" ]; then
        echo icl/icl_trace.h>>_package.lst
    fi
    if [ -f "icl/icl_trace.c" ]; then
        echo icl/icl_trace.c>>_package.lst
    fi
    if [ -f "icl/icl_destroy_test.c" ]; then
        echo icl/icl_destroy_test.c>>_package.lst
    fi
    if [ -f "icl/icl_destroy.h" ]; then
        echo icl/icl_destroy.h>>_package.lst
    fi
    if [ -f "icl/icl_destroy.c" ]; then
        echo icl/icl_destroy.c>>_package.lst
    fi
    if [ -f "icl/icl_destroy_list_test.c" ]; then
        echo icl/icl_destroy_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_destroy_list.h" ]; then
        echo icl/icl_destroy_list.h>>_package.lst
    fi
    if [ -f "icl/icl_destroy_list.c" ]; then
        echo icl/icl_destroy_list.c>>_package.lst
    fi
    if [ -f "icl/icl_system_test.c" ]; then
        echo icl/icl_system_test.c>>_package.lst
    fi
    if [ -f "icl/icl_system.h" ]; then
        echo icl/icl_system.h>>_package.lst
    fi
    if [ -f "icl/icl_system.c" ]; then
        echo icl/icl_system.c>>_package.lst
    fi
    if [ -f "icl/icl_system_list_test.c" ]; then
        echo icl/icl_system_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_system_list.h" ]; then
        echo icl/icl_system_list.h>>_package.lst
    fi
    if [ -f "icl/icl_system_list.c" ]; then
        echo icl/icl_system_list.c>>_package.lst
    fi
    if [ -f "icl/icl_console_test.c" ]; then
        echo icl/icl_console_test.c>>_package.lst
    fi
    if [ -f "icl/icl_console.h" ]; then
        echo icl/icl_console.h>>_package.lst
    fi
    if [ -f "icl/icl_console.c" ]; then
        echo icl/icl_console.c>>_package.lst
    fi
    if [ -f "icl/icl_longstr_test.c" ]; then
        echo icl/icl_longstr_test.c>>_package.lst
    fi
    if [ -f "icl/icl_longstr.h" ]; then
        echo icl/icl_longstr.h>>_package.lst
    fi
    if [ -f "icl/icl_longstr.c" ]; then
        echo icl/icl_longstr.c>>_package.lst
    fi
    if [ -f "icl/icl_shortstr_test.c" ]; then
        echo icl/icl_shortstr_test.c>>_package.lst
    fi
    if [ -f "icl/icl_shortstr.h" ]; then
        echo icl/icl_shortstr.h>>_package.lst
    fi
    if [ -f "icl/icl_shortstr.c" ]; then
        echo icl/icl_shortstr.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_test.c" ]; then
        echo icl/icl_mem_test.c>>_package.lst
    fi
    if [ -f "icl/icl_mem.h" ]; then
        echo icl/icl_mem.h>>_package.lst
    fi
    if [ -f "icl/icl_mem.c" ]; then
        echo icl/icl_mem.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat_test.c" ]; then
        echo icl/icl_mem_fat_test.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat.h" ]; then
        echo icl/icl_mem_fat.h>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat.c" ]; then
        echo icl/icl_mem_fat.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat_list_test.c" ]; then
        echo icl/icl_mem_fat_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat_list.h" ]; then
        echo icl/icl_mem_fat_list.h>>_package.lst
    fi
    if [ -f "icl/icl_mem_fat_list.c" ]; then
        echo icl/icl_mem_fat_list.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin_test.c" ]; then
        echo icl/icl_mem_thin_test.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin.h" ]; then
        echo icl/icl_mem_thin.h>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin.c" ]; then
        echo icl/icl_mem_thin.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin_list_test.c" ]; then
        echo icl/icl_mem_thin_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin_list.h" ]; then
        echo icl/icl_mem_thin_list.h>>_package.lst
    fi
    if [ -f "icl/icl_mem_thin_list.c" ]; then
        echo icl/icl_mem_thin_list.c>>_package.lst
    fi
    if [ -f "icl/icl_cache_test.c" ]; then
        echo icl/icl_cache_test.c>>_package.lst
    fi
    if [ -f "icl/icl_cache.h" ]; then
        echo icl/icl_cache.h>>_package.lst
    fi
    if [ -f "icl/icl_cache.c" ]; then
        echo icl/icl_cache.c>>_package.lst
    fi
    if [ -f "icl/icl_cache_list_test.c" ]; then
        echo icl/icl_cache_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_cache_list.h" ]; then
        echo icl/icl_cache_list.h>>_package.lst
    fi
    if [ -f "icl/icl_cache_list.c" ]; then
        echo icl/icl_cache_list.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_rwlock_test.c" ]; then
        echo icl/icl_demo_rwlock_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_rwlock.h" ]; then
        echo icl/icl_demo_rwlock.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_rwlock.c" ]; then
        echo icl/icl_demo_rwlock.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_thread_test.c" ]; then
        echo icl/icl_demo_thread_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_thread.h" ]; then
        echo icl/icl_demo_thread.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_thread.c" ]; then
        echo icl/icl_demo_thread.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_plain_test.c" ]; then
        echo icl/icl_demo_plain_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_plain.h" ]; then
        echo icl/icl_demo_plain.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_plain.c" ]; then
        echo icl/icl_demo_plain.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_cache_test.c" ]; then
        echo icl/icl_demo_cache_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_cache.h" ]; then
        echo icl/icl_demo_cache.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_cache.c" ]; then
        echo icl/icl_demo_cache.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_local_test.c" ]; then
        echo icl/icl_demo_local_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_local.h" ]; then
        echo icl/icl_demo_local.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_local.c" ]; then
        echo icl/icl_demo_local.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_possess_test.c" ]; then
        echo icl/icl_demo_possess_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_possess.h" ]; then
        echo icl/icl_demo_possess.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_possess.c" ]; then
        echo icl/icl_demo_possess.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_links_test.c" ]; then
        echo icl/icl_demo_links_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_links.h" ]; then
        echo icl/icl_demo_links.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_links.c" ]; then
        echo icl/icl_demo_links.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list_test.c" ]; then
        echo icl/icl_demo_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list.h" ]; then
        echo icl/icl_demo_list.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_list.c" ]; then
        echo icl/icl_demo_list.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list_list_test.c" ]; then
        echo icl/icl_demo_list_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list_list.h" ]; then
        echo icl/icl_demo_list_list.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_list_list.c" ]; then
        echo icl/icl_demo_list_list.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_test.c" ]; then
        echo icl/icl_demo_list2_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2.h" ]; then
        echo icl/icl_demo_list2.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2.c" ]; then
        echo icl/icl_demo_list2.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list_test.c" ]; then
        echo icl/icl_demo_list2_list_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list.h" ]; then
        echo icl/icl_demo_list2_list.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list.c" ]; then
        echo icl/icl_demo_list2_list.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list2_test.c" ]; then
        echo icl/icl_demo_list2_list2_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list2.h" ]; then
        echo icl/icl_demo_list2_list2.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_list2_list2.c" ]; then
        echo icl/icl_demo_list2_list2.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int_test.c" ]; then
        echo icl/icl_demo_hash_int_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int.h" ]; then
        echo icl/icl_demo_hash_int.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int.c" ]; then
        echo icl/icl_demo_hash_int.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int_table_test.c" ]; then
        echo icl/icl_demo_hash_int_table_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int_table.h" ]; then
        echo icl/icl_demo_hash_int_table.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_int_table.c" ]; then
        echo icl/icl_demo_hash_int_table.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str_test.c" ]; then
        echo icl/icl_demo_hash_str_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str.h" ]; then
        echo icl/icl_demo_hash_str.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str.c" ]; then
        echo icl/icl_demo_hash_str.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str_table_test.c" ]; then
        echo icl/icl_demo_hash_str_table_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str_table.h" ]; then
        echo icl/icl_demo_hash_str_table.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_str_table.c" ]; then
        echo icl/icl_demo_hash_str_table.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr_test.c" ]; then
        echo icl/icl_demo_hash_lstr_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr.h" ]; then
        echo icl/icl_demo_hash_lstr.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr.c" ]; then
        echo icl/icl_demo_hash_lstr.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr_table_test.c" ]; then
        echo icl/icl_demo_hash_lstr_table_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr_table.h" ]; then
        echo icl/icl_demo_hash_lstr_table.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_hash_lstr_table.c" ]; then
        echo icl/icl_demo_hash_lstr_table.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_serial_test.c" ]; then
        echo icl/icl_demo_serial_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_serial.h" ]; then
        echo icl/icl_demo_serial.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_serial.c" ]; then
        echo icl/icl_demo_serial.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_array_test.c" ]; then
        echo icl/icl_demo_array_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_array.h" ]; then
        echo icl/icl_demo_array.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_array.c" ]; then
        echo icl/icl_demo_array.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_array_array_test.c" ]; then
        echo icl/icl_demo_array_array_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_array_array.h" ]; then
        echo icl/icl_demo_array_array.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_array_array.c" ]; then
        echo icl/icl_demo_array_array.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack_test.c" ]; then
        echo icl/icl_demo_stack_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack.h" ]; then
        echo icl/icl_demo_stack.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack.c" ]; then
        echo icl/icl_demo_stack.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack_stack_test.c" ]; then
        echo icl/icl_demo_stack_stack_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack_stack.h" ]; then
        echo icl/icl_demo_stack_stack.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_stack_stack.c" ]; then
        echo icl/icl_demo_stack_stack.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue_test.c" ]; then
        echo icl/icl_demo_queue_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue.h" ]; then
        echo icl/icl_demo_queue.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue.c" ]; then
        echo icl/icl_demo_queue.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue_queue_test.c" ]; then
        echo icl/icl_demo_queue_queue_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue_queue.h" ]; then
        echo icl/icl_demo_queue_queue.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_queue_queue.c" ]; then
        echo icl/icl_demo_queue_queue.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_scope_test.c" ]; then
        echo icl/icl_demo_scope_test.c>>_package.lst
    fi
    if [ -f "icl/icl_demo_scope.h" ]; then
        echo icl/icl_demo_scope.h>>_package.lst
    fi
    if [ -f "icl/icl_demo_scope.c" ]; then
        echo icl/icl_demo_scope.c>>_package.lst
    fi
    if [ -f "icl/stamp_generate" ]; then
        echo icl/stamp_generate>>_package.lst
    fi
    if [ -f "icl/boomakew.bat" ]; then
        echo icl/boomakew.bat>>_package.lst
    fi
    if [ -f "icl/configure" ]; then
        echo icl/configure>>_package.lst
    fi
    if [ -f "icl/Makefile.unix" ]; then
        echo icl/Makefile.unix>>_package.lst
    fi
    if [ -f "icl/boomake" ]; then
        echo icl/boomake>>_package.lst
    fi
    if [ -f "icl/configure.bat" ]; then
        echo icl/configure.bat>>_package.lst
    fi
    if [ -f "icl/Makefile.win32" ]; then
        echo icl/Makefile.win32>>_package.lst
    fi
    if [ -f "icl/boomake.bat" ]; then
        echo icl/boomake.bat>>_package.lst
    fi
    if [ -f "icl/libicl.vcproj" ]; then
        echo icl/libicl.vcproj>>_package.lst
    fi
    PUSHDIR=`pwd`
    cd ipr
    cd $PUSHDIR
    if [ -f "ipr/version.h" ]; then
        echo ipr/version.h>>_package.lst
    fi
    if [ -f "ipr/ipr_bits.icl" ]; then
        echo ipr/ipr_bits.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket.icl" ]; then
        echo ipr/ipr_bucket.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket_list.icl" ]; then
        echo ipr/ipr_bucket_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_mother.icl" ]; then
        echo ipr/ipr_mother.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_config.icl" ]; then
        echo ipr/ipr_config.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_crc.icl" ]; then
        echo ipr/ipr_crc.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_dict.icl" ]; then
        echo ipr/ipr_dict.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_table.icl" ]; then
        echo ipr/ipr_dict_table.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_list.icl" ]; then
        echo ipr/ipr_dict_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol.icl" ]; then
        echo ipr/ipr_symbol.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol_table.icl" ]; then
        echo ipr/ipr_symbol_table.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_dir.icl" ]; then
        echo ipr/ipr_dir.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_file.icl" ]; then
        echo ipr/ipr_file.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo.icl" ]; then
        echo ipr/ipr_finfo.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo_list.icl" ]; then
        echo ipr/ipr_finfo_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_hash.icl" ]; then
        echo ipr/ipr_hash.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_hash_table.icl" ]; then
        echo ipr/ipr_hash_table.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_http.icl" ]; then
        echo ipr/ipr_http.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_index.icl" ]; then
        echo ipr/ipr_index.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_log.icl" ]; then
        echo ipr/ipr_log.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref.icl" ]; then
        echo ipr/ipr_looseref.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref_list.icl" ]; then
        echo ipr/ipr_looseref_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_token.icl" ]; then
        echo ipr/ipr_token.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_token_list.icl" ]; then
        echo ipr/ipr_token_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_meter.icl" ]; then
        echo ipr/ipr_meter.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_net.icl" ]; then
        echo ipr/ipr_net.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce.icl" ]; then
        echo ipr/ipr_nonce.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce_table.icl" ]; then
        echo ipr/ipr_nonce_table.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_password.icl" ]; then
        echo ipr/ipr_password.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_password_table.icl" ]; then
        echo ipr/ipr_password_table.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_password_list.icl" ]; then
        echo ipr/ipr_password_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_path.icl" ]; then
        echo ipr/ipr_path.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_process.icl" ]; then
        echo ipr/ipr_process.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_regexp.icl" ]; then
        echo ipr/ipr_regexp.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_sasl.icl" ]; then
        echo ipr/ipr_sasl.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_stat.icl" ]; then
        echo ipr/ipr_stat.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_str.icl" ]; then
        echo ipr/ipr_str.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_uid.icl" ]; then
        echo ipr/ipr_uid.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_time.icl" ]; then
        echo ipr/ipr_time.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_tree.icl" ]; then
        echo ipr/ipr_tree.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_xml.icl" ]; then
        echo ipr/ipr_xml.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_list.icl" ]; then
        echo ipr/ipr_xml_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr.icl" ]; then
        echo ipr/ipr_xml_attr.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr_list.icl" ]; then
        echo ipr/ipr_xml_attr_list.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_xmll.h" ]; then
        echo ipr/ipr_xmll.h>>_package.lst
    fi
    if [ -f "ipr/ipr_xmll.c" ]; then
        echo ipr/ipr_xmll.c>>_package.lst
    fi
    if [ -f "ipr/ipr_portal.icl" ]; then
        echo ipr/ipr_portal.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_portal.gsl" ]; then
        echo ipr/ipr_portal.gsl>>_package.lst
    fi
    if [ -f "ipr/ipr_portal_sync.gsl" ]; then
        echo ipr/ipr_portal_sync.gsl>>_package.lst
    fi
    if [ -f "ipr/ipr_portal_async.gsl" ]; then
        echo ipr/ipr_portal_async.gsl>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal.icl" ]; then
        echo ipr/ipr_demo_portal.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_client.icl" ]; then
        echo ipr/ipr_demo_portal_client.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_server.icl" ]; then
        echo ipr/ipr_demo_portal_server.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_front.icl" ]; then
        echo ipr/ipr_demo_portal_front.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_back.icl" ]; then
        echo ipr/ipr_demo_portal_back.icl>>_package.lst
    fi
    if [ -f "ipr/ipr_config_test1.xml" ]; then
        echo ipr/ipr_config_test1.xml>>_package.lst
    fi
    if [ -f "ipr/ipr_config_test2.xml" ]; then
        echo ipr/ipr_config_test2.xml>>_package.lst
    fi
    if [ -f "ipr/ipr_config_test3.xml" ]; then
        echo ipr/ipr_config_test3.xml>>_package.lst
    fi
    if [ -f "ipr/ipr.h" ]; then
        echo ipr/ipr.h>>_package.lst
    fi
    if [ -f "ipr/ipr_classes.pdl" ]; then
        echo ipr/ipr_classes.pdl>>_package.lst
    fi
    if [ -f "ipr/ipr_resource.pl" ]; then
        echo ipr/ipr_resource.pl>>_package.lst
    fi
    if [ -f "ipr/prelude.pdl" ]; then
        echo ipr/prelude.pdl>>_package.lst
    fi
    if [ -f "ipr/license.gpl" ]; then
        echo ipr/license.gpl>>_package.lst
    fi
    if [ -f "ipr/project.pdl" ]; then
        echo ipr/project.pdl>>_package.lst
    fi
    if [ -f "ipr/readme.txt" ]; then
        echo ipr/readme.txt>>_package.lst
    fi
    if [ -f "ipr/ipr_bits_test.c" ]; then
        echo ipr/ipr_bits_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_bits.h" ]; then
        echo ipr/ipr_bits.h>>_package.lst
    fi
    if [ -f "ipr/ipr_bits.c" ]; then
        echo ipr/ipr_bits.c>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket_test.c" ]; then
        echo ipr/ipr_bucket_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket.h" ]; then
        echo ipr/ipr_bucket.h>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket.c" ]; then
        echo ipr/ipr_bucket.c>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket_list_test.c" ]; then
        echo ipr/ipr_bucket_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket_list.h" ]; then
        echo ipr/ipr_bucket_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_bucket_list.c" ]; then
        echo ipr/ipr_bucket_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_mother_test.c" ]; then
        echo ipr/ipr_mother_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_mother.h" ]; then
        echo ipr/ipr_mother.h>>_package.lst
    fi
    if [ -f "ipr/ipr_mother.c" ]; then
        echo ipr/ipr_mother.c>>_package.lst
    fi
    if [ -f "ipr/ipr_config_test.c" ]; then
        echo ipr/ipr_config_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_config.h" ]; then
        echo ipr/ipr_config.h>>_package.lst
    fi
    if [ -f "ipr/ipr_config.c" ]; then
        echo ipr/ipr_config.c>>_package.lst
    fi
    if [ -f "ipr/ipr_crc_test.c" ]; then
        echo ipr/ipr_crc_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_crc.h" ]; then
        echo ipr/ipr_crc.h>>_package.lst
    fi
    if [ -f "ipr/ipr_crc.c" ]; then
        echo ipr/ipr_crc.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_test.c" ]; then
        echo ipr/ipr_dict_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dict.h" ]; then
        echo ipr/ipr_dict.h>>_package.lst
    fi
    if [ -f "ipr/ipr_dict.c" ]; then
        echo ipr/ipr_dict.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_table_test.c" ]; then
        echo ipr/ipr_dict_table_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_table.h" ]; then
        echo ipr/ipr_dict_table.h>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_table.c" ]; then
        echo ipr/ipr_dict_table.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_list_test.c" ]; then
        echo ipr/ipr_dict_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_list.h" ]; then
        echo ipr/ipr_dict_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_dict_list.c" ]; then
        echo ipr/ipr_dict_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol_test.c" ]; then
        echo ipr/ipr_symbol_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol.h" ]; then
        echo ipr/ipr_symbol.h>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol.c" ]; then
        echo ipr/ipr_symbol.c>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol_table_test.c" ]; then
        echo ipr/ipr_symbol_table_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol_table.h" ]; then
        echo ipr/ipr_symbol_table.h>>_package.lst
    fi
    if [ -f "ipr/ipr_symbol_table.c" ]; then
        echo ipr/ipr_symbol_table.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dir_test.c" ]; then
        echo ipr/ipr_dir_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_dir.h" ]; then
        echo ipr/ipr_dir.h>>_package.lst
    fi
    if [ -f "ipr/ipr_dir.c" ]; then
        echo ipr/ipr_dir.c>>_package.lst
    fi
    if [ -f "ipr/ipr_file_test.c" ]; then
        echo ipr/ipr_file_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_file.h" ]; then
        echo ipr/ipr_file.h>>_package.lst
    fi
    if [ -f "ipr/ipr_file.c" ]; then
        echo ipr/ipr_file.c>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo_test.c" ]; then
        echo ipr/ipr_finfo_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo.h" ]; then
        echo ipr/ipr_finfo.h>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo.c" ]; then
        echo ipr/ipr_finfo.c>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo_list_test.c" ]; then
        echo ipr/ipr_finfo_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo_list.h" ]; then
        echo ipr/ipr_finfo_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_finfo_list.c" ]; then
        echo ipr/ipr_finfo_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_hash_test.c" ]; then
        echo ipr/ipr_hash_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_hash.h" ]; then
        echo ipr/ipr_hash.h>>_package.lst
    fi
    if [ -f "ipr/ipr_hash.c" ]; then
        echo ipr/ipr_hash.c>>_package.lst
    fi
    if [ -f "ipr/ipr_hash_table_test.c" ]; then
        echo ipr/ipr_hash_table_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_hash_table.h" ]; then
        echo ipr/ipr_hash_table.h>>_package.lst
    fi
    if [ -f "ipr/ipr_hash_table.c" ]; then
        echo ipr/ipr_hash_table.c>>_package.lst
    fi
    if [ -f "ipr/ipr_http_test.c" ]; then
        echo ipr/ipr_http_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_http.h" ]; then
        echo ipr/ipr_http.h>>_package.lst
    fi
    if [ -f "ipr/ipr_http.c" ]; then
        echo ipr/ipr_http.c>>_package.lst
    fi
    if [ -f "ipr/ipr_index_test.c" ]; then
        echo ipr/ipr_index_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_index.h" ]; then
        echo ipr/ipr_index.h>>_package.lst
    fi
    if [ -f "ipr/ipr_index.c" ]; then
        echo ipr/ipr_index.c>>_package.lst
    fi
    if [ -f "ipr/ipr_log_test.c" ]; then
        echo ipr/ipr_log_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_log.h" ]; then
        echo ipr/ipr_log.h>>_package.lst
    fi
    if [ -f "ipr/ipr_log.c" ]; then
        echo ipr/ipr_log.c>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref_test.c" ]; then
        echo ipr/ipr_looseref_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref.h" ]; then
        echo ipr/ipr_looseref.h>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref.c" ]; then
        echo ipr/ipr_looseref.c>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref_list_test.c" ]; then
        echo ipr/ipr_looseref_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref_list.h" ]; then
        echo ipr/ipr_looseref_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_looseref_list.c" ]; then
        echo ipr/ipr_looseref_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_token_test.c" ]; then
        echo ipr/ipr_token_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_token.h" ]; then
        echo ipr/ipr_token.h>>_package.lst
    fi
    if [ -f "ipr/ipr_token.c" ]; then
        echo ipr/ipr_token.c>>_package.lst
    fi
    if [ -f "ipr/ipr_token_list_test.c" ]; then
        echo ipr/ipr_token_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_token_list.h" ]; then
        echo ipr/ipr_token_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_token_list.c" ]; then
        echo ipr/ipr_token_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_meter_test.c" ]; then
        echo ipr/ipr_meter_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_meter.h" ]; then
        echo ipr/ipr_meter.h>>_package.lst
    fi
    if [ -f "ipr/ipr_meter.c" ]; then
        echo ipr/ipr_meter.c>>_package.lst
    fi
    if [ -f "ipr/ipr_net_test.c" ]; then
        echo ipr/ipr_net_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_net.h" ]; then
        echo ipr/ipr_net.h>>_package.lst
    fi
    if [ -f "ipr/ipr_net.c" ]; then
        echo ipr/ipr_net.c>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce_test.c" ]; then
        echo ipr/ipr_nonce_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce.h" ]; then
        echo ipr/ipr_nonce.h>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce.c" ]; then
        echo ipr/ipr_nonce.c>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce_table_test.c" ]; then
        echo ipr/ipr_nonce_table_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce_table.h" ]; then
        echo ipr/ipr_nonce_table.h>>_package.lst
    fi
    if [ -f "ipr/ipr_nonce_table.c" ]; then
        echo ipr/ipr_nonce_table.c>>_package.lst
    fi
    if [ -f "ipr/ipr_password_test.c" ]; then
        echo ipr/ipr_password_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_password.h" ]; then
        echo ipr/ipr_password.h>>_package.lst
    fi
    if [ -f "ipr/ipr_password.c" ]; then
        echo ipr/ipr_password.c>>_package.lst
    fi
    if [ -f "ipr/ipr_password_table_test.c" ]; then
        echo ipr/ipr_password_table_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_password_table.h" ]; then
        echo ipr/ipr_password_table.h>>_package.lst
    fi
    if [ -f "ipr/ipr_password_table.c" ]; then
        echo ipr/ipr_password_table.c>>_package.lst
    fi
    if [ -f "ipr/ipr_password_list_test.c" ]; then
        echo ipr/ipr_password_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_password_list.h" ]; then
        echo ipr/ipr_password_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_password_list.c" ]; then
        echo ipr/ipr_password_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_path_test.c" ]; then
        echo ipr/ipr_path_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_path.h" ]; then
        echo ipr/ipr_path.h>>_package.lst
    fi
    if [ -f "ipr/ipr_path.c" ]; then
        echo ipr/ipr_path.c>>_package.lst
    fi
    if [ -f "ipr/ipr_process_test.c" ]; then
        echo ipr/ipr_process_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_process.h" ]; then
        echo ipr/ipr_process.h>>_package.lst
    fi
    if [ -f "ipr/ipr_process.c" ]; then
        echo ipr/ipr_process.c>>_package.lst
    fi
    if [ -f "ipr/ipr_regexp_test.c" ]; then
        echo ipr/ipr_regexp_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_regexp.h" ]; then
        echo ipr/ipr_regexp.h>>_package.lst
    fi
    if [ -f "ipr/ipr_regexp.c" ]; then
        echo ipr/ipr_regexp.c>>_package.lst
    fi
    if [ -f "ipr/ipr_sasl_test.c" ]; then
        echo ipr/ipr_sasl_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_sasl.h" ]; then
        echo ipr/ipr_sasl.h>>_package.lst
    fi
    if [ -f "ipr/ipr_sasl.c" ]; then
        echo ipr/ipr_sasl.c>>_package.lst
    fi
    if [ -f "ipr/ipr_stat_test.c" ]; then
        echo ipr/ipr_stat_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_stat.h" ]; then
        echo ipr/ipr_stat.h>>_package.lst
    fi
    if [ -f "ipr/ipr_stat.c" ]; then
        echo ipr/ipr_stat.c>>_package.lst
    fi
    if [ -f "ipr/ipr_str_test.c" ]; then
        echo ipr/ipr_str_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_str.h" ]; then
        echo ipr/ipr_str.h>>_package.lst
    fi
    if [ -f "ipr/ipr_str.c" ]; then
        echo ipr/ipr_str.c>>_package.lst
    fi
    if [ -f "ipr/ipr_uid_test.c" ]; then
        echo ipr/ipr_uid_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_uid.h" ]; then
        echo ipr/ipr_uid.h>>_package.lst
    fi
    if [ -f "ipr/ipr_uid.c" ]; then
        echo ipr/ipr_uid.c>>_package.lst
    fi
    if [ -f "ipr/ipr_time_test.c" ]; then
        echo ipr/ipr_time_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_time.h" ]; then
        echo ipr/ipr_time.h>>_package.lst
    fi
    if [ -f "ipr/ipr_time.c" ]; then
        echo ipr/ipr_time.c>>_package.lst
    fi
    if [ -f "ipr/ipr_tree_test.c" ]; then
        echo ipr/ipr_tree_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_tree.h" ]; then
        echo ipr/ipr_tree.h>>_package.lst
    fi
    if [ -f "ipr/ipr_tree.c" ]; then
        echo ipr/ipr_tree.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_test.c" ]; then
        echo ipr/ipr_xml_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml.h" ]; then
        echo ipr/ipr_xml.h>>_package.lst
    fi
    if [ -f "ipr/ipr_xml.c" ]; then
        echo ipr/ipr_xml.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_list_test.c" ]; then
        echo ipr/ipr_xml_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_list.h" ]; then
        echo ipr/ipr_xml_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_list.c" ]; then
        echo ipr/ipr_xml_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr_test.c" ]; then
        echo ipr/ipr_xml_attr_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr.h" ]; then
        echo ipr/ipr_xml_attr.h>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr.c" ]; then
        echo ipr/ipr_xml_attr.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr_list_test.c" ]; then
        echo ipr/ipr_xml_attr_list_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr_list.h" ]; then
        echo ipr/ipr_xml_attr_list.h>>_package.lst
    fi
    if [ -f "ipr/ipr_xml_attr_list.c" ]; then
        echo ipr/ipr_xml_attr_list.c>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_test.c" ]; then
        echo ipr/ipr_demo_portal_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal.h" ]; then
        echo ipr/ipr_demo_portal.h>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal.c" ]; then
        echo ipr/ipr_demo_portal.c>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_client_test.c" ]; then
        echo ipr/ipr_demo_portal_client_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_client.h" ]; then
        echo ipr/ipr_demo_portal_client.h>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_client.c" ]; then
        echo ipr/ipr_demo_portal_client.c>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_server_test.c" ]; then
        echo ipr/ipr_demo_portal_server_test.c>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_server.h" ]; then
        echo ipr/ipr_demo_portal_server.h>>_package.lst
    fi
    if [ -f "ipr/ipr_demo_portal_server.c" ]; then
        echo ipr/ipr_demo_portal_server.c>>_package.lst
    fi
    if [ -f "ipr/stamp_generate" ]; then
        echo ipr/stamp_generate>>_package.lst
    fi
    if [ -f "ipr/boomakew.bat" ]; then
        echo ipr/boomakew.bat>>_package.lst
    fi
    if [ -f "ipr/configure" ]; then
        echo ipr/configure>>_package.lst
    fi
    if [ -f "ipr/Makefile.unix" ]; then
        echo ipr/Makefile.unix>>_package.lst
    fi
    if [ -f "ipr/boomake" ]; then
        echo ipr/boomake>>_package.lst
    fi
    if [ -f "ipr/configure.bat" ]; then
        echo ipr/configure.bat>>_package.lst
    fi
    if [ -f "ipr/Makefile.win32" ]; then
        echo ipr/Makefile.win32>>_package.lst
    fi
    if [ -f "ipr/boomake.bat" ]; then
        echo ipr/boomake.bat>>_package.lst
    fi
    if [ -f "ipr/libipr.vcproj" ]; then
        echo ipr/libipr.vcproj>>_package.lst
    fi
    PUSHDIR=`pwd`
    cd smt
    cd $PUSHDIR
    if [ -f "smt/version.h" ]; then
        echo smt/version.h>>_package.lst
    fi
    if [ -f "smt/icl_smt.gsl" ]; then
        echo smt/icl_smt.gsl>>_package.lst
    fi
    if [ -f "smt/smt_object.xnf" ]; then
        echo smt/smt_object.xnf>>_package.lst
    fi
    if [ -f "smt/smt_object.icl" ]; then
        echo smt/smt_object.icl>>_package.lst
    fi
    if [ -f "smt/smt_object_gen.gsl" ]; then
        echo smt/smt_object_gen.gsl>>_package.lst
    fi
    if [ -f "smt/smt_object_preproc.gsl" ]; then
        echo smt/smt_object_preproc.gsl>>_package.lst
    fi
    if [ -f "smt/smt_object_inherit.gsl" ]; then
        echo smt/smt_object_inherit.gsl>>_package.lst
    fi
    if [ -f "smt/smt_object_parse.gsl" ]; then
        echo smt/smt_object_parse.gsl>>_package.lst
    fi
    if [ -f "smt/smt_object_doc.txt" ]; then
        echo smt/smt_object_doc.txt>>_package.lst
    fi
    if [ -f "smt/smt_object_tracker.icl" ]; then
        echo smt/smt_object_tracker.icl>>_package.lst
    fi
    if [ -f "smt/smt.xnf" ]; then
        echo smt/smt.xnf>>_package.lst
    fi
    if [ -f "smt/smt_gen.gsl" ]; then
        echo smt/smt_gen.gsl>>_package.lst
    fi
    if [ -f "smt/smt_preproc.gsl" ]; then
        echo smt/smt_preproc.gsl>>_package.lst
    fi
    if [ -f "smt/smt_inherit.gsl" ]; then
        echo smt/smt_inherit.gsl>>_package.lst
    fi
    if [ -f "smt/smt_parse.gsl" ]; then
        echo smt/smt_parse.gsl>>_package.lst
    fi
    if [ -f "smt/smt_doc.txt" ]; then
        echo smt/smt_doc.txt>>_package.lst
    fi
    if [ -f "smt/smt_stdc.gsl" ]; then
        echo smt/smt_stdc.gsl>>_package.lst
    fi
    if [ -f "smt/smt_doc.gsl" ]; then
        echo smt/smt_doc.gsl>>_package.lst
    fi
    if [ -f "smt/smt_classes.pdl" ]; then
        echo smt/smt_classes.pdl>>_package.lst
    fi
    if [ -f "smt/smt_method.icl" ]; then
        echo smt/smt_method.icl>>_package.lst
    fi
    if [ -f "smt/smt_method_queue.icl" ]; then
        echo smt/smt_method_queue.icl>>_package.lst
    fi
    if [ -f "smt/smt_method_list.icl" ]; then
        echo smt/smt_method_list.icl>>_package.lst
    fi
    if [ -f "smt/smt_os_thread.icl" ]; then
        echo smt/smt_os_thread.icl>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_by_status.icl" ]; then
        echo smt/smt_os_thread_by_status.icl>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_list.icl" ]; then
        echo smt/smt_os_thread_list.icl>>_package.lst
    fi
    if [ -f "smt/smt_thread.icl" ]; then
        echo smt/smt_thread.icl>>_package.lst
    fi
    if [ -f "smt/smt_thread_by_status.icl" ]; then
        echo smt/smt_thread_by_status.icl>>_package.lst
    fi
    if [ -f "smt/smt_thread_list.icl" ]; then
        echo smt/smt_thread_list.icl>>_package.lst
    fi
    if [ -f "smt/smt_thread_queue.icl" ]; then
        echo smt/smt_thread_queue.icl>>_package.lst
    fi
    if [ -f "smt/smt_fileio.icl" ]; then
        echo smt/smt_fileio.icl>>_package.lst
    fi
    if [ -f "smt/smt_fileio_request.icl" ]; then
        echo smt/smt_fileio_request.icl>>_package.lst
    fi
    if [ -f "smt/smt_timer_request.icl" ]; then
        echo smt/smt_timer_request.icl>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_list.icl" ]; then
        echo smt/smt_timer_request_list.icl>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_by_thread.icl" ]; then
        echo smt/smt_timer_request_by_thread.icl>>_package.lst
    fi
    if [ -f "smt/smt_socket.icl" ]; then
        echo smt/smt_socket.icl>>_package.lst
    fi
    if [ -f "smt/smt_socket_request.icl" ]; then
        echo smt/smt_socket_request.icl>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_thread.icl" ]; then
        echo smt/smt_socket_request_by_thread.icl>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_socket.icl" ]; then
        echo smt/smt_socket_request_by_socket.icl>>_package.lst
    fi
    if [ -f "smt/smt_position.icl" ]; then
        echo smt/smt_position.icl>>_package.lst
    fi
    if [ -f "smt/smt_position_list.icl" ]; then
        echo smt/smt_position_list.icl>>_package.lst
    fi
    if [ -f "smt/smt_signal.icl" ]; then
        echo smt/smt_signal.icl>>_package.lst
    fi
    if [ -f "smt/smt_signal_table.icl" ]; then
        echo smt/smt_signal_table.icl>>_package.lst
    fi
    if [ -f "smt/smt_signal_by_thread.icl" ]; then
        echo smt/smt_signal_by_thread.icl>>_package.lst
    fi
    if [ -f "smt/smt_coremark.icl" ]; then
        echo smt/smt_coremark.icl>>_package.lst
    fi
    if [ -f "smt/smt_log.icl" ]; then
        echo smt/smt_log.icl>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal.icl" ]; then
        echo smt/smt_demo_portal.icl>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_client.icl" ]; then
        echo smt/smt_demo_portal_client.icl>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_server.icl" ]; then
        echo smt/smt_demo_portal_server.icl>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_front.icl" ]; then
        echo smt/smt_demo_portal_front.icl>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_back.icl" ]; then
        echo smt/smt_demo_portal_back.icl>>_package.lst
    fi
    if [ -f "smt/smt_echo.smt" ]; then
        echo smt/smt_echo.smt>>_package.lst
    fi
    if [ -f "smt/tstnull.smt" ]; then
        echo smt/tstnull.smt>>_package.lst
    fi
    if [ -f "smt/tstsock.smt" ]; then
        echo smt/tstsock.smt>>_package.lst
    fi
    if [ -f "smt/smt_demo_timer.smt" ]; then
        echo smt/smt_demo_timer.smt>>_package.lst
    fi
    if [ -f "smt/smt_demo_object.icl" ]; then
        echo smt/smt_demo_object.icl>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_action.icl" ]; then
        echo smt/smt_demo_object_action.icl>>_package.lst
    fi
    if [ -f "smt/smt_demo_server.smt" ]; then
        echo smt/smt_demo_server.smt>>_package.lst
    fi
    if [ -f "smt/smt_demo_client.smt" ]; then
        echo smt/smt_demo_client.smt>>_package.lst
    fi
    if [ -f "smt/smt.h" ]; then
        echo smt/smt.h>>_package.lst
    fi
    if [ -f "smt/icl_make_doc.ignore" ]; then
        echo smt/icl_make_doc.ignore>>_package.lst
    fi
    if [ -f "smt/prelude.pdl" ]; then
        echo smt/prelude.pdl>>_package.lst
    fi
    if [ -f "smt/license.gpl" ]; then
        echo smt/license.gpl>>_package.lst
    fi
    if [ -f "smt/project.pdl" ]; then
        echo smt/project.pdl>>_package.lst
    fi
    if [ -f "smt/readme.txt" ]; then
        echo smt/readme.txt>>_package.lst
    fi
    if [ -f "smt/smt_method_test.c" ]; then
        echo smt/smt_method_test.c>>_package.lst
    fi
    if [ -f "smt/smt_method.h" ]; then
        echo smt/smt_method.h>>_package.lst
    fi
    if [ -f "smt/smt_method.c" ]; then
        echo smt/smt_method.c>>_package.lst
    fi
    if [ -f "smt/smt_method_queue_test.c" ]; then
        echo smt/smt_method_queue_test.c>>_package.lst
    fi
    if [ -f "smt/smt_method_queue.h" ]; then
        echo smt/smt_method_queue.h>>_package.lst
    fi
    if [ -f "smt/smt_method_queue.c" ]; then
        echo smt/smt_method_queue.c>>_package.lst
    fi
    if [ -f "smt/smt_method_list_test.c" ]; then
        echo smt/smt_method_list_test.c>>_package.lst
    fi
    if [ -f "smt/smt_method_list.h" ]; then
        echo smt/smt_method_list.h>>_package.lst
    fi
    if [ -f "smt/smt_method_list.c" ]; then
        echo smt/smt_method_list.c>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_test.c" ]; then
        echo smt/smt_os_thread_test.c>>_package.lst
    fi
    if [ -f "smt/smt_os_thread.h" ]; then
        echo smt/smt_os_thread.h>>_package.lst
    fi
    if [ -f "smt/smt_os_thread.c" ]; then
        echo smt/smt_os_thread.c>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_by_status_test.c" ]; then
        echo smt/smt_os_thread_by_status_test.c>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_by_status.h" ]; then
        echo smt/smt_os_thread_by_status.h>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_by_status.c" ]; then
        echo smt/smt_os_thread_by_status.c>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_list_test.c" ]; then
        echo smt/smt_os_thread_list_test.c>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_list.h" ]; then
        echo smt/smt_os_thread_list.h>>_package.lst
    fi
    if [ -f "smt/smt_os_thread_list.c" ]; then
        echo smt/smt_os_thread_list.c>>_package.lst
    fi
    if [ -f "smt/smt_thread_test.c" ]; then
        echo smt/smt_thread_test.c>>_package.lst
    fi
    if [ -f "smt/smt_thread.h" ]; then
        echo smt/smt_thread.h>>_package.lst
    fi
    if [ -f "smt/smt_thread.c" ]; then
        echo smt/smt_thread.c>>_package.lst
    fi
    if [ -f "smt/smt_thread_by_status_test.c" ]; then
        echo smt/smt_thread_by_status_test.c>>_package.lst
    fi
    if [ -f "smt/smt_thread_by_status.h" ]; then
        echo smt/smt_thread_by_status.h>>_package.lst
    fi
    if [ -f "smt/smt_thread_by_status.c" ]; then
        echo smt/smt_thread_by_status.c>>_package.lst
    fi
    if [ -f "smt/smt_thread_list_test.c" ]; then
        echo smt/smt_thread_list_test.c>>_package.lst
    fi
    if [ -f "smt/smt_thread_list.h" ]; then
        echo smt/smt_thread_list.h>>_package.lst
    fi
    if [ -f "smt/smt_thread_list.c" ]; then
        echo smt/smt_thread_list.c>>_package.lst
    fi
    if [ -f "smt/smt_thread_queue_test.c" ]; then
        echo smt/smt_thread_queue_test.c>>_package.lst
    fi
    if [ -f "smt/smt_thread_queue.h" ]; then
        echo smt/smt_thread_queue.h>>_package.lst
    fi
    if [ -f "smt/smt_thread_queue.c" ]; then
        echo smt/smt_thread_queue.c>>_package.lst
    fi
    if [ -f "smt/smt_fileio_test.c" ]; then
        echo smt/smt_fileio_test.c>>_package.lst
    fi
    if [ -f "smt/smt_fileio.h" ]; then
        echo smt/smt_fileio.h>>_package.lst
    fi
    if [ -f "smt/smt_fileio.c" ]; then
        echo smt/smt_fileio.c>>_package.lst
    fi
    if [ -f "smt/smt_fileio_request_test.c" ]; then
        echo smt/smt_fileio_request_test.c>>_package.lst
    fi
    if [ -f "smt/smt_fileio_request.h" ]; then
        echo smt/smt_fileio_request.h>>_package.lst
    fi
    if [ -f "smt/smt_fileio_request.c" ]; then
        echo smt/smt_fileio_request.c>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_test.c" ]; then
        echo smt/smt_timer_request_test.c>>_package.lst
    fi
    if [ -f "smt/smt_timer_request.h" ]; then
        echo smt/smt_timer_request.h>>_package.lst
    fi
    if [ -f "smt/smt_timer_request.c" ]; then
        echo smt/smt_timer_request.c>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_list_test.c" ]; then
        echo smt/smt_timer_request_list_test.c>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_list.h" ]; then
        echo smt/smt_timer_request_list.h>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_list.c" ]; then
        echo smt/smt_timer_request_list.c>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_by_thread_test.c" ]; then
        echo smt/smt_timer_request_by_thread_test.c>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_by_thread.h" ]; then
        echo smt/smt_timer_request_by_thread.h>>_package.lst
    fi
    if [ -f "smt/smt_timer_request_by_thread.c" ]; then
        echo smt/smt_timer_request_by_thread.c>>_package.lst
    fi
    if [ -f "smt/smt_socket_test.c" ]; then
        echo smt/smt_socket_test.c>>_package.lst
    fi
    if [ -f "smt/smt_socket.h" ]; then
        echo smt/smt_socket.h>>_package.lst
    fi
    if [ -f "smt/smt_socket.c" ]; then
        echo smt/smt_socket.c>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_test.c" ]; then
        echo smt/smt_socket_request_test.c>>_package.lst
    fi
    if [ -f "smt/smt_socket_request.h" ]; then
        echo smt/smt_socket_request.h>>_package.lst
    fi
    if [ -f "smt/smt_socket_request.c" ]; then
        echo smt/smt_socket_request.c>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_thread_test.c" ]; then
        echo smt/smt_socket_request_by_thread_test.c>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_thread.h" ]; then
        echo smt/smt_socket_request_by_thread.h>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_thread.c" ]; then
        echo smt/smt_socket_request_by_thread.c>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_socket_test.c" ]; then
        echo smt/smt_socket_request_by_socket_test.c>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_socket.h" ]; then
        echo smt/smt_socket_request_by_socket.h>>_package.lst
    fi
    if [ -f "smt/smt_socket_request_by_socket.c" ]; then
        echo smt/smt_socket_request_by_socket.c>>_package.lst
    fi
    if [ -f "smt/smt_position_test.c" ]; then
        echo smt/smt_position_test.c>>_package.lst
    fi
    if [ -f "smt/smt_position.h" ]; then
        echo smt/smt_position.h>>_package.lst
    fi
    if [ -f "smt/smt_position.c" ]; then
        echo smt/smt_position.c>>_package.lst
    fi
    if [ -f "smt/smt_position_list_test.c" ]; then
        echo smt/smt_position_list_test.c>>_package.lst
    fi
    if [ -f "smt/smt_position_list.h" ]; then
        echo smt/smt_position_list.h>>_package.lst
    fi
    if [ -f "smt/smt_position_list.c" ]; then
        echo smt/smt_position_list.c>>_package.lst
    fi
    if [ -f "smt/smt_signal_test.c" ]; then
        echo smt/smt_signal_test.c>>_package.lst
    fi
    if [ -f "smt/smt_signal.h" ]; then
        echo smt/smt_signal.h>>_package.lst
    fi
    if [ -f "smt/smt_signal.c" ]; then
        echo smt/smt_signal.c>>_package.lst
    fi
    if [ -f "smt/smt_signal_table_test.c" ]; then
        echo smt/smt_signal_table_test.c>>_package.lst
    fi
    if [ -f "smt/smt_signal_table.h" ]; then
        echo smt/smt_signal_table.h>>_package.lst
    fi
    if [ -f "smt/smt_signal_table.c" ]; then
        echo smt/smt_signal_table.c>>_package.lst
    fi
    if [ -f "smt/smt_signal_by_thread_test.c" ]; then
        echo smt/smt_signal_by_thread_test.c>>_package.lst
    fi
    if [ -f "smt/smt_signal_by_thread.h" ]; then
        echo smt/smt_signal_by_thread.h>>_package.lst
    fi
    if [ -f "smt/smt_signal_by_thread.c" ]; then
        echo smt/smt_signal_by_thread.c>>_package.lst
    fi
    if [ -f "smt/smt_coremark_agent.smt" ]; then
        echo smt/smt_coremark_agent.smt>>_package.lst
    fi
    if [ -f "smt/smt_coremark_agent.h" ]; then
        echo smt/smt_coremark_agent.h>>_package.lst
    fi
    if [ -f "smt/smt_coremark_agent.c" ]; then
        echo smt/smt_coremark_agent.c>>_package.lst
    fi
    if [ -f "smt/smt_coremark_test.c" ]; then
        echo smt/smt_coremark_test.c>>_package.lst
    fi
    if [ -f "smt/smt_coremark.h" ]; then
        echo smt/smt_coremark.h>>_package.lst
    fi
    if [ -f "smt/smt_coremark.c" ]; then
        echo smt/smt_coremark.c>>_package.lst
    fi
    if [ -f "smt/smt_log_agent.smt" ]; then
        echo smt/smt_log_agent.smt>>_package.lst
    fi
    if [ -f "smt/smt_log_agent.h" ]; then
        echo smt/smt_log_agent.h>>_package.lst
    fi
    if [ -f "smt/smt_log_agent.c" ]; then
        echo smt/smt_log_agent.c>>_package.lst
    fi
    if [ -f "smt/smt_log_test.c" ]; then
        echo smt/smt_log_test.c>>_package.lst
    fi
    if [ -f "smt/smt_log.h" ]; then
        echo smt/smt_log.h>>_package.lst
    fi
    if [ -f "smt/smt_log.c" ]; then
        echo smt/smt_log.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_test.c" ]; then
        echo smt/smt_demo_portal_test.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal.h" ]; then
        echo smt/smt_demo_portal.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal.c" ]; then
        echo smt/smt_demo_portal.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_client_agent.smt" ]; then
        echo smt/smt_demo_portal_client_agent.smt>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_client_agent.h" ]; then
        echo smt/smt_demo_portal_client_agent.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_client_agent.c" ]; then
        echo smt/smt_demo_portal_client_agent.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_client_test.c" ]; then
        echo smt/smt_demo_portal_client_test.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_client.h" ]; then
        echo smt/smt_demo_portal_client.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_client.c" ]; then
        echo smt/smt_demo_portal_client.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_server_agent.smt" ]; then
        echo smt/smt_demo_portal_server_agent.smt>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_server_agent.h" ]; then
        echo smt/smt_demo_portal_server_agent.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_server_agent.c" ]; then
        echo smt/smt_demo_portal_server_agent.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_server_test.c" ]; then
        echo smt/smt_demo_portal_server_test.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_server.h" ]; then
        echo smt/smt_demo_portal_server.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_portal_server.c" ]; then
        echo smt/smt_demo_portal_server.c>>_package.lst
    fi
    if [ -f "smt/smt_echo.h" ]; then
        echo smt/smt_echo.h>>_package.lst
    fi
    if [ -f "smt/smt_echo.c" ]; then
        echo smt/smt_echo.c>>_package.lst
    fi
    if [ -f "smt/tstnull.h" ]; then
        echo smt/tstnull.h>>_package.lst
    fi
    if [ -f "smt/tstnull.c" ]; then
        echo smt/tstnull.c>>_package.lst
    fi
    if [ -f "smt/tstsock.h" ]; then
        echo smt/tstsock.h>>_package.lst
    fi
    if [ -f "smt/tstsock.c" ]; then
        echo smt/tstsock.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_timer.c" ]; then
        echo smt/smt_demo_timer.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_timer.h" ]; then
        echo smt/smt_demo_timer.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_agent.smt" ]; then
        echo smt/smt_demo_object_agent.smt>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_agent.h" ]; then
        echo smt/smt_demo_object_agent.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_agent.c" ]; then
        echo smt/smt_demo_object_agent.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_test.c" ]; then
        echo smt/smt_demo_object_test.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_object.h" ]; then
        echo smt/smt_demo_object.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_object.c" ]; then
        echo smt/smt_demo_object.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_action_agent.smt" ]; then
        echo smt/smt_demo_object_action_agent.smt>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_action_agent.h" ]; then
        echo smt/smt_demo_object_action_agent.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_action_agent.c" ]; then
        echo smt/smt_demo_object_action_agent.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_action_test.c" ]; then
        echo smt/smt_demo_object_action_test.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_action.h" ]; then
        echo smt/smt_demo_object_action.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_object_action.c" ]; then
        echo smt/smt_demo_object_action.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_server.h" ]; then
        echo smt/smt_demo_server.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_server.c" ]; then
        echo smt/smt_demo_server.c>>_package.lst
    fi
    if [ -f "smt/smt_demo_client.h" ]; then
        echo smt/smt_demo_client.h>>_package.lst
    fi
    if [ -f "smt/smt_demo_client.c" ]; then
        echo smt/smt_demo_client.c>>_package.lst
    fi
    if [ -f "smt/stamp_generate" ]; then
        echo smt/stamp_generate>>_package.lst
    fi
    if [ -f "smt/boomakew.bat" ]; then
        echo smt/boomakew.bat>>_package.lst
    fi
    if [ -f "smt/configure" ]; then
        echo smt/configure>>_package.lst
    fi
    if [ -f "smt/Makefile.unix" ]; then
        echo smt/Makefile.unix>>_package.lst
    fi
    if [ -f "smt/boomake" ]; then
        echo smt/boomake>>_package.lst
    fi
    if [ -f "smt/configure.bat" ]; then
        echo smt/configure.bat>>_package.lst
    fi
    if [ -f "smt/Makefile.win32" ]; then
        echo smt/Makefile.win32>>_package.lst
    fi
    if [ -f "smt/boomake.bat" ]; then
        echo smt/boomake.bat>>_package.lst
    fi
    if [ -f "smt/libsmt.vcproj" ]; then
        echo smt/libsmt.vcproj>>_package.lst
    fi
    PUSHDIR=`pwd`
    cd opf
    cd $PUSHDIR
    if [ -f "opf/version.h" ]; then
        echo opf/version.h>>_package.lst
    fi
    if [ -f "opf/opf_gen.gsl" ]; then
        echo opf/opf_gen.gsl>>_package.lst
    fi
    if [ -f "opf/opf_gen_class.gsl" ]; then
        echo opf/opf_gen_class.gsl>>_package.lst
    fi
    if [ -f "opf/opf_gen_docs.gsl" ]; then
        echo opf/opf_gen_docs.gsl>>_package.lst
    fi
    if [ -f "opf/opf_classes.pdl" ]; then
        echo opf/opf_classes.pdl>>_package.lst
    fi
    if [ -f "opf/example.opf" ]; then
        echo opf/example.opf>>_package.lst
    fi
    if [ -f "opf/prelude.pdl" ]; then
        echo opf/prelude.pdl>>_package.lst
    fi
    if [ -f "opf/license.gpl" ]; then
        echo opf/license.gpl>>_package.lst
    fi
    if [ -f "opf/project.pdl" ]; then
        echo opf/project.pdl>>_package.lst
    fi
    if [ -f "opf/readme.txt" ]; then
        echo opf/readme.txt>>_package.lst
    fi
    if [ -f "opf/example.icl" ]; then
        echo opf/example.icl>>_package.lst
    fi
    if [ -f "opf/example_test.c" ]; then
        echo opf/example_test.c>>_package.lst
    fi
    if [ -f "opf/example.h" ]; then
        echo opf/example.h>>_package.lst
    fi
    if [ -f "opf/example.c" ]; then
        echo opf/example.c>>_package.lst
    fi
    if [ -f "opf/example.txt" ]; then
        echo opf/example.txt>>_package.lst
    fi
    if [ -f "opf/stamp_generate" ]; then
        echo opf/stamp_generate>>_package.lst
    fi
    if [ -f "opf/boomakew.bat" ]; then
        echo opf/boomakew.bat>>_package.lst
    fi
    if [ -f "opf/configure" ]; then
        echo opf/configure>>_package.lst
    fi
    if [ -f "opf/Makefile.unix" ]; then
        echo opf/Makefile.unix>>_package.lst
    fi
    if [ -f "opf/boomake" ]; then
        echo opf/boomake>>_package.lst
    fi
    if [ -f "opf/configure.bat" ]; then
        echo opf/configure.bat>>_package.lst
    fi
    if [ -f "opf/Makefile.win32" ]; then
        echo opf/Makefile.win32>>_package.lst
    fi
    if [ -f "opf/boomake.bat" ]; then
        echo opf/boomake.bat>>_package.lst
    fi
    if [ -f "opf/libopf.vcproj" ]; then
        echo opf/libopf.vcproj>>_package.lst
    fi
    PUSHDIR=`pwd`
    cd asl
    cd $PUSHDIR
    if [ -f "asl/version.h" ]; then
        echo asl/version.h>>_package.lst
    fi
    if [ -f "asl/asl.h" ]; then
        echo asl/asl.h>>_package.lst
    fi
    if [ -f "asl/asl.xnf" ]; then
        echo asl/asl.xnf>>_package.lst
    fi
    if [ -f "asl/asl_gen.gsl" ]; then
        echo asl/asl_gen.gsl>>_package.lst
    fi
    if [ -f "asl/asl_preproc.gsl" ]; then
        echo asl/asl_preproc.gsl>>_package.lst
    fi
    if [ -f "asl/asl_inherit.gsl" ]; then
        echo asl/asl_inherit.gsl>>_package.lst
    fi
    if [ -f "asl/asl_parse.gsl" ]; then
        echo asl/asl_parse.gsl>>_package.lst
    fi
    if [ -f "asl/asl_doc.txt" ]; then
        echo asl/asl_doc.txt>>_package.lst
    fi
    if [ -f "asl/asl_stdc.gsl" ]; then
        echo asl/asl_stdc.gsl>>_package.lst
    fi
    if [ -f "asl/asl_java.gsl" ]; then
        echo asl/asl_java.gsl>>_package.lst
    fi
    if [ -f "asl/asl_csharp.gsl" ]; then
        echo asl/asl_csharp.gsl>>_package.lst
    fi
    if [ -f "asl/asl_doc.gsl" ]; then
        echo asl/asl_doc.gsl>>_package.lst
    fi
    if [ -f "asl/asl_constants.gsl" ]; then
        echo asl/asl_constants.gsl>>_package.lst
    fi
    if [ -f "asl/asl_method_class.gsl" ]; then
        echo asl/asl_method_class.gsl>>_package.lst
    fi
    if [ -f "asl/asl_content_class.gsl" ]; then
        echo asl/asl_content_class.gsl>>_package.lst
    fi
    if [ -f "asl/asl_client_connection.gsl" ]; then
        echo asl/asl_client_connection.gsl>>_package.lst
    fi
    if [ -f "asl/asl_client_session.gsl" ]; then
        echo asl/asl_client_session.gsl>>_package.lst
    fi
    if [ -f "asl/asl_client_agent.gsl" ]; then
        echo asl/asl_client_agent.gsl>>_package.lst
    fi
    if [ -f "asl/asl_server_agent.gsl" ]; then
        echo asl/asl_server_agent.gsl>>_package.lst
    fi
    if [ -f "asl/asl_agent_common.gsl" ]; then
        echo asl/asl_agent_common.gsl>>_package.lst
    fi
    if [ -f "asl/asl_channel.icl" ]; then
        echo asl/asl_channel.icl>>_package.lst
    fi
    if [ -f "asl/asl_server_connection.icl" ]; then
        echo asl/asl_server_connection.icl>>_package.lst
    fi
    if [ -f "asl/asl_server_channel.icl" ]; then
        echo asl/asl_server_channel.icl>>_package.lst
    fi
    if [ -f "asl/asl_client_channel.icl" ]; then
        echo asl/asl_client_channel.icl>>_package.lst
    fi
    if [ -f "asl/asl_broker.icl" ]; then
        echo asl/asl_broker.icl>>_package.lst
    fi
    if [ -f "asl/asl_field.icl" ]; then
        echo asl/asl_field.icl>>_package.lst
    fi
    if [ -f "asl/asl_field_list.icl" ]; then
        echo asl/asl_field_list.icl>>_package.lst
    fi
    if [ -f "asl/asl_base.asl" ]; then
        echo asl/asl_base.asl>>_package.lst
    fi
    if [ -f "asl/asl_constants.asl" ]; then
        echo asl/asl_constants.asl>>_package.lst
    fi
    if [ -f "asl/asl_connection.asl" ]; then
        echo asl/asl_connection.asl>>_package.lst
    fi
    if [ -f "asl/asl_channel.asl" ]; then
        echo asl/asl_channel.asl>>_package.lst
    fi
    if [ -f "asl/asl_client.asl" ]; then
        echo asl/asl_client.asl>>_package.lst
    fi
    if [ -f "asl/asl_server.asl" ]; then
        echo asl/asl_server.asl>>_package.lst
    fi
    if [ -f "asl/asl_direct.asl" ]; then
        echo asl/asl_direct.asl>>_package.lst
    fi
    if [ -f "asl/demo.asl" ]; then
        echo asl/demo.asl>>_package.lst
    fi
    if [ -f "asl/demo_exchange.asl" ]; then
        echo asl/demo_exchange.asl>>_package.lst
    fi
    if [ -f "asl/demo_queue.asl" ]; then
        echo asl/demo_queue.asl>>_package.lst
    fi
    if [ -f "asl/demo_basic.asl" ]; then
        echo asl/demo_basic.asl>>_package.lst
    fi
    if [ -f "asl/demo_cli.c" ]; then
        echo asl/demo_cli.c>>_package.lst
    fi
    if [ -f "asl/demo_client_proto.asl" ]; then
        echo asl/demo_client_proto.asl>>_package.lst
    fi
    if [ -f "asl/demo_client_method.icl" ]; then
        echo asl/demo_client_method.icl>>_package.lst
    fi
    if [ -f "asl/demo_client_agent.smt" ]; then
        echo asl/demo_client_agent.smt>>_package.lst
    fi
    if [ -f "asl/demo_client_config.opf" ]; then
        echo asl/demo_client_config.opf>>_package.lst
    fi
    if [ -f "asl/demo_client_classes.icl" ]; then
        echo asl/demo_client_classes.icl>>_package.lst
    fi
    if [ -f "asl/demo_client_connection.icl" ]; then
        echo asl/demo_client_connection.icl>>_package.lst
    fi
    if [ -f "asl/demo_client_session.icl" ]; then
        echo asl/demo_client_session.icl>>_package.lst
    fi
    if [ -f "asl/demo_client_channel.icl" ]; then
        echo asl/demo_client_channel.icl>>_package.lst
    fi
    if [ -f "asl/demo_client_channel_table.icl" ]; then
        echo asl/demo_client_channel_table.icl>>_package.lst
    fi
    if [ -f "asl/demo_srv.c" ]; then
        echo asl/demo_srv.c>>_package.lst
    fi
    if [ -f "asl/demo_server_proto.asl" ]; then
        echo asl/demo_server_proto.asl>>_package.lst
    fi
    if [ -f "asl/demo_server_main.inc" ]; then
        echo asl/demo_server_main.inc>>_package.lst
    fi
    if [ -f "asl/demo_server_config.opf" ]; then
        echo asl/demo_server_config.opf>>_package.lst
    fi
    if [ -f "asl/demo_server_method.icl" ]; then
        echo asl/demo_server_method.icl>>_package.lst
    fi
    if [ -f "asl/demo_server_agent.smt" ]; then
        echo asl/demo_server_agent.smt>>_package.lst
    fi
    if [ -f "asl/demo_server_classes.icl" ]; then
        echo asl/demo_server_classes.icl>>_package.lst
    fi
    if [ -f "asl/demo_server_connection.icl" ]; then
        echo asl/demo_server_connection.icl>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_table.icl" ]; then
        echo asl/demo_server_connection_table.icl>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_list.icl" ]; then
        echo asl/demo_server_connection_list.icl>>_package.lst
    fi
    if [ -f "asl/demo_server_channel.icl" ]; then
        echo asl/demo_server_channel.icl>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_agent.smt" ]; then
        echo asl/demo_server_channel_agent.smt>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_table.icl" ]; then
        echo asl/demo_server_channel_table.icl>>_package.lst
    fi
    if [ -f "asl/demo_broker.icl" ]; then
        echo asl/demo_broker.icl>>_package.lst
    fi
    if [ -f "asl/demo_broker_agent.smt" ]; then
        echo asl/demo_broker_agent.smt>>_package.lst
    fi
    if [ -f "asl/demo_exchange.icl" ]; then
        echo asl/demo_exchange.icl>>_package.lst
    fi
    if [ -f "asl/demo_exchange_table.icl" ]; then
        echo asl/demo_exchange_table.icl>>_package.lst
    fi
    if [ -f "asl/demo_exchange_agent.smt" ]; then
        echo asl/demo_exchange_agent.smt>>_package.lst
    fi
    if [ -f "asl/demo_queue.icl" ]; then
        echo asl/demo_queue.icl>>_package.lst
    fi
    if [ -f "asl/demo_queue_table.icl" ]; then
        echo asl/demo_queue_table.icl>>_package.lst
    fi
    if [ -f "asl/demo_queue_list.icl" ]; then
        echo asl/demo_queue_list.icl>>_package.lst
    fi
    if [ -f "asl/demo_queue_agent.smt" ]; then
        echo asl/demo_queue_agent.smt>>_package.lst
    fi
    if [ -f "asl/demo_lease.icl" ]; then
        echo asl/demo_lease.icl>>_package.lst
    fi
    if [ -f "asl/demo_lease_table.icl" ]; then
        echo asl/demo_lease_table.icl>>_package.lst
    fi
    if [ -f "asl/demo_content_basic.icl" ]; then
        echo asl/demo_content_basic.icl>>_package.lst
    fi
    if [ -f "asl/demo_content_basic_list.icl" ]; then
        echo asl/demo_content_basic_list.icl>>_package.lst
    fi
    if [ -f "asl/demo_constants.icl" ]; then
        echo asl/demo_constants.icl>>_package.lst
    fi
    if [ -f "asl/demo_srv_resource.rc" ]; then
        echo asl/demo_srv_resource.rc>>_package.lst
    fi
    if [ -f "asl/demo_srv_base.cfg" ]; then
        echo asl/demo_srv_base.cfg>>_package.lst
    fi
    if [ -f "asl/icl_make_doc.ignore" ]; then
        echo asl/icl_make_doc.ignore>>_package.lst
    fi
    if [ -f "asl/prelude.pdl" ]; then
        echo asl/prelude.pdl>>_package.lst
    fi
    if [ -f "asl/license.gpl" ]; then
        echo asl/license.gpl>>_package.lst
    fi
    if [ -f "asl/project.pdl" ]; then
        echo asl/project.pdl>>_package.lst
    fi
    if [ -f "asl/readme.txt" ]; then
        echo asl/readme.txt>>_package.lst
    fi
    if [ -f "asl/asl_field_test.c" ]; then
        echo asl/asl_field_test.c>>_package.lst
    fi
    if [ -f "asl/asl_field.h" ]; then
        echo asl/asl_field.h>>_package.lst
    fi
    if [ -f "asl/asl_field.c" ]; then
        echo asl/asl_field.c>>_package.lst
    fi
    if [ -f "asl/asl_field_list_test.c" ]; then
        echo asl/asl_field_list_test.c>>_package.lst
    fi
    if [ -f "asl/asl_field_list.h" ]; then
        echo asl/asl_field_list.h>>_package.lst
    fi
    if [ -f "asl/asl_field_list.c" ]; then
        echo asl/asl_field_list.c>>_package.lst
    fi
    if [ -f "asl/demo_client_method_test.c" ]; then
        echo asl/demo_client_method_test.c>>_package.lst
    fi
    if [ -f "asl/demo_client_method.h" ]; then
        echo asl/demo_client_method.h>>_package.lst
    fi
    if [ -f "asl/demo_client_method.c" ]; then
        echo asl/demo_client_method.c>>_package.lst
    fi
    if [ -f "asl/demo_client_agent.h" ]; then
        echo asl/demo_client_agent.h>>_package.lst
    fi
    if [ -f "asl/demo_client_agent.c" ]; then
        echo asl/demo_client_agent.c>>_package.lst
    fi
    if [ -f "asl/demo_client_config.icl" ]; then
        echo asl/demo_client_config.icl>>_package.lst
    fi
    if [ -f "asl/demo_client_config_test.c" ]; then
        echo asl/demo_client_config_test.c>>_package.lst
    fi
    if [ -f "asl/demo_client_config.h" ]; then
        echo asl/demo_client_config.h>>_package.lst
    fi
    if [ -f "asl/demo_client_config.c" ]; then
        echo asl/demo_client_config.c>>_package.lst
    fi
    if [ -f "asl/demo_client_config.txt" ]; then
        echo asl/demo_client_config.txt>>_package.lst
    fi
    if [ -f "asl/demo_client_classes.h" ]; then
        echo asl/demo_client_classes.h>>_package.lst
    fi
    if [ -f "asl/demo_client_classes.c" ]; then
        echo asl/demo_client_classes.c>>_package.lst
    fi
    if [ -f "asl/demo_client_connection_test.c" ]; then
        echo asl/demo_client_connection_test.c>>_package.lst
    fi
    if [ -f "asl/demo_client_connection.h" ]; then
        echo asl/demo_client_connection.h>>_package.lst
    fi
    if [ -f "asl/demo_client_connection.c" ]; then
        echo asl/demo_client_connection.c>>_package.lst
    fi
    if [ -f "asl/demo_client_session_test.c" ]; then
        echo asl/demo_client_session_test.c>>_package.lst
    fi
    if [ -f "asl/demo_client_session.h" ]; then
        echo asl/demo_client_session.h>>_package.lst
    fi
    if [ -f "asl/demo_client_session.c" ]; then
        echo asl/demo_client_session.c>>_package.lst
    fi
    if [ -f "asl/demo_client_channel_test.c" ]; then
        echo asl/demo_client_channel_test.c>>_package.lst
    fi
    if [ -f "asl/demo_client_channel.h" ]; then
        echo asl/demo_client_channel.h>>_package.lst
    fi
    if [ -f "asl/demo_client_channel.c" ]; then
        echo asl/demo_client_channel.c>>_package.lst
    fi
    if [ -f "asl/demo_client_channel_table_test.c" ]; then
        echo asl/demo_client_channel_table_test.c>>_package.lst
    fi
    if [ -f "asl/demo_client_channel_table.h" ]; then
        echo asl/demo_client_channel_table.h>>_package.lst
    fi
    if [ -f "asl/demo_client_channel_table.c" ]; then
        echo asl/demo_client_channel_table.c>>_package.lst
    fi
    if [ -f "asl/demo_server_config.icl" ]; then
        echo asl/demo_server_config.icl>>_package.lst
    fi
    if [ -f "asl/demo_server_config_test.c" ]; then
        echo asl/demo_server_config_test.c>>_package.lst
    fi
    if [ -f "asl/demo_server_config.h" ]; then
        echo asl/demo_server_config.h>>_package.lst
    fi
    if [ -f "asl/demo_server_config.c" ]; then
        echo asl/demo_server_config.c>>_package.lst
    fi
    if [ -f "asl/demo_server_config.txt" ]; then
        echo asl/demo_server_config.txt>>_package.lst
    fi
    if [ -f "asl/demo_server_method_test.c" ]; then
        echo asl/demo_server_method_test.c>>_package.lst
    fi
    if [ -f "asl/demo_server_method.h" ]; then
        echo asl/demo_server_method.h>>_package.lst
    fi
    if [ -f "asl/demo_server_method.c" ]; then
        echo asl/demo_server_method.c>>_package.lst
    fi
    if [ -f "asl/demo_server_agent.h" ]; then
        echo asl/demo_server_agent.h>>_package.lst
    fi
    if [ -f "asl/demo_server_agent.c" ]; then
        echo asl/demo_server_agent.c>>_package.lst
    fi
    if [ -f "asl/demo_server_classes.h" ]; then
        echo asl/demo_server_classes.h>>_package.lst
    fi
    if [ -f "asl/demo_server_classes.c" ]; then
        echo asl/demo_server_classes.c>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_test.c" ]; then
        echo asl/demo_server_connection_test.c>>_package.lst
    fi
    if [ -f "asl/demo_server_connection.h" ]; then
        echo asl/demo_server_connection.h>>_package.lst
    fi
    if [ -f "asl/demo_server_connection.c" ]; then
        echo asl/demo_server_connection.c>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_table_test.c" ]; then
        echo asl/demo_server_connection_table_test.c>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_table.h" ]; then
        echo asl/demo_server_connection_table.h>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_table.c" ]; then
        echo asl/demo_server_connection_table.c>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_list_test.c" ]; then
        echo asl/demo_server_connection_list_test.c>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_list.h" ]; then
        echo asl/demo_server_connection_list.h>>_package.lst
    fi
    if [ -f "asl/demo_server_connection_list.c" ]; then
        echo asl/demo_server_connection_list.c>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_test.c" ]; then
        echo asl/demo_server_channel_test.c>>_package.lst
    fi
    if [ -f "asl/demo_server_channel.h" ]; then
        echo asl/demo_server_channel.h>>_package.lst
    fi
    if [ -f "asl/demo_server_channel.c" ]; then
        echo asl/demo_server_channel.c>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_agent.h" ]; then
        echo asl/demo_server_channel_agent.h>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_agent.c" ]; then
        echo asl/demo_server_channel_agent.c>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_table_test.c" ]; then
        echo asl/demo_server_channel_table_test.c>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_table.h" ]; then
        echo asl/demo_server_channel_table.h>>_package.lst
    fi
    if [ -f "asl/demo_server_channel_table.c" ]; then
        echo asl/demo_server_channel_table.c>>_package.lst
    fi
    if [ -f "asl/demo_broker_test.c" ]; then
        echo asl/demo_broker_test.c>>_package.lst
    fi
    if [ -f "asl/demo_broker.h" ]; then
        echo asl/demo_broker.h>>_package.lst
    fi
    if [ -f "asl/demo_broker.c" ]; then
        echo asl/demo_broker.c>>_package.lst
    fi
    if [ -f "asl/demo_broker_agent.h" ]; then
        echo asl/demo_broker_agent.h>>_package.lst
    fi
    if [ -f "asl/demo_broker_agent.c" ]; then
        echo asl/demo_broker_agent.c>>_package.lst
    fi
    if [ -f "asl/demo_exchange_test.c" ]; then
        echo asl/demo_exchange_test.c>>_package.lst
    fi
    if [ -f "asl/demo_exchange.h" ]; then
        echo asl/demo_exchange.h>>_package.lst
    fi
    if [ -f "asl/demo_exchange.c" ]; then
        echo asl/demo_exchange.c>>_package.lst
    fi
    if [ -f "asl/demo_exchange_table_test.c" ]; then
        echo asl/demo_exchange_table_test.c>>_package.lst
    fi
    if [ -f "asl/demo_exchange_table.h" ]; then
        echo asl/demo_exchange_table.h>>_package.lst
    fi
    if [ -f "asl/demo_exchange_table.c" ]; then
        echo asl/demo_exchange_table.c>>_package.lst
    fi
    if [ -f "asl/demo_exchange_agent.h" ]; then
        echo asl/demo_exchange_agent.h>>_package.lst
    fi
    if [ -f "asl/demo_exchange_agent.c" ]; then
        echo asl/demo_exchange_agent.c>>_package.lst
    fi
    if [ -f "asl/demo_queue_test.c" ]; then
        echo asl/demo_queue_test.c>>_package.lst
    fi
    if [ -f "asl/demo_queue.h" ]; then
        echo asl/demo_queue.h>>_package.lst
    fi
    if [ -f "asl/demo_queue.c" ]; then
        echo asl/demo_queue.c>>_package.lst
    fi
    if [ -f "asl/demo_queue_table_test.c" ]; then
        echo asl/demo_queue_table_test.c>>_package.lst
    fi
    if [ -f "asl/demo_queue_table.h" ]; then
        echo asl/demo_queue_table.h>>_package.lst
    fi
    if [ -f "asl/demo_queue_table.c" ]; then
        echo asl/demo_queue_table.c>>_package.lst
    fi
    if [ -f "asl/demo_queue_list_test.c" ]; then
        echo asl/demo_queue_list_test.c>>_package.lst
    fi
    if [ -f "asl/demo_queue_list.h" ]; then
        echo asl/demo_queue_list.h>>_package.lst
    fi
    if [ -f "asl/demo_queue_list.c" ]; then
        echo asl/demo_queue_list.c>>_package.lst
    fi
    if [ -f "asl/demo_queue_agent.h" ]; then
        echo asl/demo_queue_agent.h>>_package.lst
    fi
    if [ -f "asl/demo_queue_agent.c" ]; then
        echo asl/demo_queue_agent.c>>_package.lst
    fi
    if [ -f "asl/demo_lease_test.c" ]; then
        echo asl/demo_lease_test.c>>_package.lst
    fi
    if [ -f "asl/demo_lease.h" ]; then
        echo asl/demo_lease.h>>_package.lst
    fi
    if [ -f "asl/demo_lease.c" ]; then
        echo asl/demo_lease.c>>_package.lst
    fi
    if [ -f "asl/demo_lease_table_test.c" ]; then
        echo asl/demo_lease_table_test.c>>_package.lst
    fi
    if [ -f "asl/demo_lease_table.h" ]; then
        echo asl/demo_lease_table.h>>_package.lst
    fi
    if [ -f "asl/demo_lease_table.c" ]; then
        echo asl/demo_lease_table.c>>_package.lst
    fi
    if [ -f "asl/demo_content_basic_test.c" ]; then
        echo asl/demo_content_basic_test.c>>_package.lst
    fi
    if [ -f "asl/demo_content_basic.h" ]; then
        echo asl/demo_content_basic.h>>_package.lst
    fi
    if [ -f "asl/demo_content_basic.c" ]; then
        echo asl/demo_content_basic.c>>_package.lst
    fi
    if [ -f "asl/demo_content_basic_list_test.c" ]; then
        echo asl/demo_content_basic_list_test.c>>_package.lst
    fi
    if [ -f "asl/demo_content_basic_list.h" ]; then
        echo asl/demo_content_basic_list.h>>_package.lst
    fi
    if [ -f "asl/demo_content_basic_list.c" ]; then
        echo asl/demo_content_basic_list.c>>_package.lst
    fi
    if [ -f "asl/demo_constants.h" ]; then
        echo asl/demo_constants.h>>_package.lst
    fi
    if [ -f "asl/demo_constants.c" ]; then
        echo asl/demo_constants.c>>_package.lst
    fi
    if [ -f "asl/demo_srv_resource.icl" ]; then
        echo asl/demo_srv_resource.icl>>_package.lst
    fi
    if [ -f "asl/demo_srv_resource_test.c" ]; then
        echo asl/demo_srv_resource_test.c>>_package.lst
    fi
    if [ -f "asl/demo_srv_resource.h" ]; then
        echo asl/demo_srv_resource.h>>_package.lst
    fi
    if [ -f "asl/demo_srv_resource.c" ]; then
        echo asl/demo_srv_resource.c>>_package.lst
    fi
    if [ -f "asl/stamp_generate" ]; then
        echo asl/stamp_generate>>_package.lst
    fi
    if [ -f "asl/boomakew.bat" ]; then
        echo asl/boomakew.bat>>_package.lst
    fi
    if [ -f "asl/configure" ]; then
        echo asl/configure>>_package.lst
    fi
    if [ -f "asl/Makefile.unix" ]; then
        echo asl/Makefile.unix>>_package.lst
    fi
    if [ -f "asl/boomake" ]; then
        echo asl/boomake>>_package.lst
    fi
    if [ -f "asl/configure.bat" ]; then
        echo asl/configure.bat>>_package.lst
    fi
    if [ -f "asl/Makefile.win32" ]; then
        echo asl/Makefile.win32>>_package.lst
    fi
    if [ -f "asl/boomake.bat" ]; then
        echo asl/boomake.bat>>_package.lst
    fi
    if [ -f "asl/libasl.vcproj" ]; then
        echo asl/libasl.vcproj>>_package.lst
    fi
    if [ -f "asl/pal/asl_pal.gsl" ]; then
        echo asl/pal/asl_pal.gsl>>_package.lst
    fi
    if [ -f "asl/pal/asl_pal_stdc.gsl" ]; then
        echo asl/pal/asl_pal_stdc.gsl>>_package.lst
    fi
    if [ -f "asl/pal/asl_pal_xnf.gsl" ]; then
        echo asl/pal/asl_pal_xnf.gsl>>_package.lst
    fi
    if [ -f "asl/pal/asl_pal_txt.gsl" ]; then
        echo asl/pal/asl_pal_txt.gsl>>_package.lst
    fi
    if [ -f "asl/pal/palguide.txt" ]; then
        echo asl/pal/palguide.txt>>_package.lst
    fi
    if [ -f "asl/pal/pal" ]; then
        echo asl/pal/pal>>_package.lst
    fi
    if [ -f "asl/pal/pal.bat" ]; then
        echo asl/pal/pal.bat>>_package.lst
    fi
    if [ -f "asl/pal/demo_pal.xnf" ]; then
        echo asl/pal/demo_pal.xnf>>_package.lst
    fi
    if [ -f "asl/pal/demo_pal_stdc.gsl" ]; then
        echo asl/pal/demo_pal_stdc.gsl>>_package.lst
    fi
    if [ -f "asl/pal/demo_pal_codegen.gsl" ]; then
        echo asl/pal/demo_pal_codegen.gsl>>_package.lst
    fi
    if [ -f "asl/pal/demo_pal_gen.gsl" ]; then
        echo asl/pal/demo_pal_gen.gsl>>_package.lst
    fi
    if [ -f "asl/pal/demo_pal_inherit.gsl" ]; then
        echo asl/pal/demo_pal_inherit.gsl>>_package.lst
    fi
    if [ -f "asl/pal/demo_pal_parse.gsl" ]; then
        echo asl/pal/demo_pal_parse.gsl>>_package.lst
    fi
    if [ -f "asl/pal/demo_pal_preproc.gsl" ]; then
        echo asl/pal/demo_pal_preproc.gsl>>_package.lst
    fi
    if [ -f "asl/pal/hello.pal" ]; then
        echo asl/pal/hello.pal>>_package.lst
    fi
    if [ -f "asl/pal/loop1.pal" ]; then
        echo asl/pal/loop1.pal>>_package.lst
    fi
    if [ -f "asl/pal/loop2.pal" ]; then
        echo asl/pal/loop2.pal>>_package.lst
    fi
    if [ -f "asl/pal/content.pal" ]; then
        echo asl/pal/content.pal>>_package.lst
    fi
    if [ -f "asl/pal/macros.pal" ]; then
        echo asl/pal/macros.pal>>_package.lst
    fi
    if [ -f "asl/pal/session.pal" ]; then
        echo asl/pal/session.pal>>_package.lst
    fi
    if [ -f "asl/pal/single.pal" ]; then
        echo asl/pal/single.pal>>_package.lst
    fi
    if [ -f "asl/pal/single2.pal" ]; then
        echo asl/pal/single2.pal>>_package.lst
    fi
    if [ -f "asl/pal/symbols.pal" ]; then
        echo asl/pal/symbols.pal>>_package.lst
    fi
    if [ -f "asl/pal/waiting.pal" ]; then
        echo asl/pal/waiting.pal>>_package.lst
    fi
    if [ -f "asl/pal/content_file.pal" ]; then
        echo asl/pal/content_file.pal>>_package.lst
    fi
    if [ -f "asl/pal/content_exec.pal" ]; then
        echo asl/pal/content_exec.pal>>_package.lst
    fi
    if [ -f "asl/pal/content_body.pal" ]; then
        echo asl/pal/content_body.pal>>_package.lst
    fi
    if [ -f "asl/pal/cmdline.pal" ]; then
        echo asl/pal/cmdline.pal>>_package.lst
    fi
    if [ -f "asl/pal/webserver.pal" ]; then
        echo asl/pal/webserver.pal>>_package.lst
    fi
    if [ -f "asl/pal/stress.pal" ]; then
        echo asl/pal/stress.pal>>_package.lst
    fi
    if [ -f "asl/pal/im_read.pal" ]; then
        echo asl/pal/im_read.pal>>_package.lst
    fi
    if [ -f "asl/pal/im_send.pal" ]; then
        echo asl/pal/im_send.pal>>_package.lst
    fi
    if [ "`echo asl/pal/palguide*.html`" != "asl/pal/palguide*.html" ]; then
        for file in `echo asl/pal/palguide*.html`; do
            echo $file>>_package.lst
        done
    fi
    PUSHDIR=`pwd`
    cd http
    cd $PUSHDIR
    if [ -f "http/version.h" ]; then
        echo http/version.h>>_package.lst
    fi
    if [ -f "http/http_config.opf" ]; then
        echo http/http_config.opf>>_package.lst
    fi
    if [ -f "http/http_main.inc" ]; then
        echo http/http_main.inc>>_package.lst
    fi
    if [ -f "http/http_address.icl" ]; then
        echo http/http_address.icl>>_package.lst
    fi
    if [ -f "http/http_address_table.icl" ]; then
        echo http/http_address_table.icl>>_package.lst
    fi
    if [ -f "http/http_request.icl" ]; then
        echo http/http_request.icl>>_package.lst
    fi
    if [ -f "http/http_response.icl" ]; then
        echo http/http_response.icl>>_package.lst
    fi
    if [ -f "http/http_driver_module.icl" ]; then
        echo http/http_driver_module.icl>>_package.lst
    fi
    if [ -f "http/http_access_module.icl" ]; then
        echo http/http_access_module.icl>>_package.lst
    fi
    if [ -f "http/http_driver_context.icl" ]; then
        echo http/http_driver_context.icl>>_package.lst
    fi
    if [ -f "http/http_access_context.icl" ]; then
        echo http/http_access_context.icl>>_package.lst
    fi
    if [ -f "http/http_driver_file.icl" ]; then
        echo http/http_driver_file.icl>>_package.lst
    fi
    if [ -f "http/http_driver_cgi.icl" ]; then
        echo http/http_driver_cgi.icl>>_package.lst
    fi
    if [ -f "http/http_driver_null.icl" ]; then
        echo http/http_driver_null.icl>>_package.lst
    fi
    if [ -f "http/http_access_logger.icl" ]; then
        echo http/http_access_logger.icl>>_package.lst
    fi
    if [ -f "http/http_access_policy.icl" ]; then
        echo http/http_access_policy.icl>>_package.lst
    fi
    if [ -f "http/http_access_refresh.icl" ]; then
        echo http/http_access_refresh.icl>>_package.lst
    fi
    if [ -f "http/http_access_dos.icl" ]; then
        echo http/http_access_dos.icl>>_package.lst
    fi
    if [ -f "http/http_refresh.pl" ]; then
        echo http/http_refresh.pl>>_package.lst
    fi
    if [ -f "http/http_agent.smt" ]; then
        echo http/http_agent.smt>>_package.lst
    fi
    if [ -f "http/http_server.icl" ]; then
        echo http/http_server.icl>>_package.lst
    fi
    if [ -f "http/http.icl" ]; then
        echo http/http.icl>>_package.lst
    fi
    if [ -f "http/http_static.rc" ]; then
        echo http/http_static.rc>>_package.lst
    fi
    if [ -f "http/http_base.cfg" ]; then
        echo http/http_base.cfg>>_package.lst
    fi
    if [ -f "http/http_base.css" ]; then
        echo http/http_base.css>>_package.lst
    fi
    if [ -f "http/httpd.c" ]; then
        echo http/httpd.c>>_package.lst
    fi
    if [ -f "http/prelude.pdl" ]; then
        echo http/prelude.pdl>>_package.lst
    fi
    if [ -f "http/license.gpl" ]; then
        echo http/license.gpl>>_package.lst
    fi
    if [ -f "http/project.pdl" ]; then
        echo http/project.pdl>>_package.lst
    fi
    if [ -f "http/readme.txt" ]; then
        echo http/readme.txt>>_package.lst
    fi
    if [ -f "http/http_config.icl" ]; then
        echo http/http_config.icl>>_package.lst
    fi
    if [ -f "http/http_config_test.c" ]; then
        echo http/http_config_test.c>>_package.lst
    fi
    if [ -f "http/http_config.h" ]; then
        echo http/http_config.h>>_package.lst
    fi
    if [ -f "http/http_config.c" ]; then
        echo http/http_config.c>>_package.lst
    fi
    if [ -f "http/http_config.txt" ]; then
        echo http/http_config.txt>>_package.lst
    fi
    if [ -f "http/http_address_test.c" ]; then
        echo http/http_address_test.c>>_package.lst
    fi
    if [ -f "http/http_address.h" ]; then
        echo http/http_address.h>>_package.lst
    fi
    if [ -f "http/http_address.c" ]; then
        echo http/http_address.c>>_package.lst
    fi
    if [ -f "http/http_address_table_test.c" ]; then
        echo http/http_address_table_test.c>>_package.lst
    fi
    if [ -f "http/http_address_table.h" ]; then
        echo http/http_address_table.h>>_package.lst
    fi
    if [ -f "http/http_address_table.c" ]; then
        echo http/http_address_table.c>>_package.lst
    fi
    if [ -f "http/http_request_test.c" ]; then
        echo http/http_request_test.c>>_package.lst
    fi
    if [ -f "http/http_request.h" ]; then
        echo http/http_request.h>>_package.lst
    fi
    if [ -f "http/http_request.c" ]; then
        echo http/http_request.c>>_package.lst
    fi
    if [ -f "http/http_response_test.c" ]; then
        echo http/http_response_test.c>>_package.lst
    fi
    if [ -f "http/http_response.h" ]; then
        echo http/http_response.h>>_package.lst
    fi
    if [ -f "http/http_response.c" ]; then
        echo http/http_response.c>>_package.lst
    fi
    if [ -f "http/http_driver_module_front.icl" ]; then
        echo http/http_driver_module_front.icl>>_package.lst
    fi
    if [ -f "http/http_driver_module_back.icl" ]; then
        echo http/http_driver_module_back.icl>>_package.lst
    fi
    if [ -f "http/http_driver_module_test.c" ]; then
        echo http/http_driver_module_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_module.h" ]; then
        echo http/http_driver_module.h>>_package.lst
    fi
    if [ -f "http/http_driver_module.c" ]; then
        echo http/http_driver_module.c>>_package.lst
    fi
    if [ -f "http/http_access_module_front.icl" ]; then
        echo http/http_access_module_front.icl>>_package.lst
    fi
    if [ -f "http/http_access_module_back.icl" ]; then
        echo http/http_access_module_back.icl>>_package.lst
    fi
    if [ -f "http/http_access_module_test.c" ]; then
        echo http/http_access_module_test.c>>_package.lst
    fi
    if [ -f "http/http_access_module.h" ]; then
        echo http/http_access_module.h>>_package.lst
    fi
    if [ -f "http/http_access_module.c" ]; then
        echo http/http_access_module.c>>_package.lst
    fi
    if [ -f "http/http_driver_context_test.c" ]; then
        echo http/http_driver_context_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_context.h" ]; then
        echo http/http_driver_context.h>>_package.lst
    fi
    if [ -f "http/http_driver_context.c" ]; then
        echo http/http_driver_context.c>>_package.lst
    fi
    if [ -f "http/http_access_context_test.c" ]; then
        echo http/http_access_context_test.c>>_package.lst
    fi
    if [ -f "http/http_access_context.h" ]; then
        echo http/http_access_context.h>>_package.lst
    fi
    if [ -f "http/http_access_context.c" ]; then
        echo http/http_access_context.c>>_package.lst
    fi
    if [ -f "http/http_driver_file_agent.smt" ]; then
        echo http/http_driver_file_agent.smt>>_package.lst
    fi
    if [ -f "http/http_driver_file_agent.h" ]; then
        echo http/http_driver_file_agent.h>>_package.lst
    fi
    if [ -f "http/http_driver_file_agent.c" ]; then
        echo http/http_driver_file_agent.c>>_package.lst
    fi
    if [ -f "http/http_driver_file_test.c" ]; then
        echo http/http_driver_file_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_file.h" ]; then
        echo http/http_driver_file.h>>_package.lst
    fi
    if [ -f "http/http_driver_file.c" ]; then
        echo http/http_driver_file.c>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_agent.smt" ]; then
        echo http/http_driver_cgi_agent.smt>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_agent.h" ]; then
        echo http/http_driver_cgi_agent.h>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_agent.c" ]; then
        echo http/http_driver_cgi_agent.c>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_test.c" ]; then
        echo http/http_driver_cgi_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_cgi.h" ]; then
        echo http/http_driver_cgi.h>>_package.lst
    fi
    if [ -f "http/http_driver_cgi.c" ]; then
        echo http/http_driver_cgi.c>>_package.lst
    fi
    if [ -f "http/http_driver_null_agent.smt" ]; then
        echo http/http_driver_null_agent.smt>>_package.lst
    fi
    if [ -f "http/http_driver_null_agent.h" ]; then
        echo http/http_driver_null_agent.h>>_package.lst
    fi
    if [ -f "http/http_driver_null_agent.c" ]; then
        echo http/http_driver_null_agent.c>>_package.lst
    fi
    if [ -f "http/http_driver_null_test.c" ]; then
        echo http/http_driver_null_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_null.h" ]; then
        echo http/http_driver_null.h>>_package.lst
    fi
    if [ -f "http/http_driver_null.c" ]; then
        echo http/http_driver_null.c>>_package.lst
    fi
    if [ -f "http/http_access_logger_agent.smt" ]; then
        echo http/http_access_logger_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_logger_agent.h" ]; then
        echo http/http_access_logger_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_logger_agent.c" ]; then
        echo http/http_access_logger_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_logger_test.c" ]; then
        echo http/http_access_logger_test.c>>_package.lst
    fi
    if [ -f "http/http_access_logger.h" ]; then
        echo http/http_access_logger.h>>_package.lst
    fi
    if [ -f "http/http_access_logger.c" ]; then
        echo http/http_access_logger.c>>_package.lst
    fi
    if [ -f "http/http_access_policy_agent.smt" ]; then
        echo http/http_access_policy_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_policy_agent.h" ]; then
        echo http/http_access_policy_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_policy_agent.c" ]; then
        echo http/http_access_policy_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_policy_test.c" ]; then
        echo http/http_access_policy_test.c>>_package.lst
    fi
    if [ -f "http/http_access_policy.h" ]; then
        echo http/http_access_policy.h>>_package.lst
    fi
    if [ -f "http/http_access_policy.c" ]; then
        echo http/http_access_policy.c>>_package.lst
    fi
    if [ -f "http/http_access_refresh_agent.smt" ]; then
        echo http/http_access_refresh_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_refresh_agent.h" ]; then
        echo http/http_access_refresh_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_refresh_agent.c" ]; then
        echo http/http_access_refresh_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_refresh_test.c" ]; then
        echo http/http_access_refresh_test.c>>_package.lst
    fi
    if [ -f "http/http_access_refresh.h" ]; then
        echo http/http_access_refresh.h>>_package.lst
    fi
    if [ -f "http/http_access_refresh.c" ]; then
        echo http/http_access_refresh.c>>_package.lst
    fi
    if [ -f "http/http_access_dos_agent.smt" ]; then
        echo http/http_access_dos_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_dos_agent.h" ]; then
        echo http/http_access_dos_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_dos_agent.c" ]; then
        echo http/http_access_dos_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_dos_test.c" ]; then
        echo http/http_access_dos_test.c>>_package.lst
    fi
    if [ -f "http/http_access_dos.h" ]; then
        echo http/http_access_dos.h>>_package.lst
    fi
    if [ -f "http/http_access_dos.c" ]; then
        echo http/http_access_dos.c>>_package.lst
    fi
    if [ -f "http/http_agent.h" ]; then
        echo http/http_agent.h>>_package.lst
    fi
    if [ -f "http/http_agent.c" ]; then
        echo http/http_agent.c>>_package.lst
    fi
    if [ -f "http/http_server_agent.smt" ]; then
        echo http/http_server_agent.smt>>_package.lst
    fi
    if [ -f "http/http_server_agent.h" ]; then
        echo http/http_server_agent.h>>_package.lst
    fi
    if [ -f "http/http_server_agent.c" ]; then
        echo http/http_server_agent.c>>_package.lst
    fi
    if [ -f "http/http_server_test.c" ]; then
        echo http/http_server_test.c>>_package.lst
    fi
    if [ -f "http/http_server.h" ]; then
        echo http/http_server.h>>_package.lst
    fi
    if [ -f "http/http_server.c" ]; then
        echo http/http_server.c>>_package.lst
    fi
    if [ -f "http/http.h" ]; then
        echo http/http.h>>_package.lst
    fi
    if [ -f "http/http.c" ]; then
        echo http/http.c>>_package.lst
    fi
    if [ -f "http/http_static.icl" ]; then
        echo http/http_static.icl>>_package.lst
    fi
    if [ -f "http/http_static_test.c" ]; then
        echo http/http_static_test.c>>_package.lst
    fi
    if [ -f "http/http_static.h" ]; then
        echo http/http_static.h>>_package.lst
    fi
    if [ -f "http/http_static.c" ]; then
        echo http/http_static.c>>_package.lst
    fi
    if [ -f "http/stamp_generate" ]; then
        echo http/stamp_generate>>_package.lst
    fi
    if [ -f "http/boomakew.bat" ]; then
        echo http/boomakew.bat>>_package.lst
    fi
    if [ -f "http/configure" ]; then
        echo http/configure>>_package.lst
    fi
    if [ -f "http/Makefile.unix" ]; then
        echo http/Makefile.unix>>_package.lst
    fi
    if [ -f "http/boomake" ]; then
        echo http/boomake>>_package.lst
    fi
    if [ -f "http/configure.bat" ]; then
        echo http/configure.bat>>_package.lst
    fi
    if [ -f "http/Makefile.win32" ]; then
        echo http/Makefile.win32>>_package.lst
    fi
    if [ -f "http/boomake.bat" ]; then
        echo http/boomake.bat>>_package.lst
    fi
    if [ -f "http/libhttp.vcproj" ]; then
        echo http/libhttp.vcproj>>_package.lst
    fi
    if [ -f "http/webpages/default.html" ]; then
        echo http/webpages/default.html>>_package.lst
    fi
    if [ -f "http/webpages/default.css" ]; then
        echo http/webpages/default.css>>_package.lst
    fi
    PUSHDIR=`pwd`
    cd xitami
    cd $PUSHDIR
    if [ -f "xitami/version.h" ]; then
        echo xitami/version.h>>_package.lst
    fi
    if [ -f "xitami/xitami.c" ]; then
        echo xitami/xitami.c>>_package.lst
    fi
    if [ -f "xitami/xitami.sln" ]; then
        echo xitami/xitami.sln>>_package.lst
    fi
    if [ -f "xitami/prelude.pdl" ]; then
        echo xitami/prelude.pdl>>_package.lst
    fi
    if [ -f "xitami/license.gpl" ]; then
        echo xitami/license.gpl>>_package.lst
    fi
    if [ -f "xitami/project.pdl" ]; then
        echo xitami/project.pdl>>_package.lst
    fi
    if [ -f "xitami/readme.txt" ]; then
        echo xitami/readme.txt>>_package.lst
    fi
    if [ -f "xitami/stamp_generate" ]; then
        echo xitami/stamp_generate>>_package.lst
    fi
    if [ -f "xitami/boomakew.bat" ]; then
        echo xitami/boomakew.bat>>_package.lst
    fi
    if [ -f "xitami/configure" ]; then
        echo xitami/configure>>_package.lst
    fi
    if [ -f "xitami/Makefile.unix" ]; then
        echo xitami/Makefile.unix>>_package.lst
    fi
    if [ -f "xitami/boomake" ]; then
        echo xitami/boomake>>_package.lst
    fi
    if [ -f "xitami/configure.bat" ]; then
        echo xitami/configure.bat>>_package.lst
    fi
    if [ -f "xitami/Makefile.win32" ]; then
        echo xitami/Makefile.win32>>_package.lst
    fi
    if [ -f "xitami/boomake.bat" ]; then
        echo xitami/boomake.bat>>_package.lst
    fi
    if [ -f "xitami/xitami.vcproj" ]; then
        echo xitami/xitami.vcproj>>_package.lst
    fi
    if [ -f "xitami/liblocal.vcproj" ]; then
        echo xitami/liblocal.vcproj>>_package.lst
    fi
    if [ -f "xitami/webpages/default.html" ]; then
        echo xitami/webpages/default.html>>_package.lst
    fi
    if [ -f "xitami/webpages/default.css" ]; then
        echo xitami/webpages/default.css>>_package.lst
    fi
    echo "Source package successfully generated">xnf/stamp_source
    echo "xnf/stamp_source" >>_package.lst
    echo "Source package successfully generated">icl/stamp_source
    echo "icl/stamp_source" >>_package.lst
    echo "Source package successfully generated">ipr/stamp_source
    echo "ipr/stamp_source" >>_package.lst
    echo "Source package successfully generated">smt/stamp_source
    echo "smt/stamp_source" >>_package.lst
    echo "Source package successfully generated">opf/stamp_source
    echo "opf/stamp_source" >>_package.lst
    echo "Source package successfully generated">asl/stamp_source
    echo "asl/stamp_source" >>_package.lst
    echo "Source package successfully generated">http/stamp_source
    echo "http/stamp_source" >>_package.lst
    echo "Source package successfully generated">xitami/stamp_source
    echo "xitami/stamp_source" >>_package.lst
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    carp "Building base2-$MY_VERSION-src.tar.gz..."
    zip  -rq _package.zip -@<_package.lst
    unzip -q _package.zip -d base2-$MY_VERSION
    rm -f base2-$MY_VERSION-src.tar.gz
    tar -cf  base2-$MY_VERSION-src.tar base2-$MY_VERSION
    gzip base2-$MY_VERSION-src.tar
    rm -f base2-$MY_VERSION-src.zip
    carp "Building base2-$MY_VERSION-src.zip..."
    zip -lrmq base2-$MY_VERSION-src.zip base2-$MY_VERSION
    rm _package.zip
    rm _package.lst
    rm stamp_source
    rm -f xnf/stamp_source
    rm -f icl/stamp_source
    rm -f ipr/stamp_source
    rm -f smt/stamp_source
    rm -f opf/stamp_source
    rm -f asl/stamp_source
    rm -f http/stamp_source
    rm -f xitami/stamp_source
}

# ----------------------------   BUILD PROJECTS   -----------------------------

a_build_projects() {
:
    rm -rf _install
    mkdir _install
    mkdir _install/lib
    mkdir _install/include
    mkdir _install/bin
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake -install ../_install build install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
}

# ------------------------   CHECK OPERATING CONTEXT   ------------------------

a_check_operating_context() {
:
    if [ -f ./stamp_stripped ]; then
        event=stripped
    elif [ -f ./stamp_source ]; then
        event=source
    else
        event=repository
    fi
}

# ----------------------------   CLEAN PROJECTS   -----------------------------

a_clean_projects() {
:
    rm -rf _install
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake clean || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    rm -f base2_*.zip
    rm -f base2_*.tar.gz
}

# ---------------------------   COMPILE PROJECTS   ----------------------------

a_compile_projects() {
:
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake compile || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
}

# ---------------------------   INSTALL PROJECTS   ----------------------------

a_install_projects() {
:
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake install || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    if [ -f ./installer ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./installer"
    sh ./installer || croak "\"sh ./installer\" failed"
    fi
}

# ----------------------------   REGEN PROJECTS   -----------------------------

a_regen_projects() {
:
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake regen || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
}

# ------------------------   REPORT HELP INFORMATION   ------------------------

a_report_help_information() {
:
    echo "The commands you can currently use on this project are:"
    echo ""
    eval "actions_$state"
}

# ------------------------   REPORT PROJECT VERSION   -------------------------

a_report_project_version() {
:
    echo "base2-2.3"
}

# -----------------------------   TEST PROJECTS   -----------------------------

a_test_projects() {
:
    PUSHDIR=`pwd`
    cd xnf
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd icl
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd ipr
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd smt
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd opf
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd asl
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd http
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    PUSHDIR=`pwd`
    cd xitami
    if [ -f boomake ]; then
        sh boomake test || croak
    else
        croak "Project has not been configured - boomake is missing"
    fi
    cd $PUSHDIR
    if [ -f ./selftest ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./selftest"
    sh ./selftest || croak "\"sh ./selftest\" failed"
    fi
}

# ----------------------   USE SOURCE CONTROL REVISION   ----------------------

a_use_source_control_revision() {
:
    if [ -d .svn ]; then
        SVN_REVISION="`svn info | awk '/^Revision:/ { print $2 }'`"
    else
        SVN_REVISION="svn"
    fi
    MY_VERSION=${MY_VERSION}-${SVN_REVISION}
}

actions_initial() {
    return
}

actions_initial_check() {
    return
}

actions_repository() {
echo "build:"
    echo "  For each project in the product, regenerate code and build binary"
    echo "    files ready for installation.  The projects are built in their"
    echo "    individual directories and installed into the temporary install tree."
echo "compile:"
    echo "  For each project in the product, build binary files ready for installation,"
    echo "    but don't run the code generation phase .  The projects are built in their"
    echo "    individual directories and installed into the temporary install tree."
echo "clean:"
    echo "  Deletes generated project files.  This action removes generated source"
    echo "    and binary files."
echo "regen:"
    echo "  For each project in the product, regenerate any source files that"
    echo "    are produced via GSL, Libero or another code generation tool."
    echo "    Generates only those files that are required to build under"
    echo "    the current model."
echo "allgen:"
    echo "  For each project in the product, regenerate any source files that"
    echo "    are produced via GSL, Libero or another code generation tool."
    echo "    Generates all files."
echo "distrib:"
    echo "  Build all projects and create full distribution packages.  If you do"
    echo "    not want to rebuild the projects, you can use the 'distsrc' and 'distbin'"
    echo "    actions as shortcuts."
echo "distsrc:"
    echo "  Build source distribution packages based on product version number."
echo "distrev:"
    echo "  Build source distribution packages based on source control revision"
    echo "    number."
actions_default
    return
}

actions_source() {
echo "build:"
    echo "  For each project in the product, build binary files ready for"
    echo "    installation.  The projects are built in their individual directories"
    echo "    and installed into the temporary install tree."
echo "clean:"
    echo "  Deletes generated project files.  This action removes generated binary"
    echo "    files."
echo "regen:"
    echo "  For each project in the product, regenerate any source files that"
    echo "    are produced via GSL, Libero or another code generation tool."
    echo "    Generates only those files that are required to build under"
    echo "    the current model."
echo "allgen:"
    echo "  For each project in the product, regenerate any source files that"
    echo "    are produced via GSL, Libero or another code generation tool."
    echo "    Generates all files."
actions_default
    return
}

actions_stripped() {
echo "build:"
    echo "  For each project in the product, build binary files ready for"
    echo "    installation.  The projects are built in their individual directories"
    echo "    and installed into the temporary install tree."
echo "clean:"
    echo "  Deletes generated project files.  This action removes generated binary"
    echo "    files."
actions_default
    return
}

actions_default() {
echo "install:"
    echo "  Install each project into its target directory.  The projects must"
    echo "    have been built (and installed into the temporary install tree, which"
    echo "    is what the build action does)."
echo "distbin:"
    echo "  Build binary distribution packages.  The actual packages built depend on"
    echo "    the project packagers used, but typically you will get a ZIP or TGZ file"
    echo "    containing all the projects' deliverables.  Note that this action works"
    echo "    entirely from the temporary install tree, which the 'build' action makes."
echo "test:"
    echo "  Runs each project's test process."
echo "help:"
    echo "  Shows a list of the commands allowed on the project."
echo "version:"
    echo "  Show product version."
    return
}

#   State machine starts here
#
firsttime=true
while [ "$1" -o "$firsttime" ]; do
  firsttime=
  state=initial
  event=ok
  debug=
  export state event debug
  while [ -n "$state" ]; do
    if [ "$inherit_state" ]; then
        check_state=$inherit_state
        inherit_state=
    else
        check_state=$state
    fi
    case "$check_state" in
    initial)
        if [ -n "$debug" ]; then
            echo "State: initial"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        ok)
            if [ -n "$debug" ]; then
                echo "Event: ok"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check operating context"
            fi
            if [ -z "$exception" ]; then
                a_check_operating_context
            fi
            state=initial_check
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    initial_check)
        if [ -n "$debug" ]; then
            echo "State: initial check"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        repository)
            if [ -n "$debug" ]; then
                echo "Event: repository"
            fi
            event=
            exception=
            state=repository
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        source)
            if [ -n "$debug" ]; then
                echo "Event: source"
            fi
            event=
            exception=
            state=source
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        stripped)
            if [ -n "$debug" ]; then
                echo "Event: stripped"
            fi
            event=
            exception=
            state=stripped
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    repository)
        if [ -n "$debug" ]; then
            echo "State: repository"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build projects"
            fi
            if [ -z "$exception" ]; then
                a_build_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        compile)
            if [ -n "$debug" ]; then
                echo "Event: compile"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: compile projects"
            fi
            if [ -z "$exception" ]; then
                a_compile_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: clean projects"
            fi
            if [ -z "$exception" ]; then
                a_clean_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: regen projects"
            fi
            if [ -z "$exception" ]; then
                a_regen_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: allgen projects"
            fi
            if [ -z "$exception" ]; then
                a_allgen_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrib)
            if [ -n "$debug" ]; then
                echo "Event: distrib"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build projects"
            fi
            if [ -z "$exception" ]; then
                a_build_projects
            fi
            if [ -n "$debug" ]; then
                echo "Action: build product source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_product_source_packages
            fi
            if [ -n "$debug" ]; then
                echo "Action: build product install packages"
            fi
            if [ -z "$exception" ]; then
                a_build_product_install_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distsrc)
            if [ -n "$debug" ]; then
                echo "Event: distsrc"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: allgen projects"
            fi
            if [ -z "$exception" ]; then
                a_allgen_projects
            fi
            if [ -n "$debug" ]; then
                echo "Action: build product source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_product_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrev)
            if [ -n "$debug" ]; then
                echo "Event: distrev"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: allgen projects"
            fi
            if [ -z "$exception" ]; then
                a_allgen_projects
            fi
            if [ -n "$debug" ]; then
                echo "Action: use source control revision"
            fi
            if [ -z "$exception" ]; then
                a_use_source_control_revision
            fi
            if [ -n "$debug" ]; then
                echo "Action: build product source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_product_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    source)
        if [ -n "$debug" ]; then
            echo "State: source"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build projects"
            fi
            if [ -z "$exception" ]; then
                a_build_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: clean projects"
            fi
            if [ -z "$exception" ]; then
                a_clean_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: regen projects"
            fi
            if [ -z "$exception" ]; then
                a_regen_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: allgen projects"
            fi
            if [ -z "$exception" ]; then
                a_allgen_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    stripped)
        if [ -n "$debug" ]; then
            echo "State: stripped"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build projects"
            fi
            if [ -z "$exception" ]; then
                a_build_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: clean projects"
            fi
            if [ -z "$exception" ]; then
                a_clean_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    default)
        if [ -n "$debug" ]; then
            echo "State: default"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        install)
            if [ -n "$debug" ]; then
                echo "Event: install"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: install projects"
            fi
            if [ -z "$exception" ]; then
                a_install_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distbin)
            if [ -n "$debug" ]; then
                echo "Event: distbin"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build product install packages"
            fi
            if [ -z "$exception" ]; then
                a_build_product_install_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        test)
            if [ -n "$debug" ]; then
                echo "Event: test"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: test projects"
            fi
            if [ -z "$exception" ]; then
                a_test_projects
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        help)
            if [ -n "$debug" ]; then
                echo "Event: help"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        version)
            if [ -n "$debug" ]; then
                echo "Event: version"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report project version"
            fi
            if [ -z "$exception" ]; then
                a_report_project_version
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        empty)
            if [ -n "$debug" ]; then
                echo "Event: empty"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    esac
  done
done
