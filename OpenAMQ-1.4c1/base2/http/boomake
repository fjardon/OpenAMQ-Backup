#!/bin/sh
#
#   Boom builder for http 1.0
#   Generated by iMatix Boom from standard.pwl
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   All rights reserved.
#   
#   This file is licensed under the BSD license as follows:
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of iMatix Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#   Force environment variables to point to install location
#   Start by using final IBASE, then handle local -install path
#
boom_model_list () {
    set |
        awk 'BEGIN                      { FS="[=_]" }
             /^BOOM_MODEL_[A-Z0-9]*=1$/ { print $3  }'
}
boom_model_expand () {
    for MODEL in `boom_model_list`; do
        eval unset BOOM_MODEL_$MODEL
    done
    OLD_IFS=$IFS
    IFS=,
    for MODEL in $BOOM_MODEL; do
        MODEL=`echo $MODEL | tr \[a-z\] \[A-Z\]`
        eval BOOM_MODEL_$MODEL=1
        eval export BOOM_MODEL_$MODEL
    done
    IFS=$OLD_IFS
}
croak() {
    if [ -n "$*" ]; then
        echo "boom E: [http]: $* - stop" 1>&2
    else
        echo "boom E: [http]: stop" 1>&2
    fi
    exit 1
}
carp() {
    echo "boom I: [http]: $*" 1>&2
}
trap 'croak "Interrupted"' INT
trap 'croak "Terminated"' TERM
trap 'croak "Quit"' QUIT
self=$0
MY_VERSION="1.0"
#
#   Set default values for BOOM_MODEL
#
#   Default is release,mt on all platforms.
#
if [ -z "$BOOM_MODEL" ]; then
    BOOM_MODEL=release,mt
fi
boom_model_expand
if [ "$BOOM_MODEL_RELEASE" != "1" ]; then
    if [ "$BOOM_MODEL_DEBUG" != "1" ]; then
        BOOM_MODEL_RELEASE=1
        BOOM_MODEL="$BOOM_MODEL,release"
    fi
fi
if [ "$BOOM_MODEL_ST" != "1" ]; then
    if [ "$BOOM_MODEL_MT" != "1" ]; then
            BOOM_MODEL="$BOOM_MODEL,mt"
    fi
fi
if [ -z "$IBASE" ]; then
    carp "The IBASE variable is not set.  Please set it to the location where http should be installed."
    exit 1
fi
if [ "$1" = "-v" ]; then
    BOOM_TRACE=1
    export BOOM_TRACE
    shift
fi
if [ "$1" != "-install" ]; then
    #   Normal use, use IBASE
    PATH=.:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$IBASE/include; export INCDIR_ALT
    _LOCAL_BASE=
    _INSTALL_ROOT=$IBASE
else
    #   Building product, we use -install directory first, then IBASE
    CURDIR=`pwd`
    cd $2
    _LOCAL_BASE=`pwd`
    cd $CURDIR
    PATH=.:$_LOCAL_BASE/bin:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$_LOCAL_BASE/bin:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$_LOCAL_BASE/include:$IBASE/include; export INCDIR_ALT
    shift
    shift
    _INSTALL_ROOT=$_LOCAL_BASE
fi

# --------------------------   BUILD BINARY FILES   ---------------------------

a_build_binary_files() {
:
    carp "Building http..."
    #   To prevent compatibility warnings...
    INCDIR=
    LIBDIR=
    export LIBDIR INCDIR
    if [ "$BOOM_TRACE" ]; then
        MY_COPTS=-v
    else
        MY_COPTS=-q
    fi
    if [ ! -z "$_LOCAL_BASE" ]; then
        MY_COPTS="$MY_COPTS -li $_LOCAL_BASE/include -ll $_LOCAL_BASE/lib"
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS httpd"
    c $MY_COPTS httpd || croak "\"c $MY_COPTS httpd\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_config_test"
    c $MY_COPTS http_config_test || croak "\"c $MY_COPTS http_config_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_config"
    c $MY_COPTS http_config || croak "\"c $MY_COPTS http_config\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_address_test"
    c $MY_COPTS http_address_test || croak "\"c $MY_COPTS http_address_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_address"
    c $MY_COPTS http_address || croak "\"c $MY_COPTS http_address\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_address_table_test"
    c $MY_COPTS http_address_table_test || croak "\"c $MY_COPTS http_address_table_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_address_table"
    c $MY_COPTS http_address_table || croak "\"c $MY_COPTS http_address_table\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_request_test"
    c $MY_COPTS http_request_test || croak "\"c $MY_COPTS http_request_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_request"
    c $MY_COPTS http_request || croak "\"c $MY_COPTS http_request\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_response_test"
    c $MY_COPTS http_response_test || croak "\"c $MY_COPTS http_response_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_response"
    c $MY_COPTS http_response || croak "\"c $MY_COPTS http_response\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_module_test"
    c $MY_COPTS http_driver_module_test || croak "\"c $MY_COPTS http_driver_module_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_module"
    c $MY_COPTS http_driver_module || croak "\"c $MY_COPTS http_driver_module\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_module_test"
    c $MY_COPTS http_access_module_test || croak "\"c $MY_COPTS http_access_module_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_module"
    c $MY_COPTS http_access_module || croak "\"c $MY_COPTS http_access_module\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_context_test"
    c $MY_COPTS http_driver_context_test || croak "\"c $MY_COPTS http_driver_context_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_context"
    c $MY_COPTS http_driver_context || croak "\"c $MY_COPTS http_driver_context\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_context_test"
    c $MY_COPTS http_access_context_test || croak "\"c $MY_COPTS http_access_context_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_context"
    c $MY_COPTS http_access_context || croak "\"c $MY_COPTS http_access_context\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_file_agent"
    c $MY_COPTS http_driver_file_agent || croak "\"c $MY_COPTS http_driver_file_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_file_test"
    c $MY_COPTS http_driver_file_test || croak "\"c $MY_COPTS http_driver_file_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_file"
    c $MY_COPTS http_driver_file || croak "\"c $MY_COPTS http_driver_file\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_cgi_agent"
    c $MY_COPTS http_driver_cgi_agent || croak "\"c $MY_COPTS http_driver_cgi_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_cgi_test"
    c $MY_COPTS http_driver_cgi_test || croak "\"c $MY_COPTS http_driver_cgi_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_cgi"
    c $MY_COPTS http_driver_cgi || croak "\"c $MY_COPTS http_driver_cgi\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_null_agent"
    c $MY_COPTS http_driver_null_agent || croak "\"c $MY_COPTS http_driver_null_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_null_test"
    c $MY_COPTS http_driver_null_test || croak "\"c $MY_COPTS http_driver_null_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_driver_null"
    c $MY_COPTS http_driver_null || croak "\"c $MY_COPTS http_driver_null\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_logger_agent"
    c $MY_COPTS http_access_logger_agent || croak "\"c $MY_COPTS http_access_logger_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_logger_test"
    c $MY_COPTS http_access_logger_test || croak "\"c $MY_COPTS http_access_logger_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_logger"
    c $MY_COPTS http_access_logger || croak "\"c $MY_COPTS http_access_logger\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_policy_agent"
    c $MY_COPTS http_access_policy_agent || croak "\"c $MY_COPTS http_access_policy_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_policy_test"
    c $MY_COPTS http_access_policy_test || croak "\"c $MY_COPTS http_access_policy_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_policy"
    c $MY_COPTS http_access_policy || croak "\"c $MY_COPTS http_access_policy\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_refresh_agent"
    c $MY_COPTS http_access_refresh_agent || croak "\"c $MY_COPTS http_access_refresh_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_refresh_test"
    c $MY_COPTS http_access_refresh_test || croak "\"c $MY_COPTS http_access_refresh_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_refresh"
    c $MY_COPTS http_access_refresh || croak "\"c $MY_COPTS http_access_refresh\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_dos_agent"
    c $MY_COPTS http_access_dos_agent || croak "\"c $MY_COPTS http_access_dos_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_dos_test"
    c $MY_COPTS http_access_dos_test || croak "\"c $MY_COPTS http_access_dos_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_access_dos"
    c $MY_COPTS http_access_dos || croak "\"c $MY_COPTS http_access_dos\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_agent"
    c $MY_COPTS http_agent || croak "\"c $MY_COPTS http_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_server_agent"
    c $MY_COPTS http_server_agent || croak "\"c $MY_COPTS http_server_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_server_test"
    c $MY_COPTS http_server_test || croak "\"c $MY_COPTS http_server_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_server"
    c $MY_COPTS http_server || croak "\"c $MY_COPTS http_server\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http"
    c $MY_COPTS http || croak "\"c $MY_COPTS http\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_static_test"
    c $MY_COPTS http_static_test || croak "\"c $MY_COPTS http_static_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS http_static"
    c $MY_COPTS http_static || croak "\"c $MY_COPTS http_static\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_config"
    c $MY_COPTS -r libhttp http_config || croak "\"c $MY_COPTS -r libhttp http_config\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_address"
    c $MY_COPTS -r libhttp http_address || croak "\"c $MY_COPTS -r libhttp http_address\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_address_table"
    c $MY_COPTS -r libhttp http_address_table || croak "\"c $MY_COPTS -r libhttp http_address_table\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_request"
    c $MY_COPTS -r libhttp http_request || croak "\"c $MY_COPTS -r libhttp http_request\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_response"
    c $MY_COPTS -r libhttp http_response || croak "\"c $MY_COPTS -r libhttp http_response\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_module"
    c $MY_COPTS -r libhttp http_driver_module || croak "\"c $MY_COPTS -r libhttp http_driver_module\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_module"
    c $MY_COPTS -r libhttp http_access_module || croak "\"c $MY_COPTS -r libhttp http_access_module\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_context"
    c $MY_COPTS -r libhttp http_driver_context || croak "\"c $MY_COPTS -r libhttp http_driver_context\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_context"
    c $MY_COPTS -r libhttp http_access_context || croak "\"c $MY_COPTS -r libhttp http_access_context\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_file_agent"
    c $MY_COPTS -r libhttp http_driver_file_agent || croak "\"c $MY_COPTS -r libhttp http_driver_file_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_file"
    c $MY_COPTS -r libhttp http_driver_file || croak "\"c $MY_COPTS -r libhttp http_driver_file\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_cgi_agent"
    c $MY_COPTS -r libhttp http_driver_cgi_agent || croak "\"c $MY_COPTS -r libhttp http_driver_cgi_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_cgi"
    c $MY_COPTS -r libhttp http_driver_cgi || croak "\"c $MY_COPTS -r libhttp http_driver_cgi\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_null_agent"
    c $MY_COPTS -r libhttp http_driver_null_agent || croak "\"c $MY_COPTS -r libhttp http_driver_null_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_driver_null"
    c $MY_COPTS -r libhttp http_driver_null || croak "\"c $MY_COPTS -r libhttp http_driver_null\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_logger_agent"
    c $MY_COPTS -r libhttp http_access_logger_agent || croak "\"c $MY_COPTS -r libhttp http_access_logger_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_logger"
    c $MY_COPTS -r libhttp http_access_logger || croak "\"c $MY_COPTS -r libhttp http_access_logger\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_policy_agent"
    c $MY_COPTS -r libhttp http_access_policy_agent || croak "\"c $MY_COPTS -r libhttp http_access_policy_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_policy"
    c $MY_COPTS -r libhttp http_access_policy || croak "\"c $MY_COPTS -r libhttp http_access_policy\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_refresh_agent"
    c $MY_COPTS -r libhttp http_access_refresh_agent || croak "\"c $MY_COPTS -r libhttp http_access_refresh_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_refresh"
    c $MY_COPTS -r libhttp http_access_refresh || croak "\"c $MY_COPTS -r libhttp http_access_refresh\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_dos_agent"
    c $MY_COPTS -r libhttp http_access_dos_agent || croak "\"c $MY_COPTS -r libhttp http_access_dos_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_access_dos"
    c $MY_COPTS -r libhttp http_access_dos || croak "\"c $MY_COPTS -r libhttp http_access_dos\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_agent"
    c $MY_COPTS -r libhttp http_agent || croak "\"c $MY_COPTS -r libhttp http_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_server_agent"
    c $MY_COPTS -r libhttp http_server_agent || croak "\"c $MY_COPTS -r libhttp http_server_agent\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_server"
    c $MY_COPTS -r libhttp http_server || croak "\"c $MY_COPTS -r libhttp http_server\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http"
    c $MY_COPTS -r libhttp http || croak "\"c $MY_COPTS -r libhttp http\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libhttp http_static"
    c $MY_COPTS -r libhttp http_static || croak "\"c $MY_COPTS -r libhttp http_static\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L httpd"
    c $MY_COPTS -L httpd || croak "\"c $MY_COPTS -L httpd\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_config_test"
    c $MY_COPTS -L http_config_test || croak "\"c $MY_COPTS -L http_config_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_address_test"
    c $MY_COPTS -L http_address_test || croak "\"c $MY_COPTS -L http_address_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_address_table_test"
    c $MY_COPTS -L http_address_table_test || croak "\"c $MY_COPTS -L http_address_table_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_request_test"
    c $MY_COPTS -L http_request_test || croak "\"c $MY_COPTS -L http_request_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_response_test"
    c $MY_COPTS -L http_response_test || croak "\"c $MY_COPTS -L http_response_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_driver_module_test"
    c $MY_COPTS -L http_driver_module_test || croak "\"c $MY_COPTS -L http_driver_module_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_access_module_test"
    c $MY_COPTS -L http_access_module_test || croak "\"c $MY_COPTS -L http_access_module_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_driver_context_test"
    c $MY_COPTS -L http_driver_context_test || croak "\"c $MY_COPTS -L http_driver_context_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_access_context_test"
    c $MY_COPTS -L http_access_context_test || croak "\"c $MY_COPTS -L http_access_context_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_driver_file_test"
    c $MY_COPTS -L http_driver_file_test || croak "\"c $MY_COPTS -L http_driver_file_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_driver_cgi_test"
    c $MY_COPTS -L http_driver_cgi_test || croak "\"c $MY_COPTS -L http_driver_cgi_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_driver_null_test"
    c $MY_COPTS -L http_driver_null_test || croak "\"c $MY_COPTS -L http_driver_null_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_access_logger_test"
    c $MY_COPTS -L http_access_logger_test || croak "\"c $MY_COPTS -L http_access_logger_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_access_policy_test"
    c $MY_COPTS -L http_access_policy_test || croak "\"c $MY_COPTS -L http_access_policy_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_access_refresh_test"
    c $MY_COPTS -L http_access_refresh_test || croak "\"c $MY_COPTS -L http_access_refresh_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_access_dos_test"
    c $MY_COPTS -L http_access_dos_test || croak "\"c $MY_COPTS -L http_access_dos_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_server_test"
    c $MY_COPTS -L http_server_test || croak "\"c $MY_COPTS -L http_server_test\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L http_static_test"
    c $MY_COPTS -L http_static_test || croak "\"c $MY_COPTS -L http_static_test\" failed"
    PUSHDIR=`pwd`
    cd webpages/
    cd $PUSHDIR
}

# -------------------------   BUILD SOURCE PACKAGES   -------------------------

a_build_source_packages() {
:
    rm -f _package.lst
    if [ -f "http/version.h" ]; then
        echo http/version.h>>_package.lst
    fi
    if [ -f "http/http_config.opf" ]; then
        echo http/http_config.opf>>_package.lst
    fi
    if [ -f "http/http_main.inc" ]; then
        echo http/http_main.inc>>_package.lst
    fi
    if [ -f "http/http_address.icl" ]; then
        echo http/http_address.icl>>_package.lst
    fi
    if [ -f "http/http_address_table.icl" ]; then
        echo http/http_address_table.icl>>_package.lst
    fi
    if [ -f "http/http_request.icl" ]; then
        echo http/http_request.icl>>_package.lst
    fi
    if [ -f "http/http_response.icl" ]; then
        echo http/http_response.icl>>_package.lst
    fi
    if [ -f "http/http_driver_module.icl" ]; then
        echo http/http_driver_module.icl>>_package.lst
    fi
    if [ -f "http/http_access_module.icl" ]; then
        echo http/http_access_module.icl>>_package.lst
    fi
    if [ -f "http/http_driver_context.icl" ]; then
        echo http/http_driver_context.icl>>_package.lst
    fi
    if [ -f "http/http_access_context.icl" ]; then
        echo http/http_access_context.icl>>_package.lst
    fi
    if [ -f "http/http_driver_file.icl" ]; then
        echo http/http_driver_file.icl>>_package.lst
    fi
    if [ -f "http/http_driver_cgi.icl" ]; then
        echo http/http_driver_cgi.icl>>_package.lst
    fi
    if [ -f "http/http_driver_null.icl" ]; then
        echo http/http_driver_null.icl>>_package.lst
    fi
    if [ -f "http/http_access_logger.icl" ]; then
        echo http/http_access_logger.icl>>_package.lst
    fi
    if [ -f "http/http_access_policy.icl" ]; then
        echo http/http_access_policy.icl>>_package.lst
    fi
    if [ -f "http/http_access_refresh.icl" ]; then
        echo http/http_access_refresh.icl>>_package.lst
    fi
    if [ -f "http/http_access_dos.icl" ]; then
        echo http/http_access_dos.icl>>_package.lst
    fi
    if [ -f "http/http_refresh.pl" ]; then
        echo http/http_refresh.pl>>_package.lst
    fi
    if [ -f "http/http_agent.smt" ]; then
        echo http/http_agent.smt>>_package.lst
    fi
    if [ -f "http/http_server.icl" ]; then
        echo http/http_server.icl>>_package.lst
    fi
    if [ -f "http/http.icl" ]; then
        echo http/http.icl>>_package.lst
    fi
    if [ -f "http/http_static.rc" ]; then
        echo http/http_static.rc>>_package.lst
    fi
    if [ -f "http/http_base.cfg" ]; then
        echo http/http_base.cfg>>_package.lst
    fi
    if [ -f "http/http_base.css" ]; then
        echo http/http_base.css>>_package.lst
    fi
    if [ -f "http/httpd.c" ]; then
        echo http/httpd.c>>_package.lst
    fi
    if [ -f "http/prelude.pdl" ]; then
        echo http/prelude.pdl>>_package.lst
    fi
    if [ -f "http/license.gpl" ]; then
        echo http/license.gpl>>_package.lst
    fi
    if [ -f "http/project.pdl" ]; then
        echo http/project.pdl>>_package.lst
    fi
    if [ -f "http/readme.txt" ]; then
        echo http/readme.txt>>_package.lst
    fi
    if [ -f "http/http_config.icl" ]; then
        echo http/http_config.icl>>_package.lst
    fi
    if [ -f "http/http_config_test.c" ]; then
        echo http/http_config_test.c>>_package.lst
    fi
    if [ -f "http/http_config.h" ]; then
        echo http/http_config.h>>_package.lst
    fi
    if [ -f "http/http_config.c" ]; then
        echo http/http_config.c>>_package.lst
    fi
    if [ -f "http/http_config.txt" ]; then
        echo http/http_config.txt>>_package.lst
    fi
    if [ -f "http/http_address_test.c" ]; then
        echo http/http_address_test.c>>_package.lst
    fi
    if [ -f "http/http_address.h" ]; then
        echo http/http_address.h>>_package.lst
    fi
    if [ -f "http/http_address.c" ]; then
        echo http/http_address.c>>_package.lst
    fi
    if [ -f "http/http_address_table_test.c" ]; then
        echo http/http_address_table_test.c>>_package.lst
    fi
    if [ -f "http/http_address_table.h" ]; then
        echo http/http_address_table.h>>_package.lst
    fi
    if [ -f "http/http_address_table.c" ]; then
        echo http/http_address_table.c>>_package.lst
    fi
    if [ -f "http/http_request_test.c" ]; then
        echo http/http_request_test.c>>_package.lst
    fi
    if [ -f "http/http_request.h" ]; then
        echo http/http_request.h>>_package.lst
    fi
    if [ -f "http/http_request.c" ]; then
        echo http/http_request.c>>_package.lst
    fi
    if [ -f "http/http_response_test.c" ]; then
        echo http/http_response_test.c>>_package.lst
    fi
    if [ -f "http/http_response.h" ]; then
        echo http/http_response.h>>_package.lst
    fi
    if [ -f "http/http_response.c" ]; then
        echo http/http_response.c>>_package.lst
    fi
    if [ -f "http/http_driver_module_front.icl" ]; then
        echo http/http_driver_module_front.icl>>_package.lst
    fi
    if [ -f "http/http_driver_module_back.icl" ]; then
        echo http/http_driver_module_back.icl>>_package.lst
    fi
    if [ -f "http/http_driver_module_test.c" ]; then
        echo http/http_driver_module_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_module.h" ]; then
        echo http/http_driver_module.h>>_package.lst
    fi
    if [ -f "http/http_driver_module.c" ]; then
        echo http/http_driver_module.c>>_package.lst
    fi
    if [ -f "http/http_access_module_front.icl" ]; then
        echo http/http_access_module_front.icl>>_package.lst
    fi
    if [ -f "http/http_access_module_back.icl" ]; then
        echo http/http_access_module_back.icl>>_package.lst
    fi
    if [ -f "http/http_access_module_test.c" ]; then
        echo http/http_access_module_test.c>>_package.lst
    fi
    if [ -f "http/http_access_module.h" ]; then
        echo http/http_access_module.h>>_package.lst
    fi
    if [ -f "http/http_access_module.c" ]; then
        echo http/http_access_module.c>>_package.lst
    fi
    if [ -f "http/http_driver_context_test.c" ]; then
        echo http/http_driver_context_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_context.h" ]; then
        echo http/http_driver_context.h>>_package.lst
    fi
    if [ -f "http/http_driver_context.c" ]; then
        echo http/http_driver_context.c>>_package.lst
    fi
    if [ -f "http/http_access_context_test.c" ]; then
        echo http/http_access_context_test.c>>_package.lst
    fi
    if [ -f "http/http_access_context.h" ]; then
        echo http/http_access_context.h>>_package.lst
    fi
    if [ -f "http/http_access_context.c" ]; then
        echo http/http_access_context.c>>_package.lst
    fi
    if [ -f "http/http_driver_file_agent.smt" ]; then
        echo http/http_driver_file_agent.smt>>_package.lst
    fi
    if [ -f "http/http_driver_file_agent.h" ]; then
        echo http/http_driver_file_agent.h>>_package.lst
    fi
    if [ -f "http/http_driver_file_agent.c" ]; then
        echo http/http_driver_file_agent.c>>_package.lst
    fi
    if [ -f "http/http_driver_file_test.c" ]; then
        echo http/http_driver_file_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_file.h" ]; then
        echo http/http_driver_file.h>>_package.lst
    fi
    if [ -f "http/http_driver_file.c" ]; then
        echo http/http_driver_file.c>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_agent.smt" ]; then
        echo http/http_driver_cgi_agent.smt>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_agent.h" ]; then
        echo http/http_driver_cgi_agent.h>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_agent.c" ]; then
        echo http/http_driver_cgi_agent.c>>_package.lst
    fi
    if [ -f "http/http_driver_cgi_test.c" ]; then
        echo http/http_driver_cgi_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_cgi.h" ]; then
        echo http/http_driver_cgi.h>>_package.lst
    fi
    if [ -f "http/http_driver_cgi.c" ]; then
        echo http/http_driver_cgi.c>>_package.lst
    fi
    if [ -f "http/http_driver_null_agent.smt" ]; then
        echo http/http_driver_null_agent.smt>>_package.lst
    fi
    if [ -f "http/http_driver_null_agent.h" ]; then
        echo http/http_driver_null_agent.h>>_package.lst
    fi
    if [ -f "http/http_driver_null_agent.c" ]; then
        echo http/http_driver_null_agent.c>>_package.lst
    fi
    if [ -f "http/http_driver_null_test.c" ]; then
        echo http/http_driver_null_test.c>>_package.lst
    fi
    if [ -f "http/http_driver_null.h" ]; then
        echo http/http_driver_null.h>>_package.lst
    fi
    if [ -f "http/http_driver_null.c" ]; then
        echo http/http_driver_null.c>>_package.lst
    fi
    if [ -f "http/http_access_logger_agent.smt" ]; then
        echo http/http_access_logger_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_logger_agent.h" ]; then
        echo http/http_access_logger_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_logger_agent.c" ]; then
        echo http/http_access_logger_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_logger_test.c" ]; then
        echo http/http_access_logger_test.c>>_package.lst
    fi
    if [ -f "http/http_access_logger.h" ]; then
        echo http/http_access_logger.h>>_package.lst
    fi
    if [ -f "http/http_access_logger.c" ]; then
        echo http/http_access_logger.c>>_package.lst
    fi
    if [ -f "http/http_access_policy_agent.smt" ]; then
        echo http/http_access_policy_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_policy_agent.h" ]; then
        echo http/http_access_policy_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_policy_agent.c" ]; then
        echo http/http_access_policy_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_policy_test.c" ]; then
        echo http/http_access_policy_test.c>>_package.lst
    fi
    if [ -f "http/http_access_policy.h" ]; then
        echo http/http_access_policy.h>>_package.lst
    fi
    if [ -f "http/http_access_policy.c" ]; then
        echo http/http_access_policy.c>>_package.lst
    fi
    if [ -f "http/http_access_refresh_agent.smt" ]; then
        echo http/http_access_refresh_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_refresh_agent.h" ]; then
        echo http/http_access_refresh_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_refresh_agent.c" ]; then
        echo http/http_access_refresh_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_refresh_test.c" ]; then
        echo http/http_access_refresh_test.c>>_package.lst
    fi
    if [ -f "http/http_access_refresh.h" ]; then
        echo http/http_access_refresh.h>>_package.lst
    fi
    if [ -f "http/http_access_refresh.c" ]; then
        echo http/http_access_refresh.c>>_package.lst
    fi
    if [ -f "http/http_access_dos_agent.smt" ]; then
        echo http/http_access_dos_agent.smt>>_package.lst
    fi
    if [ -f "http/http_access_dos_agent.h" ]; then
        echo http/http_access_dos_agent.h>>_package.lst
    fi
    if [ -f "http/http_access_dos_agent.c" ]; then
        echo http/http_access_dos_agent.c>>_package.lst
    fi
    if [ -f "http/http_access_dos_test.c" ]; then
        echo http/http_access_dos_test.c>>_package.lst
    fi
    if [ -f "http/http_access_dos.h" ]; then
        echo http/http_access_dos.h>>_package.lst
    fi
    if [ -f "http/http_access_dos.c" ]; then
        echo http/http_access_dos.c>>_package.lst
    fi
    if [ -f "http/http_agent.h" ]; then
        echo http/http_agent.h>>_package.lst
    fi
    if [ -f "http/http_agent.c" ]; then
        echo http/http_agent.c>>_package.lst
    fi
    if [ -f "http/http_server_agent.smt" ]; then
        echo http/http_server_agent.smt>>_package.lst
    fi
    if [ -f "http/http_server_agent.h" ]; then
        echo http/http_server_agent.h>>_package.lst
    fi
    if [ -f "http/http_server_agent.c" ]; then
        echo http/http_server_agent.c>>_package.lst
    fi
    if [ -f "http/http_server_test.c" ]; then
        echo http/http_server_test.c>>_package.lst
    fi
    if [ -f "http/http_server.h" ]; then
        echo http/http_server.h>>_package.lst
    fi
    if [ -f "http/http_server.c" ]; then
        echo http/http_server.c>>_package.lst
    fi
    if [ -f "http/http.h" ]; then
        echo http/http.h>>_package.lst
    fi
    if [ -f "http/http.c" ]; then
        echo http/http.c>>_package.lst
    fi
    if [ -f "http/http_static.icl" ]; then
        echo http/http_static.icl>>_package.lst
    fi
    if [ -f "http/http_static_test.c" ]; then
        echo http/http_static_test.c>>_package.lst
    fi
    if [ -f "http/http_static.h" ]; then
        echo http/http_static.h>>_package.lst
    fi
    if [ -f "http/http_static.c" ]; then
        echo http/http_static.c>>_package.lst
    fi
    if [ -f "http/stamp_generate" ]; then
        echo http/stamp_generate>>_package.lst
    fi
    if [ -f "http/boomakew.bat" ]; then
        echo http/boomakew.bat>>_package.lst
    fi
    if [ -f "http/configure" ]; then
        echo http/configure>>_package.lst
    fi
    if [ -f "http/Makefile.unix" ]; then
        echo http/Makefile.unix>>_package.lst
    fi
    if [ -f "http/boomake" ]; then
        echo http/boomake>>_package.lst
    fi
    if [ -f "http/configure.bat" ]; then
        echo http/configure.bat>>_package.lst
    fi
    if [ -f "http/Makefile.win32" ]; then
        echo http/Makefile.win32>>_package.lst
    fi
    if [ -f "http/boomake.bat" ]; then
        echo http/boomake.bat>>_package.lst
    fi
    if [ -f "http/libhttp.vcproj" ]; then
        echo http/libhttp.vcproj>>_package.lst
    fi
    if [ -f "http/webpages/default.html" ]; then
        echo http/webpages/default.html>>_package.lst
    fi
    if [ -f "http/webpages/default.css" ]; then
        echo http/webpages/default.css>>_package.lst
    fi
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    carp "Building http-$MY_VERSION-src.tar.gz..."
    zip  -rq _package.zip -@<_package.lst
    unzip -q _package.zip -d http-$MY_VERSION
    rm -f http-$MY_VERSION-src.tar.gz
    tar -cf  http-$MY_VERSION-src.tar http-$MY_VERSION
    gzip http-$MY_VERSION-src.tar
    rm -f http-$MY_VERSION-src.zip
    carp "Building http-$MY_VERSION-src.zip..."
    zip -lrmq http-$MY_VERSION-src.zip http-$MY_VERSION
    rm _package.zip
    rm _package.lst
    rm stamp_source
}

# ---------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

a_check_all_source_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "http_config.opf" ]; then
        croak "http_config.opf is missing"
    fi
    if [ ! -f "http_main.inc" ]; then
        croak "http_main.inc is missing"
    fi
    if [ ! -f "http_address.icl" ]; then
        croak "http_address.icl is missing"
    fi
    if [ ! -f "http_address_table.icl" ]; then
        croak "http_address_table.icl is missing"
    fi
    if [ ! -f "http_request.icl" ]; then
        croak "http_request.icl is missing"
    fi
    if [ ! -f "http_response.icl" ]; then
        croak "http_response.icl is missing"
    fi
    if [ ! -f "http_driver_module.icl" ]; then
        croak "http_driver_module.icl is missing"
    fi
    if [ ! -f "http_access_module.icl" ]; then
        croak "http_access_module.icl is missing"
    fi
    if [ ! -f "http_driver_context.icl" ]; then
        croak "http_driver_context.icl is missing"
    fi
    if [ ! -f "http_access_context.icl" ]; then
        croak "http_access_context.icl is missing"
    fi
    if [ ! -f "http_driver_file.icl" ]; then
        croak "http_driver_file.icl is missing"
    fi
    if [ ! -f "http_driver_cgi.icl" ]; then
        croak "http_driver_cgi.icl is missing"
    fi
    if [ ! -f "http_driver_null.icl" ]; then
        croak "http_driver_null.icl is missing"
    fi
    if [ ! -f "http_access_logger.icl" ]; then
        croak "http_access_logger.icl is missing"
    fi
    if [ ! -f "http_access_policy.icl" ]; then
        croak "http_access_policy.icl is missing"
    fi
    if [ ! -f "http_access_refresh.icl" ]; then
        croak "http_access_refresh.icl is missing"
    fi
    if [ ! -f "http_access_dos.icl" ]; then
        croak "http_access_dos.icl is missing"
    fi
    if [ ! -f "http_refresh.pl" ]; then
        croak "http_refresh.pl is missing"
    fi
    if [ ! -f "http_agent.smt" ]; then
        croak "http_agent.smt is missing"
    fi
    if [ ! -f "http_server.icl" ]; then
        croak "http_server.icl is missing"
    fi
    if [ ! -f "http.icl" ]; then
        croak "http.icl is missing"
    fi
    if [ ! -f "http_static.rc" ]; then
        croak "http_static.rc is missing"
    fi
    if [ ! -f "http_base.cfg" ]; then
        croak "http_base.cfg is missing"
    fi
    if [ ! -f "http_base.css" ]; then
        croak "http_base.css is missing"
    fi
    if [ ! -f "httpd.c" ]; then
        croak "httpd.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "http_config.icl" ]; then
        croak "http_config.icl is missing"
    fi
    if [ ! -f "http_config_test.c" ]; then
        croak "http_config_test.c is missing"
    fi
    if [ ! -f "http_config.h" ]; then
        croak "http_config.h is missing"
    fi
    if [ ! -f "http_config.c" ]; then
        croak "http_config.c is missing"
    fi
    if [ ! -f "http_config.txt" ]; then
        croak "http_config.txt is missing"
    fi
    if [ ! -f "http_address_test.c" ]; then
        croak "http_address_test.c is missing"
    fi
    if [ ! -f "http_address.h" ]; then
        croak "http_address.h is missing"
    fi
    if [ ! -f "http_address.c" ]; then
        croak "http_address.c is missing"
    fi
    if [ ! -f "http_address_table_test.c" ]; then
        croak "http_address_table_test.c is missing"
    fi
    if [ ! -f "http_address_table.h" ]; then
        croak "http_address_table.h is missing"
    fi
    if [ ! -f "http_address_table.c" ]; then
        croak "http_address_table.c is missing"
    fi
    if [ ! -f "http_request_test.c" ]; then
        croak "http_request_test.c is missing"
    fi
    if [ ! -f "http_request.h" ]; then
        croak "http_request.h is missing"
    fi
    if [ ! -f "http_request.c" ]; then
        croak "http_request.c is missing"
    fi
    if [ ! -f "http_response_test.c" ]; then
        croak "http_response_test.c is missing"
    fi
    if [ ! -f "http_response.h" ]; then
        croak "http_response.h is missing"
    fi
    if [ ! -f "http_response.c" ]; then
        croak "http_response.c is missing"
    fi
    if [ ! -f "http_driver_module_front.icl" ]; then
        croak "http_driver_module_front.icl is missing"
    fi
    if [ ! -f "http_driver_module_back.icl" ]; then
        croak "http_driver_module_back.icl is missing"
    fi
    if [ ! -f "http_driver_module_test.c" ]; then
        croak "http_driver_module_test.c is missing"
    fi
    if [ ! -f "http_driver_module.h" ]; then
        croak "http_driver_module.h is missing"
    fi
    if [ ! -f "http_driver_module.c" ]; then
        croak "http_driver_module.c is missing"
    fi
    if [ ! -f "http_access_module_front.icl" ]; then
        croak "http_access_module_front.icl is missing"
    fi
    if [ ! -f "http_access_module_back.icl" ]; then
        croak "http_access_module_back.icl is missing"
    fi
    if [ ! -f "http_access_module_test.c" ]; then
        croak "http_access_module_test.c is missing"
    fi
    if [ ! -f "http_access_module.h" ]; then
        croak "http_access_module.h is missing"
    fi
    if [ ! -f "http_access_module.c" ]; then
        croak "http_access_module.c is missing"
    fi
    if [ ! -f "http_driver_context_test.c" ]; then
        croak "http_driver_context_test.c is missing"
    fi
    if [ ! -f "http_driver_context.h" ]; then
        croak "http_driver_context.h is missing"
    fi
    if [ ! -f "http_driver_context.c" ]; then
        croak "http_driver_context.c is missing"
    fi
    if [ ! -f "http_access_context_test.c" ]; then
        croak "http_access_context_test.c is missing"
    fi
    if [ ! -f "http_access_context.h" ]; then
        croak "http_access_context.h is missing"
    fi
    if [ ! -f "http_access_context.c" ]; then
        croak "http_access_context.c is missing"
    fi
    if [ ! -f "http_driver_file_agent.smt" ]; then
        croak "http_driver_file_agent.smt is missing"
    fi
    if [ ! -f "http_driver_file_agent.h" ]; then
        croak "http_driver_file_agent.h is missing"
    fi
    if [ ! -f "http_driver_file_agent.c" ]; then
        croak "http_driver_file_agent.c is missing"
    fi
    if [ ! -f "http_driver_file_test.c" ]; then
        croak "http_driver_file_test.c is missing"
    fi
    if [ ! -f "http_driver_file.h" ]; then
        croak "http_driver_file.h is missing"
    fi
    if [ ! -f "http_driver_file.c" ]; then
        croak "http_driver_file.c is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.smt" ]; then
        croak "http_driver_cgi_agent.smt is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.h" ]; then
        croak "http_driver_cgi_agent.h is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.c" ]; then
        croak "http_driver_cgi_agent.c is missing"
    fi
    if [ ! -f "http_driver_cgi_test.c" ]; then
        croak "http_driver_cgi_test.c is missing"
    fi
    if [ ! -f "http_driver_cgi.h" ]; then
        croak "http_driver_cgi.h is missing"
    fi
    if [ ! -f "http_driver_cgi.c" ]; then
        croak "http_driver_cgi.c is missing"
    fi
    if [ ! -f "http_driver_null_agent.smt" ]; then
        croak "http_driver_null_agent.smt is missing"
    fi
    if [ ! -f "http_driver_null_agent.h" ]; then
        croak "http_driver_null_agent.h is missing"
    fi
    if [ ! -f "http_driver_null_agent.c" ]; then
        croak "http_driver_null_agent.c is missing"
    fi
    if [ ! -f "http_driver_null_test.c" ]; then
        croak "http_driver_null_test.c is missing"
    fi
    if [ ! -f "http_driver_null.h" ]; then
        croak "http_driver_null.h is missing"
    fi
    if [ ! -f "http_driver_null.c" ]; then
        croak "http_driver_null.c is missing"
    fi
    if [ ! -f "http_access_logger_agent.smt" ]; then
        croak "http_access_logger_agent.smt is missing"
    fi
    if [ ! -f "http_access_logger_agent.h" ]; then
        croak "http_access_logger_agent.h is missing"
    fi
    if [ ! -f "http_access_logger_agent.c" ]; then
        croak "http_access_logger_agent.c is missing"
    fi
    if [ ! -f "http_access_logger_test.c" ]; then
        croak "http_access_logger_test.c is missing"
    fi
    if [ ! -f "http_access_logger.h" ]; then
        croak "http_access_logger.h is missing"
    fi
    if [ ! -f "http_access_logger.c" ]; then
        croak "http_access_logger.c is missing"
    fi
    if [ ! -f "http_access_policy_agent.smt" ]; then
        croak "http_access_policy_agent.smt is missing"
    fi
    if [ ! -f "http_access_policy_agent.h" ]; then
        croak "http_access_policy_agent.h is missing"
    fi
    if [ ! -f "http_access_policy_agent.c" ]; then
        croak "http_access_policy_agent.c is missing"
    fi
    if [ ! -f "http_access_policy_test.c" ]; then
        croak "http_access_policy_test.c is missing"
    fi
    if [ ! -f "http_access_policy.h" ]; then
        croak "http_access_policy.h is missing"
    fi
    if [ ! -f "http_access_policy.c" ]; then
        croak "http_access_policy.c is missing"
    fi
    if [ ! -f "http_access_refresh_agent.smt" ]; then
        croak "http_access_refresh_agent.smt is missing"
    fi
    if [ ! -f "http_access_refresh_agent.h" ]; then
        croak "http_access_refresh_agent.h is missing"
    fi
    if [ ! -f "http_access_refresh_agent.c" ]; then
        croak "http_access_refresh_agent.c is missing"
    fi
    if [ ! -f "http_access_refresh_test.c" ]; then
        croak "http_access_refresh_test.c is missing"
    fi
    if [ ! -f "http_access_refresh.h" ]; then
        croak "http_access_refresh.h is missing"
    fi
    if [ ! -f "http_access_refresh.c" ]; then
        croak "http_access_refresh.c is missing"
    fi
    if [ ! -f "http_access_dos_agent.smt" ]; then
        croak "http_access_dos_agent.smt is missing"
    fi
    if [ ! -f "http_access_dos_agent.h" ]; then
        croak "http_access_dos_agent.h is missing"
    fi
    if [ ! -f "http_access_dos_agent.c" ]; then
        croak "http_access_dos_agent.c is missing"
    fi
    if [ ! -f "http_access_dos_test.c" ]; then
        croak "http_access_dos_test.c is missing"
    fi
    if [ ! -f "http_access_dos.h" ]; then
        croak "http_access_dos.h is missing"
    fi
    if [ ! -f "http_access_dos.c" ]; then
        croak "http_access_dos.c is missing"
    fi
    if [ ! -f "http_agent.h" ]; then
        croak "http_agent.h is missing"
    fi
    if [ ! -f "http_agent.c" ]; then
        croak "http_agent.c is missing"
    fi
    if [ ! -f "http_server_agent.smt" ]; then
        croak "http_server_agent.smt is missing"
    fi
    if [ ! -f "http_server_agent.h" ]; then
        croak "http_server_agent.h is missing"
    fi
    if [ ! -f "http_server_agent.c" ]; then
        croak "http_server_agent.c is missing"
    fi
    if [ ! -f "http_server_test.c" ]; then
        croak "http_server_test.c is missing"
    fi
    if [ ! -f "http_server.h" ]; then
        croak "http_server.h is missing"
    fi
    if [ ! -f "http_server.c" ]; then
        croak "http_server.c is missing"
    fi
    if [ ! -f "http.h" ]; then
        croak "http.h is missing"
    fi
    if [ ! -f "http.c" ]; then
        croak "http.c is missing"
    fi
    if [ ! -f "http_static.icl" ]; then
        croak "http_static.icl is missing"
    fi
    if [ ! -f "http_static_test.c" ]; then
        croak "http_static_test.c is missing"
    fi
    if [ ! -f "http_static.h" ]; then
        croak "http_static.h is missing"
    fi
    if [ ! -f "http_static.c" ]; then
        croak "http_static.c is missing"
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "boomakew.bat" ]; then
        croak "boomakew.bat is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
    if [ ! -f "libhttp.vcproj" ]; then
        croak "libhttp.vcproj is missing"
    fi
    PUSHDIR=`pwd`
    cd webpages
    if [ ! -f "default.html" ]; then
        croak "default.html is missing"
    fi
    if [ ! -f "default.css" ]; then
        croak "default.css is missing"
    fi
    cd $PUSHDIR
}

# -----------------------   CHECK BINARY FILES EXIST   ------------------------

a_check_binary_files_exist() {
:
    if [ ! -f "http_refresh.pl" ]; then
        croak "http_refresh.pl is missing"
    fi
    if [ ! -f "http_agent.smt" ]; then
        croak "http_agent.smt is missing"
    fi
    if [ ! -f "libhttp.a" ]; then
        croak "libhttp.a is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "http_config.h" ]; then
        croak "http_config.h is missing"
    fi
    if [ ! -f "http_config.txt" ]; then
        croak "http_config.txt is missing"
    fi
    if [ ! -f "http_address.h" ]; then
        croak "http_address.h is missing"
    fi
    if [ ! -f "http_address_table.h" ]; then
        croak "http_address_table.h is missing"
    fi
    if [ ! -f "http_request.h" ]; then
        croak "http_request.h is missing"
    fi
    if [ ! -f "http_response.h" ]; then
        croak "http_response.h is missing"
    fi
    if [ ! -f "http_driver_module_front.icl" ]; then
        croak "http_driver_module_front.icl is missing"
    fi
    if [ ! -f "http_driver_module_back.icl" ]; then
        croak "http_driver_module_back.icl is missing"
    fi
    if [ ! -f "http_driver_module.h" ]; then
        croak "http_driver_module.h is missing"
    fi
    if [ ! -f "http_access_module_front.icl" ]; then
        croak "http_access_module_front.icl is missing"
    fi
    if [ ! -f "http_access_module_back.icl" ]; then
        croak "http_access_module_back.icl is missing"
    fi
    if [ ! -f "http_access_module.h" ]; then
        croak "http_access_module.h is missing"
    fi
    if [ ! -f "http_driver_context.h" ]; then
        croak "http_driver_context.h is missing"
    fi
    if [ ! -f "http_access_context.h" ]; then
        croak "http_access_context.h is missing"
    fi
    if [ ! -f "http_driver_file_agent.smt" ]; then
        croak "http_driver_file_agent.smt is missing"
    fi
    if [ ! -f "http_driver_file_agent.h" ]; then
        croak "http_driver_file_agent.h is missing"
    fi
    if [ ! -f "http_driver_file.h" ]; then
        croak "http_driver_file.h is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.smt" ]; then
        croak "http_driver_cgi_agent.smt is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.h" ]; then
        croak "http_driver_cgi_agent.h is missing"
    fi
    if [ ! -f "http_driver_cgi.h" ]; then
        croak "http_driver_cgi.h is missing"
    fi
    if [ ! -f "http_driver_null_agent.smt" ]; then
        croak "http_driver_null_agent.smt is missing"
    fi
    if [ ! -f "http_driver_null_agent.h" ]; then
        croak "http_driver_null_agent.h is missing"
    fi
    if [ ! -f "http_driver_null.h" ]; then
        croak "http_driver_null.h is missing"
    fi
    if [ ! -f "http_access_logger_agent.smt" ]; then
        croak "http_access_logger_agent.smt is missing"
    fi
    if [ ! -f "http_access_logger_agent.h" ]; then
        croak "http_access_logger_agent.h is missing"
    fi
    if [ ! -f "http_access_logger.h" ]; then
        croak "http_access_logger.h is missing"
    fi
    if [ ! -f "http_access_policy_agent.smt" ]; then
        croak "http_access_policy_agent.smt is missing"
    fi
    if [ ! -f "http_access_policy_agent.h" ]; then
        croak "http_access_policy_agent.h is missing"
    fi
    if [ ! -f "http_access_policy.h" ]; then
        croak "http_access_policy.h is missing"
    fi
    if [ ! -f "http_access_refresh_agent.smt" ]; then
        croak "http_access_refresh_agent.smt is missing"
    fi
    if [ ! -f "http_access_refresh_agent.h" ]; then
        croak "http_access_refresh_agent.h is missing"
    fi
    if [ ! -f "http_access_refresh.h" ]; then
        croak "http_access_refresh.h is missing"
    fi
    if [ ! -f "http_access_dos_agent.smt" ]; then
        croak "http_access_dos_agent.smt is missing"
    fi
    if [ ! -f "http_access_dos_agent.h" ]; then
        croak "http_access_dos_agent.h is missing"
    fi
    if [ ! -f "http_access_dos.h" ]; then
        croak "http_access_dos.h is missing"
    fi
    if [ ! -f "http_agent.h" ]; then
        croak "http_agent.h is missing"
    fi
    if [ ! -f "http_server_agent.smt" ]; then
        croak "http_server_agent.smt is missing"
    fi
    if [ ! -f "http_server_agent.h" ]; then
        croak "http_server_agent.h is missing"
    fi
    if [ ! -f "http_server.h" ]; then
        croak "http_server.h is missing"
    fi
    if [ ! -f "http.h" ]; then
        croak "http.h is missing"
    fi
    if [ ! -f "http_static.h" ]; then
        croak "http_static.h is missing"
    fi
    PUSHDIR=`pwd`
    cd webpages
    if [ ! -f "default.html" ]; then
        croak "default.html is missing"
    fi
    if [ ! -f "default.css" ]; then
        croak "default.css is missing"
    fi
    cd $PUSHDIR
}

# ------------------------   CHECK OPERATING CONTEXT   ------------------------

a_check_operating_context() {
:
    if [ -f ./stamp_stripped ]; then
        event=stripped
    elif [ -f ./stamp_source ]; then
        event=source
    else
        event=repository
    fi
}

# -----------------------   CHECK PROJECT FILES EXIST   -----------------------

a_check_project_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "http_config.opf" ]; then
        croak "http_config.opf is missing"
    fi
    if [ ! -f "http_main.inc" ]; then
        croak "http_main.inc is missing"
    fi
    if [ ! -f "http_address.icl" ]; then
        croak "http_address.icl is missing"
    fi
    if [ ! -f "http_request.icl" ]; then
        croak "http_request.icl is missing"
    fi
    if [ ! -f "http_response.icl" ]; then
        croak "http_response.icl is missing"
    fi
    if [ ! -f "http_driver_module.icl" ]; then
        croak "http_driver_module.icl is missing"
    fi
    if [ ! -f "http_access_module.icl" ]; then
        croak "http_access_module.icl is missing"
    fi
    if [ ! -f "http_driver_context.icl" ]; then
        croak "http_driver_context.icl is missing"
    fi
    if [ ! -f "http_access_context.icl" ]; then
        croak "http_access_context.icl is missing"
    fi
    if [ ! -f "http_driver_file.icl" ]; then
        croak "http_driver_file.icl is missing"
    fi
    if [ ! -f "http_driver_cgi.icl" ]; then
        croak "http_driver_cgi.icl is missing"
    fi
    if [ ! -f "http_driver_null.icl" ]; then
        croak "http_driver_null.icl is missing"
    fi
    if [ ! -f "http_access_logger.icl" ]; then
        croak "http_access_logger.icl is missing"
    fi
    if [ ! -f "http_access_policy.icl" ]; then
        croak "http_access_policy.icl is missing"
    fi
    if [ ! -f "http_access_refresh.icl" ]; then
        croak "http_access_refresh.icl is missing"
    fi
    if [ ! -f "http_access_dos.icl" ]; then
        croak "http_access_dos.icl is missing"
    fi
    if [ ! -f "http_refresh.pl" ]; then
        croak "http_refresh.pl is missing"
    fi
    if [ ! -f "http_agent.smt" ]; then
        croak "http_agent.smt is missing"
    fi
    if [ ! -f "http_server.icl" ]; then
        croak "http_server.icl is missing"
    fi
    if [ ! -f "http.icl" ]; then
        croak "http.icl is missing"
    fi
    if [ ! -f "http_static.rc" ]; then
        croak "http_static.rc is missing"
    fi
    if [ ! -f "http_base.cfg" ]; then
        croak "http_base.cfg is missing"
    fi
    if [ ! -f "http_base.css" ]; then
        croak "http_base.css is missing"
    fi
    if [ ! -f "httpd.c" ]; then
        croak "httpd.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "boomakew.bat" ]; then
        croak "boomakew.bat is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
    if [ ! -d "webpages" ]; then
        croak "Directory webpages is missing"
    fi
    PUSHDIR=`pwd`
    cd webpages
    if [ ! -f "default.html" ]; then
        croak "default.html is missing"
    fi
    if [ ! -f "default.css" ]; then
        croak "default.css is missing"
    fi
    cd $PUSHDIR
}

# -----------------------   CHECK SOURCE FILES EXIST   ------------------------

a_check_source_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "http_config.opf" ]; then
        croak "http_config.opf is missing"
    fi
    if [ ! -f "http_main.inc" ]; then
        croak "http_main.inc is missing"
    fi
    if [ ! -f "http_address.icl" ]; then
        croak "http_address.icl is missing"
    fi
    if [ ! -f "http_address_table.icl" ]; then
        croak "http_address_table.icl is missing"
    fi
    if [ ! -f "http_request.icl" ]; then
        croak "http_request.icl is missing"
    fi
    if [ ! -f "http_response.icl" ]; then
        croak "http_response.icl is missing"
    fi
    if [ ! -f "http_driver_module.icl" ]; then
        croak "http_driver_module.icl is missing"
    fi
    if [ ! -f "http_access_module.icl" ]; then
        croak "http_access_module.icl is missing"
    fi
    if [ ! -f "http_driver_context.icl" ]; then
        croak "http_driver_context.icl is missing"
    fi
    if [ ! -f "http_access_context.icl" ]; then
        croak "http_access_context.icl is missing"
    fi
    if [ ! -f "http_driver_file.icl" ]; then
        croak "http_driver_file.icl is missing"
    fi
    if [ ! -f "http_driver_cgi.icl" ]; then
        croak "http_driver_cgi.icl is missing"
    fi
    if [ ! -f "http_driver_null.icl" ]; then
        croak "http_driver_null.icl is missing"
    fi
    if [ ! -f "http_access_logger.icl" ]; then
        croak "http_access_logger.icl is missing"
    fi
    if [ ! -f "http_access_policy.icl" ]; then
        croak "http_access_policy.icl is missing"
    fi
    if [ ! -f "http_access_refresh.icl" ]; then
        croak "http_access_refresh.icl is missing"
    fi
    if [ ! -f "http_access_dos.icl" ]; then
        croak "http_access_dos.icl is missing"
    fi
    if [ ! -f "http_refresh.pl" ]; then
        croak "http_refresh.pl is missing"
    fi
    if [ ! -f "http_agent.smt" ]; then
        croak "http_agent.smt is missing"
    fi
    if [ ! -f "http_server.icl" ]; then
        croak "http_server.icl is missing"
    fi
    if [ ! -f "http.icl" ]; then
        croak "http.icl is missing"
    fi
    if [ ! -f "http_static.rc" ]; then
        croak "http_static.rc is missing"
    fi
    if [ ! -f "http_base.cfg" ]; then
        croak "http_base.cfg is missing"
    fi
    if [ ! -f "http_base.css" ]; then
        croak "http_base.css is missing"
    fi
    if [ ! -f "httpd.c" ]; then
        croak "httpd.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "http_config.icl" ]; then
        croak "http_config.icl is missing"
    fi
    if [ ! -f "http_config_test.c" ]; then
        croak "http_config_test.c is missing"
    fi
    if [ ! -f "http_config.h" ]; then
        croak "http_config.h is missing"
    fi
    if [ ! -f "http_config.c" ]; then
        croak "http_config.c is missing"
    fi
    if [ ! -f "http_config.txt" ]; then
        croak "http_config.txt is missing"
    fi
    if [ ! -f "http_address_test.c" ]; then
        croak "http_address_test.c is missing"
    fi
    if [ ! -f "http_address.h" ]; then
        croak "http_address.h is missing"
    fi
    if [ ! -f "http_address.c" ]; then
        croak "http_address.c is missing"
    fi
    if [ ! -f "http_address_table_test.c" ]; then
        croak "http_address_table_test.c is missing"
    fi
    if [ ! -f "http_address_table.h" ]; then
        croak "http_address_table.h is missing"
    fi
    if [ ! -f "http_address_table.c" ]; then
        croak "http_address_table.c is missing"
    fi
    if [ ! -f "http_request_test.c" ]; then
        croak "http_request_test.c is missing"
    fi
    if [ ! -f "http_request.h" ]; then
        croak "http_request.h is missing"
    fi
    if [ ! -f "http_request.c" ]; then
        croak "http_request.c is missing"
    fi
    if [ ! -f "http_response_test.c" ]; then
        croak "http_response_test.c is missing"
    fi
    if [ ! -f "http_response.h" ]; then
        croak "http_response.h is missing"
    fi
    if [ ! -f "http_response.c" ]; then
        croak "http_response.c is missing"
    fi
    if [ ! -f "http_driver_module_front.icl" ]; then
        croak "http_driver_module_front.icl is missing"
    fi
    if [ ! -f "http_driver_module_back.icl" ]; then
        croak "http_driver_module_back.icl is missing"
    fi
    if [ ! -f "http_driver_module_test.c" ]; then
        croak "http_driver_module_test.c is missing"
    fi
    if [ ! -f "http_driver_module.h" ]; then
        croak "http_driver_module.h is missing"
    fi
    if [ ! -f "http_driver_module.c" ]; then
        croak "http_driver_module.c is missing"
    fi
    if [ ! -f "http_access_module_front.icl" ]; then
        croak "http_access_module_front.icl is missing"
    fi
    if [ ! -f "http_access_module_back.icl" ]; then
        croak "http_access_module_back.icl is missing"
    fi
    if [ ! -f "http_access_module_test.c" ]; then
        croak "http_access_module_test.c is missing"
    fi
    if [ ! -f "http_access_module.h" ]; then
        croak "http_access_module.h is missing"
    fi
    if [ ! -f "http_access_module.c" ]; then
        croak "http_access_module.c is missing"
    fi
    if [ ! -f "http_driver_context_test.c" ]; then
        croak "http_driver_context_test.c is missing"
    fi
    if [ ! -f "http_driver_context.h" ]; then
        croak "http_driver_context.h is missing"
    fi
    if [ ! -f "http_driver_context.c" ]; then
        croak "http_driver_context.c is missing"
    fi
    if [ ! -f "http_access_context_test.c" ]; then
        croak "http_access_context_test.c is missing"
    fi
    if [ ! -f "http_access_context.h" ]; then
        croak "http_access_context.h is missing"
    fi
    if [ ! -f "http_access_context.c" ]; then
        croak "http_access_context.c is missing"
    fi
    if [ ! -f "http_driver_file_agent.smt" ]; then
        croak "http_driver_file_agent.smt is missing"
    fi
    if [ ! -f "http_driver_file_agent.h" ]; then
        croak "http_driver_file_agent.h is missing"
    fi
    if [ ! -f "http_driver_file_agent.c" ]; then
        croak "http_driver_file_agent.c is missing"
    fi
    if [ ! -f "http_driver_file_test.c" ]; then
        croak "http_driver_file_test.c is missing"
    fi
    if [ ! -f "http_driver_file.h" ]; then
        croak "http_driver_file.h is missing"
    fi
    if [ ! -f "http_driver_file.c" ]; then
        croak "http_driver_file.c is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.smt" ]; then
        croak "http_driver_cgi_agent.smt is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.h" ]; then
        croak "http_driver_cgi_agent.h is missing"
    fi
    if [ ! -f "http_driver_cgi_agent.c" ]; then
        croak "http_driver_cgi_agent.c is missing"
    fi
    if [ ! -f "http_driver_cgi_test.c" ]; then
        croak "http_driver_cgi_test.c is missing"
    fi
    if [ ! -f "http_driver_cgi.h" ]; then
        croak "http_driver_cgi.h is missing"
    fi
    if [ ! -f "http_driver_cgi.c" ]; then
        croak "http_driver_cgi.c is missing"
    fi
    if [ ! -f "http_driver_null_agent.smt" ]; then
        croak "http_driver_null_agent.smt is missing"
    fi
    if [ ! -f "http_driver_null_agent.h" ]; then
        croak "http_driver_null_agent.h is missing"
    fi
    if [ ! -f "http_driver_null_agent.c" ]; then
        croak "http_driver_null_agent.c is missing"
    fi
    if [ ! -f "http_driver_null_test.c" ]; then
        croak "http_driver_null_test.c is missing"
    fi
    if [ ! -f "http_driver_null.h" ]; then
        croak "http_driver_null.h is missing"
    fi
    if [ ! -f "http_driver_null.c" ]; then
        croak "http_driver_null.c is missing"
    fi
    if [ ! -f "http_access_logger_agent.smt" ]; then
        croak "http_access_logger_agent.smt is missing"
    fi
    if [ ! -f "http_access_logger_agent.h" ]; then
        croak "http_access_logger_agent.h is missing"
    fi
    if [ ! -f "http_access_logger_agent.c" ]; then
        croak "http_access_logger_agent.c is missing"
    fi
    if [ ! -f "http_access_logger_test.c" ]; then
        croak "http_access_logger_test.c is missing"
    fi
    if [ ! -f "http_access_logger.h" ]; then
        croak "http_access_logger.h is missing"
    fi
    if [ ! -f "http_access_logger.c" ]; then
        croak "http_access_logger.c is missing"
    fi
    if [ ! -f "http_access_policy_agent.smt" ]; then
        croak "http_access_policy_agent.smt is missing"
    fi
    if [ ! -f "http_access_policy_agent.h" ]; then
        croak "http_access_policy_agent.h is missing"
    fi
    if [ ! -f "http_access_policy_agent.c" ]; then
        croak "http_access_policy_agent.c is missing"
    fi
    if [ ! -f "http_access_policy_test.c" ]; then
        croak "http_access_policy_test.c is missing"
    fi
    if [ ! -f "http_access_policy.h" ]; then
        croak "http_access_policy.h is missing"
    fi
    if [ ! -f "http_access_policy.c" ]; then
        croak "http_access_policy.c is missing"
    fi
    if [ ! -f "http_access_refresh_agent.smt" ]; then
        croak "http_access_refresh_agent.smt is missing"
    fi
    if [ ! -f "http_access_refresh_agent.h" ]; then
        croak "http_access_refresh_agent.h is missing"
    fi
    if [ ! -f "http_access_refresh_agent.c" ]; then
        croak "http_access_refresh_agent.c is missing"
    fi
    if [ ! -f "http_access_refresh_test.c" ]; then
        croak "http_access_refresh_test.c is missing"
    fi
    if [ ! -f "http_access_refresh.h" ]; then
        croak "http_access_refresh.h is missing"
    fi
    if [ ! -f "http_access_refresh.c" ]; then
        croak "http_access_refresh.c is missing"
    fi
    if [ ! -f "http_access_dos_agent.smt" ]; then
        croak "http_access_dos_agent.smt is missing"
    fi
    if [ ! -f "http_access_dos_agent.h" ]; then
        croak "http_access_dos_agent.h is missing"
    fi
    if [ ! -f "http_access_dos_agent.c" ]; then
        croak "http_access_dos_agent.c is missing"
    fi
    if [ ! -f "http_access_dos_test.c" ]; then
        croak "http_access_dos_test.c is missing"
    fi
    if [ ! -f "http_access_dos.h" ]; then
        croak "http_access_dos.h is missing"
    fi
    if [ ! -f "http_access_dos.c" ]; then
        croak "http_access_dos.c is missing"
    fi
    if [ ! -f "http_agent.h" ]; then
        croak "http_agent.h is missing"
    fi
    if [ ! -f "http_agent.c" ]; then
        croak "http_agent.c is missing"
    fi
    if [ ! -f "http_server_agent.smt" ]; then
        croak "http_server_agent.smt is missing"
    fi
    if [ ! -f "http_server_agent.h" ]; then
        croak "http_server_agent.h is missing"
    fi
    if [ ! -f "http_server_agent.c" ]; then
        croak "http_server_agent.c is missing"
    fi
    if [ ! -f "http_server_test.c" ]; then
        croak "http_server_test.c is missing"
    fi
    if [ ! -f "http_server.h" ]; then
        croak "http_server.h is missing"
    fi
    if [ ! -f "http_server.c" ]; then
        croak "http_server.c is missing"
    fi
    if [ ! -f "http.h" ]; then
        croak "http.h is missing"
    fi
    if [ ! -f "http.c" ]; then
        croak "http.c is missing"
    fi
    if [ ! -f "http_static.icl" ]; then
        croak "http_static.icl is missing"
    fi
    if [ ! -f "http_static_test.c" ]; then
        croak "http_static_test.c is missing"
    fi
    if [ ! -f "http_static.h" ]; then
        croak "http_static.h is missing"
    fi
    if [ ! -f "http_static.c" ]; then
        croak "http_static.c is missing"
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "boomakew.bat" ]; then
        croak "boomakew.bat is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
    if [ ! -f "libhttp.vcproj" ]; then
        croak "libhttp.vcproj is missing"
    fi
    PUSHDIR=`pwd`
    cd webpages
    if [ ! -f "default.html" ]; then
        croak "default.html is missing"
    fi
    if [ ! -f "default.css" ]; then
        croak "default.css is missing"
    fi
    cd $PUSHDIR
}

# -------------------------   INSTALL DELIVERABLES   --------------------------

a_install_deliverables() {
:
    carp "Installing http into $_INSTALL_ROOT..."
    if [ ! -d "$_INSTALL_ROOT" ]; then
        if mkdir -p $_INSTALL_ROOT; then
            :
        else
            croak "Could not create directory \"$_INSTALL_ROOT\""
        fi
    fi
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_config.opf $_INSTALL_ROOT/bin/"
    cp http_config.opf $_INSTALL_ROOT/bin/ || croak "\"cp http_config.opf $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_config.opf"
    chmod 0644 $_INSTALL_ROOT/bin/http_config.opf || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_config.opf\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_address.icl $_INSTALL_ROOT/bin/"
    cp http_address.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_address.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_address.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_address.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_address.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_address_table.icl $_INSTALL_ROOT/bin/"
    cp http_address_table.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_address_table.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_address_table.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_address_table.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_address_table.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_request.icl $_INSTALL_ROOT/bin/"
    cp http_request.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_request.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_request.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_request.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_request.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_response.icl $_INSTALL_ROOT/bin/"
    cp http_response.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_response.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_response.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_response.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_response.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_context.icl $_INSTALL_ROOT/bin/"
    cp http_driver_context.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_context.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_context.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_context.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_context.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_context.icl $_INSTALL_ROOT/bin/"
    cp http_access_context.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_access_context.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_context.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_context.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_context.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_file.icl $_INSTALL_ROOT/bin/"
    cp http_driver_file.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_file.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_file.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_file.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_file.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_cgi.icl $_INSTALL_ROOT/bin/"
    cp http_driver_cgi.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_cgi.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_cgi.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_cgi.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_cgi.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_null.icl $_INSTALL_ROOT/bin/"
    cp http_driver_null.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_null.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_null.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_null.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_null.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_logger.icl $_INSTALL_ROOT/bin/"
    cp http_access_logger.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_access_logger.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_logger.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_logger.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_logger.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_policy.icl $_INSTALL_ROOT/bin/"
    cp http_access_policy.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_access_policy.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_policy.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_policy.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_policy.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_refresh.icl $_INSTALL_ROOT/bin/"
    cp http_access_refresh.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_access_refresh.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_refresh.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_refresh.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_refresh.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_dos.icl $_INSTALL_ROOT/bin/"
    cp http_access_dos.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_access_dos.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_dos.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_dos.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_dos.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_refresh.pl $_INSTALL_ROOT/bin/"
    cp http_refresh.pl $_INSTALL_ROOT/bin/ || croak "\"cp http_refresh.pl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_refresh.pl"
    chmod 0644 $_INSTALL_ROOT/bin/http_refresh.pl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_refresh.pl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_agent.smt $_INSTALL_ROOT/bin/"
    cp http_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_server.icl $_INSTALL_ROOT/bin/"
    cp http_server.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_server.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_server.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_server.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_server.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http.icl $_INSTALL_ROOT/bin/"
    cp http.icl $_INSTALL_ROOT/bin/ || croak "\"cp http.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http.icl\" failed"
    mkdir -p $_INSTALL_ROOT/lib/
    [ "$BOOM_TRACE" ] && echo "cp libhttp.a $_INSTALL_ROOT/lib/"
    cp libhttp.a $_INSTALL_ROOT/lib/ || croak "\"cp libhttp.a $_INSTALL_ROOT/lib/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/lib/libhttp.a"
    chmod 0644 $_INSTALL_ROOT/lib/libhttp.a || croak "\"chmod 0644 $_INSTALL_ROOT/lib/libhttp.a\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    mkdir -p $_INSTALL_ROOT/doc/http/
    [ "$BOOM_TRACE" ] && echo "cp readme.txt $_INSTALL_ROOT/doc/http/"
    cp readme.txt $_INSTALL_ROOT/doc/http/ || croak "\"cp readme.txt $_INSTALL_ROOT/doc/http/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/doc/http/readme.txt"
    chmod 0644 $_INSTALL_ROOT/doc/http/readme.txt || croak "\"chmod 0644 $_INSTALL_ROOT/doc/http/readme.txt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_config.h $_INSTALL_ROOT/include/"
    cp http_config.h $_INSTALL_ROOT/include/ || croak "\"cp http_config.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_config.h"
    chmod 0644 $_INSTALL_ROOT/include/http_config.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_config.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_config.txt $_INSTALL_ROOT/bin/"
    cp http_config.txt $_INSTALL_ROOT/bin/ || croak "\"cp http_config.txt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_config.txt"
    chmod 0644 $_INSTALL_ROOT/bin/http_config.txt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_config.txt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_address.h $_INSTALL_ROOT/include/"
    cp http_address.h $_INSTALL_ROOT/include/ || croak "\"cp http_address.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_address.h"
    chmod 0644 $_INSTALL_ROOT/include/http_address.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_address.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_address_table.h $_INSTALL_ROOT/include/"
    cp http_address_table.h $_INSTALL_ROOT/include/ || croak "\"cp http_address_table.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_address_table.h"
    chmod 0644 $_INSTALL_ROOT/include/http_address_table.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_address_table.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_request.h $_INSTALL_ROOT/include/"
    cp http_request.h $_INSTALL_ROOT/include/ || croak "\"cp http_request.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_request.h"
    chmod 0644 $_INSTALL_ROOT/include/http_request.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_request.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_response.h $_INSTALL_ROOT/include/"
    cp http_response.h $_INSTALL_ROOT/include/ || croak "\"cp http_response.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_response.h"
    chmod 0644 $_INSTALL_ROOT/include/http_response.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_response.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_module_front.icl $_INSTALL_ROOT/bin/"
    cp http_driver_module_front.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_module_front.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_module_front.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_module_front.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_module_front.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_module_back.icl $_INSTALL_ROOT/bin/"
    cp http_driver_module_back.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_module_back.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_module_back.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_module_back.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_module_back.icl\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_module.h $_INSTALL_ROOT/include/"
    cp http_driver_module.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_module.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_module.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_module.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_module.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_access_module_front.icl $_INSTALL_ROOT/bin/"
    cp http_access_module_front.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_access_module_front.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_module_front.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_module_front.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_module_front.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_module_back.icl $_INSTALL_ROOT/bin/"
    cp http_access_module_back.icl $_INSTALL_ROOT/bin/ || croak "\"cp http_access_module_back.icl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_module_back.icl"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_module_back.icl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_module_back.icl\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_access_module.h $_INSTALL_ROOT/include/"
    cp http_access_module.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_module.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_module.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_module.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_module.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_context.h $_INSTALL_ROOT/include/"
    cp http_driver_context.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_context.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_context.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_context.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_context.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_context.h $_INSTALL_ROOT/include/"
    cp http_access_context.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_context.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_context.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_context.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_context.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_file_agent.smt $_INSTALL_ROOT/bin/"
    cp http_driver_file_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_file_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_file_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_file_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_file_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_file_agent.h $_INSTALL_ROOT/include/"
    cp http_driver_file_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_file_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_file_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_file_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_file_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_file.h $_INSTALL_ROOT/include/"
    cp http_driver_file.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_file.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_file.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_file.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_file.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_cgi_agent.smt $_INSTALL_ROOT/bin/"
    cp http_driver_cgi_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_cgi_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_cgi_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_cgi_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_cgi_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_cgi_agent.h $_INSTALL_ROOT/include/"
    cp http_driver_cgi_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_cgi_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_cgi_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_cgi_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_cgi_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_cgi.h $_INSTALL_ROOT/include/"
    cp http_driver_cgi.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_cgi.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_cgi.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_cgi.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_cgi.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_null_agent.smt $_INSTALL_ROOT/bin/"
    cp http_driver_null_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_driver_null_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_driver_null_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_driver_null_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_driver_null_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_driver_null_agent.h $_INSTALL_ROOT/include/"
    cp http_driver_null_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_null_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_null_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_null_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_null_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_driver_null.h $_INSTALL_ROOT/include/"
    cp http_driver_null.h $_INSTALL_ROOT/include/ || croak "\"cp http_driver_null.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_driver_null.h"
    chmod 0644 $_INSTALL_ROOT/include/http_driver_null.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_driver_null.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_access_logger_agent.smt $_INSTALL_ROOT/bin/"
    cp http_access_logger_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_access_logger_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_logger_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_logger_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_logger_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_access_logger_agent.h $_INSTALL_ROOT/include/"
    cp http_access_logger_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_logger_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_logger_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_logger_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_logger_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_logger.h $_INSTALL_ROOT/include/"
    cp http_access_logger.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_logger.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_logger.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_logger.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_logger.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_access_policy_agent.smt $_INSTALL_ROOT/bin/"
    cp http_access_policy_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_access_policy_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_policy_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_policy_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_policy_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_access_policy_agent.h $_INSTALL_ROOT/include/"
    cp http_access_policy_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_policy_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_policy_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_policy_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_policy_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_policy.h $_INSTALL_ROOT/include/"
    cp http_access_policy.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_policy.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_policy.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_policy.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_policy.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_access_refresh_agent.smt $_INSTALL_ROOT/bin/"
    cp http_access_refresh_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_access_refresh_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_refresh_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_refresh_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_refresh_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_access_refresh_agent.h $_INSTALL_ROOT/include/"
    cp http_access_refresh_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_refresh_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_refresh_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_refresh_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_refresh_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_refresh.h $_INSTALL_ROOT/include/"
    cp http_access_refresh.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_refresh.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_refresh.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_refresh.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_refresh.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_access_dos_agent.smt $_INSTALL_ROOT/bin/"
    cp http_access_dos_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_access_dos_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_access_dos_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_access_dos_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_access_dos_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_access_dos_agent.h $_INSTALL_ROOT/include/"
    cp http_access_dos_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_dos_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_dos_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_dos_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_dos_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_access_dos.h $_INSTALL_ROOT/include/"
    cp http_access_dos.h $_INSTALL_ROOT/include/ || croak "\"cp http_access_dos.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_access_dos.h"
    chmod 0644 $_INSTALL_ROOT/include/http_access_dos.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_access_dos.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_agent.h $_INSTALL_ROOT/include/"
    cp http_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_agent.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp http_server_agent.smt $_INSTALL_ROOT/bin/"
    cp http_server_agent.smt $_INSTALL_ROOT/bin/ || croak "\"cp http_server_agent.smt $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/http_server_agent.smt"
    chmod 0644 $_INSTALL_ROOT/bin/http_server_agent.smt || croak "\"chmod 0644 $_INSTALL_ROOT/bin/http_server_agent.smt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp http_server_agent.h $_INSTALL_ROOT/include/"
    cp http_server_agent.h $_INSTALL_ROOT/include/ || croak "\"cp http_server_agent.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_server_agent.h"
    chmod 0644 $_INSTALL_ROOT/include/http_server_agent.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_server_agent.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_server.h $_INSTALL_ROOT/include/"
    cp http_server.h $_INSTALL_ROOT/include/ || croak "\"cp http_server.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_server.h"
    chmod 0644 $_INSTALL_ROOT/include/http_server.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_server.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http.h $_INSTALL_ROOT/include/"
    cp http.h $_INSTALL_ROOT/include/ || croak "\"cp http.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http.h"
    chmod 0644 $_INSTALL_ROOT/include/http.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp http_static.h $_INSTALL_ROOT/include/"
    cp http_static.h $_INSTALL_ROOT/include/ || croak "\"cp http_static.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/http_static.h"
    chmod 0644 $_INSTALL_ROOT/include/http_static.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/http_static.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp webpages/default.html $_INSTALL_ROOT/bin/"
    cp webpages/default.html $_INSTALL_ROOT/bin/ || croak "\"cp webpages/default.html $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/default.html"
    chmod 0644 $_INSTALL_ROOT/bin/default.html || croak "\"chmod 0644 $_INSTALL_ROOT/bin/default.html\" failed"
    [ "$BOOM_TRACE" ] && echo "cp webpages/default.css $_INSTALL_ROOT/bin/"
    cp webpages/default.css $_INSTALL_ROOT/bin/ || croak "\"cp webpages/default.css $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/default.css"
    chmod 0644 $_INSTALL_ROOT/bin/default.css || croak "\"chmod 0644 $_INSTALL_ROOT/bin/default.css\" failed"
    if [ -f ./installer ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./installer"
    sh ./installer || croak "\"sh ./installer\" failed"
    fi
}

# ----------------------   PRODUCE ALL GENERATED FILES   ----------------------

a_produce_all_generated_files() {
:
    carp "Generating files..."
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_config.opf"
    gsl -q -quiet:1 http_config.opf || croak "\"gsl -q -quiet:1 http_config.opf\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_address.icl"
    gsl -q -quiet:1 http_address.icl || croak "\"gsl -q -quiet:1 http_address.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_address_table.icl"
    gsl -q -quiet:1 http_address_table.icl || croak "\"gsl -q -quiet:1 http_address_table.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_request.icl"
    gsl -q -quiet:1 http_request.icl || croak "\"gsl -q -quiet:1 http_request.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_response.icl"
    gsl -q -quiet:1 http_response.icl || croak "\"gsl -q -quiet:1 http_response.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_module.icl"
    gsl -q -quiet:1 http_driver_module.icl || croak "\"gsl -q -quiet:1 http_driver_module.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_module.icl"
    gsl -q -quiet:1 http_access_module.icl || croak "\"gsl -q -quiet:1 http_access_module.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_context.icl"
    gsl -q -quiet:1 http_driver_context.icl || croak "\"gsl -q -quiet:1 http_driver_context.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_context.icl"
    gsl -q -quiet:1 http_access_context.icl || croak "\"gsl -q -quiet:1 http_access_context.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_file.icl"
    gsl -q -quiet:1 http_driver_file.icl || croak "\"gsl -q -quiet:1 http_driver_file.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_cgi.icl"
    gsl -q -quiet:1 http_driver_cgi.icl || croak "\"gsl -q -quiet:1 http_driver_cgi.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_null.icl"
    gsl -q -quiet:1 http_driver_null.icl || croak "\"gsl -q -quiet:1 http_driver_null.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_logger.icl"
    gsl -q -quiet:1 http_access_logger.icl || croak "\"gsl -q -quiet:1 http_access_logger.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_policy.icl"
    gsl -q -quiet:1 http_access_policy.icl || croak "\"gsl -q -quiet:1 http_access_policy.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_refresh.icl"
    gsl -q -quiet:1 http_access_refresh.icl || croak "\"gsl -q -quiet:1 http_access_refresh.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_dos.icl"
    gsl -q -quiet:1 http_access_dos.icl || croak "\"gsl -q -quiet:1 http_access_dos.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_agent.smt"
    gsl -q -quiet:1 http_agent.smt || croak "\"gsl -q -quiet:1 http_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_server.icl"
    gsl -q -quiet:1 http_server.icl || croak "\"gsl -q -quiet:1 http_server.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http.icl"
    gsl -q -quiet:1 http.icl || croak "\"gsl -q -quiet:1 http.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "perl -S ipr_resource.pl -@ http_static.rc"
    perl -S ipr_resource.pl -@ http_static.rc || croak "\"perl -S ipr_resource.pl -@ http_static.rc\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_config.icl"
    gsl -q -quiet:1 http_config.icl || croak "\"gsl -q -quiet:1 http_config.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_file_agent.smt"
    gsl -q -quiet:1 http_driver_file_agent.smt || croak "\"gsl -q -quiet:1 http_driver_file_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_cgi_agent.smt"
    gsl -q -quiet:1 http_driver_cgi_agent.smt || croak "\"gsl -q -quiet:1 http_driver_cgi_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_null_agent.smt"
    gsl -q -quiet:1 http_driver_null_agent.smt || croak "\"gsl -q -quiet:1 http_driver_null_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_logger_agent.smt"
    gsl -q -quiet:1 http_access_logger_agent.smt || croak "\"gsl -q -quiet:1 http_access_logger_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_policy_agent.smt"
    gsl -q -quiet:1 http_access_policy_agent.smt || croak "\"gsl -q -quiet:1 http_access_policy_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_refresh_agent.smt"
    gsl -q -quiet:1 http_access_refresh_agent.smt || croak "\"gsl -q -quiet:1 http_access_refresh_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_dos_agent.smt"
    gsl -q -quiet:1 http_access_dos_agent.smt || croak "\"gsl -q -quiet:1 http_access_dos_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_server_agent.smt"
    gsl -q -quiet:1 http_server_agent.smt || croak "\"gsl -q -quiet:1 http_server_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_static.icl"
    gsl -q -quiet:1 http_static.icl || croak "\"gsl -q -quiet:1 http_static.icl\" failed"
    PUSHDIR=`pwd`
    cd webpages
    cd $PUSHDIR
    echo "Source files successfully generated">stamp_generate
}

# ------------------------   PRODUCE GENERATED FILES   ------------------------

a_produce_generated_files() {
:
    carp "Generating files..."
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_config.opf"
    gsl -q -quiet:1 http_config.opf || croak "\"gsl -q -quiet:1 http_config.opf\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_address.icl"
    gsl -q -quiet:1 http_address.icl || croak "\"gsl -q -quiet:1 http_address.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_address_table.icl"
    gsl -q -quiet:1 http_address_table.icl || croak "\"gsl -q -quiet:1 http_address_table.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_request.icl"
    gsl -q -quiet:1 http_request.icl || croak "\"gsl -q -quiet:1 http_request.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_response.icl"
    gsl -q -quiet:1 http_response.icl || croak "\"gsl -q -quiet:1 http_response.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_module.icl"
    gsl -q -quiet:1 http_driver_module.icl || croak "\"gsl -q -quiet:1 http_driver_module.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_module.icl"
    gsl -q -quiet:1 http_access_module.icl || croak "\"gsl -q -quiet:1 http_access_module.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_context.icl"
    gsl -q -quiet:1 http_driver_context.icl || croak "\"gsl -q -quiet:1 http_driver_context.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_context.icl"
    gsl -q -quiet:1 http_access_context.icl || croak "\"gsl -q -quiet:1 http_access_context.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_file.icl"
    gsl -q -quiet:1 http_driver_file.icl || croak "\"gsl -q -quiet:1 http_driver_file.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_cgi.icl"
    gsl -q -quiet:1 http_driver_cgi.icl || croak "\"gsl -q -quiet:1 http_driver_cgi.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_null.icl"
    gsl -q -quiet:1 http_driver_null.icl || croak "\"gsl -q -quiet:1 http_driver_null.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_logger.icl"
    gsl -q -quiet:1 http_access_logger.icl || croak "\"gsl -q -quiet:1 http_access_logger.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_policy.icl"
    gsl -q -quiet:1 http_access_policy.icl || croak "\"gsl -q -quiet:1 http_access_policy.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_refresh.icl"
    gsl -q -quiet:1 http_access_refresh.icl || croak "\"gsl -q -quiet:1 http_access_refresh.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_dos.icl"
    gsl -q -quiet:1 http_access_dos.icl || croak "\"gsl -q -quiet:1 http_access_dos.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_agent.smt"
    gsl -q -quiet:1 http_agent.smt || croak "\"gsl -q -quiet:1 http_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_server.icl"
    gsl -q -quiet:1 http_server.icl || croak "\"gsl -q -quiet:1 http_server.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http.icl"
    gsl -q -quiet:1 http.icl || croak "\"gsl -q -quiet:1 http.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "perl -S ipr_resource.pl -@ http_static.rc"
    perl -S ipr_resource.pl -@ http_static.rc || croak "\"perl -S ipr_resource.pl -@ http_static.rc\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_config.icl"
    gsl -q -quiet:1 http_config.icl || croak "\"gsl -q -quiet:1 http_config.icl\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_file_agent.smt"
    gsl -q -quiet:1 http_driver_file_agent.smt || croak "\"gsl -q -quiet:1 http_driver_file_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_cgi_agent.smt"
    gsl -q -quiet:1 http_driver_cgi_agent.smt || croak "\"gsl -q -quiet:1 http_driver_cgi_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_driver_null_agent.smt"
    gsl -q -quiet:1 http_driver_null_agent.smt || croak "\"gsl -q -quiet:1 http_driver_null_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_logger_agent.smt"
    gsl -q -quiet:1 http_access_logger_agent.smt || croak "\"gsl -q -quiet:1 http_access_logger_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_policy_agent.smt"
    gsl -q -quiet:1 http_access_policy_agent.smt || croak "\"gsl -q -quiet:1 http_access_policy_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_refresh_agent.smt"
    gsl -q -quiet:1 http_access_refresh_agent.smt || croak "\"gsl -q -quiet:1 http_access_refresh_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_access_dos_agent.smt"
    gsl -q -quiet:1 http_access_dos_agent.smt || croak "\"gsl -q -quiet:1 http_access_dos_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_server_agent.smt"
    gsl -q -quiet:1 http_server_agent.smt || croak "\"gsl -q -quiet:1 http_server_agent.smt\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl -q -quiet:1 http_static.icl"
    gsl -q -quiet:1 http_static.icl || croak "\"gsl -q -quiet:1 http_static.icl\" failed"
    PUSHDIR=`pwd`
    cd webpages
    cd $PUSHDIR
    echo "Source files successfully generated">stamp_generate
}

# -----------------------   REMOVE GENERATED BINARIES   -----------------------

a_remove_generated_binaries() {
:
    rm -f libhttp.a
    rm -f http_config_test_test.o
    rm -f http_config_test_test
    rm -f http_config.o
    rm -f http_address_test_test.o
    rm -f http_address_test_test
    rm -f http_address.o
    rm -f http_address_table_test_test.o
    rm -f http_address_table_test_test
    rm -f http_address_table.o
    rm -f http_request_test_test.o
    rm -f http_request_test_test
    rm -f http_request.o
    rm -f http_response_test_test.o
    rm -f http_response_test_test
    rm -f http_response.o
    rm -f http_driver_module_test_test.o
    rm -f http_driver_module_test_test
    rm -f http_driver_module.o
    rm -f http_access_module_test_test.o
    rm -f http_access_module_test_test
    rm -f http_access_module.o
    rm -f http_driver_context_test_test.o
    rm -f http_driver_context_test_test
    rm -f http_driver_context.o
    rm -f http_access_context_test_test.o
    rm -f http_access_context_test_test
    rm -f http_access_context.o
    rm -f http_driver_file_agent.o
    rm -f http_driver_file_test_test.o
    rm -f http_driver_file_test_test
    rm -f http_driver_file.o
    rm -f http_driver_cgi_agent.o
    rm -f http_driver_cgi_test_test.o
    rm -f http_driver_cgi_test_test
    rm -f http_driver_cgi.o
    rm -f http_driver_null_agent.o
    rm -f http_driver_null_test_test.o
    rm -f http_driver_null_test_test
    rm -f http_driver_null.o
    rm -f http_access_logger_agent.o
    rm -f http_access_logger_test_test.o
    rm -f http_access_logger_test_test
    rm -f http_access_logger.o
    rm -f http_access_policy_agent.o
    rm -f http_access_policy_test_test.o
    rm -f http_access_policy_test_test
    rm -f http_access_policy.o
    rm -f http_access_refresh_agent.o
    rm -f http_access_refresh_test_test.o
    rm -f http_access_refresh_test_test
    rm -f http_access_refresh.o
    rm -f http_access_dos_agent.o
    rm -f http_access_dos_test_test.o
    rm -f http_access_dos_test_test
    rm -f http_access_dos.o
    rm -f http_agent.o
    rm -f http_server_agent.o
    rm -f http_server_test_test.o
    rm -f http_server_test_test
    rm -f http_server.o
    rm -f http.o
    rm -f http_static_test_test.o
    rm -f http_static_test_test
    rm -f http_static.o
    rm -f httpd.o
    rm -f httpd
    rm -f http_config_test.o
    rm -f http_config_test
    rm -f http_config.o
    rm -f http_address_test.o
    rm -f http_address_test
    rm -f http_address.o
    rm -f http_address_table_test.o
    rm -f http_address_table_test
    rm -f http_address_table.o
    rm -f http_request_test.o
    rm -f http_request_test
    rm -f http_request.o
    rm -f http_response_test.o
    rm -f http_response_test
    rm -f http_response.o
    rm -f http_driver_module_test.o
    rm -f http_driver_module_test
    rm -f http_driver_module.o
    rm -f http_access_module_test.o
    rm -f http_access_module_test
    rm -f http_access_module.o
    rm -f http_driver_context_test.o
    rm -f http_driver_context_test
    rm -f http_driver_context.o
    rm -f http_access_context_test.o
    rm -f http_access_context_test
    rm -f http_access_context.o
    rm -f http_driver_file_agent.o
    rm -f http_driver_file_test.o
    rm -f http_driver_file_test
    rm -f http_driver_file.o
    rm -f http_driver_cgi_agent.o
    rm -f http_driver_cgi_test.o
    rm -f http_driver_cgi_test
    rm -f http_driver_cgi.o
    rm -f http_driver_null_agent.o
    rm -f http_driver_null_test.o
    rm -f http_driver_null_test
    rm -f http_driver_null.o
    rm -f http_access_logger_agent.o
    rm -f http_access_logger_test.o
    rm -f http_access_logger_test
    rm -f http_access_logger.o
    rm -f http_access_policy_agent.o
    rm -f http_access_policy_test.o
    rm -f http_access_policy_test
    rm -f http_access_policy.o
    rm -f http_access_refresh_agent.o
    rm -f http_access_refresh_test.o
    rm -f http_access_refresh_test
    rm -f http_access_refresh.o
    rm -f http_access_dos_agent.o
    rm -f http_access_dos_test.o
    rm -f http_access_dos_test
    rm -f http_access_dos.o
    rm -f http_agent.o
    rm -f http_server_agent.o
    rm -f http_server_test.o
    rm -f http_server_test
    rm -f http_server.o
    rm -f http.o
    rm -f http_static_test.o
    rm -f http_static_test
    rm -f http_static.o
    rm -f webpages/libhttp.a
    PUSHDIR=`pwd`
    cd webpages
    cd $PUSHDIR
}

# -----------------------   REMOVE GENERATED SOURCES   ------------------------

a_remove_generated_sources() {
:
    rm -f http_address_table.icl
    rm -f http_config.icl
    rm -f http_config_test.c
    rm -f http_config.h
    rm -f http_config.c
    rm -f http_config.txt
    rm -f http_address_test.c
    rm -f http_address.h
    rm -f http_address.c
    rm -f http_address_table_test.c
    rm -f http_address_table.h
    rm -f http_address_table.c
    rm -f http_request_test.c
    rm -f http_request.h
    rm -f http_request.c
    rm -f http_response_test.c
    rm -f http_response.h
    rm -f http_response.c
    rm -f http_driver_module_front.icl
    rm -f http_driver_module_back.icl
    rm -f http_driver_module_test.c
    rm -f http_driver_module.h
    rm -f http_driver_module.c
    rm -f http_access_module_front.icl
    rm -f http_access_module_back.icl
    rm -f http_access_module_test.c
    rm -f http_access_module.h
    rm -f http_access_module.c
    rm -f http_driver_context_test.c
    rm -f http_driver_context.h
    rm -f http_driver_context.c
    rm -f http_access_context_test.c
    rm -f http_access_context.h
    rm -f http_access_context.c
    rm -f http_driver_file_agent.smt
    rm -f http_driver_file_agent.h
    rm -f http_driver_file_agent.c
    rm -f http_driver_file_test.c
    rm -f http_driver_file.h
    rm -f http_driver_file.c
    rm -f http_driver_cgi_agent.smt
    rm -f http_driver_cgi_agent.h
    rm -f http_driver_cgi_agent.c
    rm -f http_driver_cgi_test.c
    rm -f http_driver_cgi.h
    rm -f http_driver_cgi.c
    rm -f http_driver_null_agent.smt
    rm -f http_driver_null_agent.h
    rm -f http_driver_null_agent.c
    rm -f http_driver_null_test.c
    rm -f http_driver_null.h
    rm -f http_driver_null.c
    rm -f http_access_logger_agent.smt
    rm -f http_access_logger_agent.h
    rm -f http_access_logger_agent.c
    rm -f http_access_logger_test.c
    rm -f http_access_logger.h
    rm -f http_access_logger.c
    rm -f http_access_policy_agent.smt
    rm -f http_access_policy_agent.h
    rm -f http_access_policy_agent.c
    rm -f http_access_policy_test.c
    rm -f http_access_policy.h
    rm -f http_access_policy.c
    rm -f http_access_refresh_agent.smt
    rm -f http_access_refresh_agent.h
    rm -f http_access_refresh_agent.c
    rm -f http_access_refresh_test.c
    rm -f http_access_refresh.h
    rm -f http_access_refresh.c
    rm -f http_access_dos_agent.smt
    rm -f http_access_dos_agent.h
    rm -f http_access_dos_agent.c
    rm -f http_access_dos_test.c
    rm -f http_access_dos.h
    rm -f http_access_dos.c
    rm -f http_agent.h
    rm -f http_agent.c
    rm -f http_server_agent.smt
    rm -f http_server_agent.h
    rm -f http_server_agent.c
    rm -f http_server_test.c
    rm -f http_server.h
    rm -f http_server.c
    rm -f http.h
    rm -f http.c
    rm -f http_static.icl
    rm -f http_static_test.c
    rm -f http_static.h
    rm -f http_static.c
    rm -f stamp_generate
    rm -f configure
    rm -f Makefile.unix
    rm -f configure.bat
    rm -f Makefile.win32
    rm -f libhttp.vcproj
    PUSHDIR=`pwd`
    cd webpages
    cd $PUSHDIR
    rm -f http_*.zip
    rm -f http_*.tar.gz
}

# ------------------------   REPORT HELP INFORMATION   ------------------------

a_report_help_information() {
:
    echo "The commands you can currently use on this project are:"
    echo ""
    eval "actions_$state"
}

# ------------------------   REPORT PROJECT VERSION   -------------------------

a_report_project_version() {
:
    echo "http-1.0"
}

# -------------------------   RUN REGRESSION TESTS   --------------------------

a_run_regression_tests() {
:
    carp "Running regression tests..."
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_config_test"
    else
        RUN_COMMAND="./http_config_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_address_test"
    else
        RUN_COMMAND="./http_address_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_address_table_test"
    else
        RUN_COMMAND="./http_address_table_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_request_test"
    else
        RUN_COMMAND="./http_request_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_response_test"
    else
        RUN_COMMAND="./http_response_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_driver_module_test"
    else
        RUN_COMMAND="./http_driver_module_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_access_module_test"
    else
        RUN_COMMAND="./http_access_module_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_driver_context_test"
    else
        RUN_COMMAND="./http_driver_context_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_access_context_test"
    else
        RUN_COMMAND="./http_access_context_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_driver_file_test"
    else
        RUN_COMMAND="./http_driver_file_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_driver_cgi_test"
    else
        RUN_COMMAND="./http_driver_cgi_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_driver_null_test"
    else
        RUN_COMMAND="./http_driver_null_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_access_logger_test"
    else
        RUN_COMMAND="./http_access_logger_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_access_policy_test"
    else
        RUN_COMMAND="./http_access_policy_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_access_refresh_test"
    else
        RUN_COMMAND="./http_access_refresh_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_access_dos_test"
    else
        RUN_COMMAND="./http_access_dos_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_server_test"
    else
        RUN_COMMAND="./http_server_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    if [ "$BOOM_TRACE" ]; then
        RUN_COMMAND="./http_static_test"
    else
        RUN_COMMAND="./http_static_test -q"
    fi
    [ "$BOOM_TRACE" ] && echo "$RUN_COMMAND"
    $RUN_COMMAND || croak "\"$RUN_COMMAND\" failed"
    PUSHDIR=`pwd`
    cd webpages
    cd $PUSHDIR
    #   Run local selftest script if present
    if [ -f ./selftest ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./selftest"
    sh ./selftest || croak "\"sh ./selftest\" failed"
    fi
}

# ----------------------   USE SOURCE CONTROL REVISION   ----------------------

a_use_source_control_revision() {
:
    if [ -d .svn ]; then
        SVN_REVISION="`svn info | awk '/^Revision:/ { print $2 }'`"
    else
        SVN_REVISION="svn"
    fi
    MY_VERSION=${MY_VERSION}-${SVN_REVISION}
}

actions_initial() {
    return
}

actions_initial_check() {
    return
}

actions_repository() {
echo "build:"
    echo "  From the raw project sources, produces all generated files, and"
    echo "    compiles all source files."
echo "compile:"
    echo "  From the raw project sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the raw project sources, removes all generated"
    echo "    source and binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
echo "distrib:"
    echo "  Creates a source distribution for the project.  Note that binary"
    echo "    distributions can only be created at the product level."
echo "distsrc:"
    echo "  Equivalent to distrib, provided for compatibility."
echo "distrev:"
    echo "  Creates a source distribution for the project.  Builds distribution"
    echo "    packages based on source control version number. Note that binary"
    echo "    distributions can only be created at the product level."
actions_default
    return
}

actions_source() {
echo "build:"
    echo "  From the packaged sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
actions_default
    return
}

actions_stripped() {
echo "build:"
    echo "  From the stripped-down packaged sources, compiles all source files"
    echo "    without any code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
actions_default
    return
}

actions_default() {
echo "install:"
    echo "  Installs deliverables into the final or temporary install tree."
    echo "    This action is only valid after a successful build."
echo "test:"
    echo "  Runs regression tests for the project."
echo "help:"
    echo "  Shows a list of the commands allowed on the project."
echo "version:"
    echo "  Show project version."
    return
}

#   State machine starts here
#
firsttime=true
while [ "$1" -o "$firsttime" ]; do
  firsttime=
  state=initial
  event=ok
  debug=
  export state event debug
  while [ -n "$state" ]; do
    if [ "$inherit_state" ]; then
        check_state=$inherit_state
        inherit_state=
    else
        check_state=$state
    fi
    case "$check_state" in
    initial)
        if [ -n "$debug" ]; then
            echo "State: initial"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        ok)
            if [ -n "$debug" ]; then
                echo "Event: ok"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check operating context"
            fi
            if [ -z "$exception" ]; then
                a_check_operating_context
            fi
            state=initial_check
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    initial_check)
        if [ -n "$debug" ]; then
            echo "State: initial check"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        repository)
            if [ -n "$debug" ]; then
                echo "Event: repository"
            fi
            event=
            exception=
            state=repository
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        source)
            if [ -n "$debug" ]; then
                echo "Event: source"
            fi
            event=
            exception=
            state=source
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        stripped)
            if [ -n "$debug" ]; then
                echo "Event: stripped"
            fi
            event=
            exception=
            state=stripped
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    repository)
        if [ -n "$debug" ]; then
            echo "State: repository"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        compile)
            if [ -n "$debug" ]; then
                echo "Event: compile"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated sources"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_sources
            fi
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrib)
            if [ -n "$debug" ]; then
                echo "Event: distrib"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distsrc)
            if [ -n "$debug" ]; then
                echo "Event: distsrc"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrev)
            if [ -n "$debug" ]; then
                echo "Event: distrev"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: use source control revision"
            fi
            if [ -z "$exception" ]; then
                a_use_source_control_revision
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    source)
        if [ -n "$debug" ]; then
            echo "State: source"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    stripped)
        if [ -n "$debug" ]; then
            echo "State: stripped"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    default)
        if [ -n "$debug" ]; then
            echo "State: default"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        install)
            if [ -n "$debug" ]; then
                echo "Event: install"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: install deliverables"
            fi
            if [ -z "$exception" ]; then
                a_install_deliverables
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        test)
            if [ -n "$debug" ]; then
                echo "Event: test"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: run regression tests"
            fi
            if [ -z "$exception" ]; then
                a_run_regression_tests
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        help)
            if [ -n "$debug" ]; then
                echo "Event: help"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        version)
            if [ -n "$debug" ]; then
                echo "Event: version"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report project version"
            fi
            if [ -z "$exception" ]; then
                a_report_project_version
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        empty)
            if [ -n "$debug" ]; then
                echo "Event: empty"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    esac
  done
done
