@echo off
:-
:-  Boom builder for SMT 3.0c2
:-  Generated by iMatix Boom from standard.pwl
:-  
:-  Copyright (c) 1996-2009 iMatix Corporation
:-  All rights reserved.
:-  
:-  This file is licensed under the BSD license as follows:
:-  
:-  Redistribution and use in source and binary forms, with or without
:-  modification, are permitted provided that the following conditions
:-  are met:
:-  
:-  * Redistributions of source code must retain the above copyright
:-    notice, this list of conditions and the following disclaimer.
:-  * Redistributions in binary form must reproduce the above copyright
:-    notice, this list of conditions and the following disclaimer in
:-    the documentation and/or other materials provided with the
:-    distribution.
:-  * Neither the name of iMatix Corporation nor the names of its
:-    contributors may be used to endorse or promote products derived
:-    from this software without specific prior written permission.
:-  
:-  THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
:-  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
:-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
:-  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
:-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
:-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
:-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
:-  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
:-  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
:-  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
:-  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
:-
:-  Start CMD.EXE version detection
verify other 2>nul
setlocal enableextensions
if errorlevel 0 goto __cmd_ok
echo %0: This command requires command extensions version 2 in CMD.EXE.  
echo %0: Please use a supported system (Windows 2000 or newer).
exit
:__cmd_ok
setlocal enabledelayedexpansion
:-  End CMD.EXE version detection
goto :init
:-
:-  Subroutine: boom_model_init
:-  Initialises BOOM_MODEL to default if not set
:-  Expands BOOM_MODEL components into individual environment variables
:-
:boom_model_init
if "!BOOM_MODEL!"=="" (
    set BOOM_MODEL=release,st
)
set BOOM_MODEL__PLACEHOLDER=1
for /f "usebackq delims==" %%v in (`set BOOM_MODEL_`) do set %%v=
set BOOM_MODEL__PLACEHOLDER=
for %%m in (!BOOM_MODEL!) do set BOOM_MODEL_%%m=1
:-  If the user set BOOM_MODEL but did not include release/debug or st/mt
:-  set these to defaults.
if not "!BOOM_MODEL_RELEASE!"=="1" (
    if not "!BOOM_MODEL_DEBUG!"=="1" (
        set BOOM_MODEL_RELEASE=1
        set BOOM_MODEL=!BOOM_MODEL!,release
    )
)
if not "!BOOM_MODEL_ST!"=="1" (
    if not "!BOOM_MODEL_MT!"=="1" (
        set BOOM_MODEL_ST=1
        set BOOM_MODEL=!BOOM_MODEL!,st
    )
)
goto :eof
:init
setlocal
:-
:-  Set environment variables to point to install location
:-  Start by using final IBASE, then handle -install path
set self=%0
set MY_VERSION=3.0c2
set OLDPATH=!PATH!
set OLDPERLLIB=!PERLLIB!
if .!IBASE!==. (
    echo boom E: [smt]: The IBASE variable is not set.             Please set it to the location where SMT should be installed.
    exit /b 1
)
if .%1==.-v (
    set BOOM_TRACE=1
    shift
)
call :boom_model_init
if .%1==.-install goto tempinst
:-  Normal use, use IBASE
    set PATH=!IBASE!\bin;!PATH!
    set PERLLIB=!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!IBASE!\include
    set _INSTALL_ROOT=!IBASE!
    goto process

:tempinst
:-  Building product, we use -install directory first, then IBASE
    if not exist %2 (
       echo "Invalid command syntax - please contact imatix-tech"
       exit /b 1
    )
    pushd %2
    set _LOCAL_BASE=!cd!
    popd
    set PATH=!_LOCAL_BASE!\bin;!IBASE!\bin;!PATH!
    set PERLLIB=!_LOCAL_BASE!\bin;!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!_LOCAL_BASE!\include;!IBASE!\include
    set _INSTALL_ROOT=!_LOCAL_BASE!
    shift
    shift
    goto process

:batch
    shift

:process
    set state=initial
    set event=ok
    set debug=0
    goto s_!state!

:---------------------------   BUILD BINARY FILES   ---------------------------

:a_build_binary_files
    goto :eof

:--------------------------   BUILD SOURCE PACKAGES   -------------------------

:a_build_source_packages
   if exist _package.lst del _package.lst
    if exist smt\version.h echo smt\version.h>>_package.lst
    if exist smt\smtlib.c echo smt\smtlib.c>>_package.lst
    if exist smt\smtlib.h echo smt\smtlib.h>>_package.lst
    if exist smt\smtserv.c echo smt\smtserv.c>>_package.lst
    if exist smt\smttime.c echo smt\smttime.c>>_package.lst
    if exist smt\smtecho.c echo smt\smtecho.c>>_package.lst
    if exist smt\smtlog.c echo smt\smtlog.c>>_package.lst
    if exist smt\smtxlog.c echo smt\smtxlog.c>>_package.lst
    if exist smt\smtoper.c echo smt\smtoper.c>>_package.lst
    if exist smt\smtpipe.c echo smt\smtpipe.c>>_package.lst
    if exist smt\smtpop.c echo smt\smtpop.c>>_package.lst
    if exist smt\smtrdns.c echo smt\smtrdns.c>>_package.lst
    if exist smt\smtrdnsl.c echo smt\smtrdnsl.c>>_package.lst
    if exist smt\smtsimu.c echo smt\smtsimu.c>>_package.lst
    if exist smt\smtsimu.h echo smt\smtsimu.h>>_package.lst
    if exist smt\smtslot.c echo smt\smtslot.c>>_package.lst
    if exist smt\smtsmtp.c echo smt\smtsmtp.c>>_package.lst
    if exist smt\smtsock.c echo smt\smtsock.c>>_package.lst
    if exist smt\smttran.c echo smt\smttran.c>>_package.lst
    if exist smt\smttst1.c echo smt\smttst1.c>>_package.lst
    if exist smt\smttst2.c echo smt\smttst2.c>>_package.lst
    if exist smt\smttst3.c echo smt\smttst3.c>>_package.lst
    if exist smt\smtmem.h echo smt\smtmem.h>>_package.lst
    if exist smt\smtdefn.h echo smt\smtdefn.h>>_package.lst
    if exist smt\smthead.h echo smt\smthead.h>>_package.lst
    if exist smt\smtpriv.h echo smt\smtpriv.h>>_package.lst
    if exist smt\smtxlog.h echo smt\smtxlog.h>>_package.lst
    if exist smt\echocli.c echo smt\echocli.c>>_package.lst
    if exist smt\echod.c echo smt\echod.c>>_package.lst
    if exist smt\smtschm.c echo smt\smtschm.c>>_package.lst
    if exist smt\smttest.gsl echo smt\smttest.gsl>>_package.lst
    if exist smt\smtexdr.gsl echo smt\smtexdr.gsl>>_package.lst
    if exist smt\smtmesg.gsl echo smt\smtmesg.gsl>>_package.lst
    if exist smt\smtmsg.xml echo smt\smtmsg.xml>>_package.lst
    if exist smt\smtsslm.xml echo smt\smtsslm.xml>>_package.lst
    if exist smt\sysman.c echo smt\sysman.c>>_package.lst
    if exist smt\syscli.c echo smt\syscli.c>>_package.lst
    if exist smt\sysmana.c echo smt\sysmana.c>>_package.lst
    if exist smt\sysclia.c echo smt\sysclia.c>>_package.lst
    if exist smt\sysman.h echo smt\sysman.h>>_package.lst
    if exist smt\tstpop.c echo smt\tstpop.c>>_package.lst
    if exist smt\tstpop.l echo smt\tstpop.l>>_package.lst
    if exist smt\tstpop.cfg echo smt\tstpop.cfg>>_package.lst
    if exist smt\tstrdns.c echo smt\tstrdns.c>>_package.lst
    if exist smt\tstslot.c echo smt\tstslot.c>>_package.lst
    if exist smt\tstsmtp.c echo smt\tstsmtp.c>>_package.lst
    if exist smt\tstsmtp.l echo smt\tstsmtp.l>>_package.lst
    if exist smt\tstsmtp.cfg echo smt\tstsmtp.cfg>>_package.lst
    if exist smt\tstsock.c echo smt\tstsock.c>>_package.lst
    if exist smt\tsttime.c echo smt\tsttime.c>>_package.lst
    if exist smt\prelude.pdl echo smt\prelude.pdl>>_package.lst
    if exist smt\license.gpl echo smt\license.gpl>>_package.lst
    if exist smt\project.pdl echo smt\project.pdl>>_package.lst
    if exist smt\readme.txt echo smt\readme.txt>>_package.lst
    if exist smt\smtserv.h echo smt\smtserv.h>>_package.lst
    if exist smt\smttime.h echo smt\smttime.h>>_package.lst
    if exist smt\smtecho.l echo smt\smtecho.l>>_package.lst
    if exist smt\smtecho.i echo smt\smtecho.i>>_package.lst
    if exist smt\smtecho.d echo smt\smtecho.d>>_package.lst
    if exist smt\smtlog.l echo smt\smtlog.l>>_package.lst
    if exist smt\smtlog.i echo smt\smtlog.i>>_package.lst
    if exist smt\smtlog.d echo smt\smtlog.d>>_package.lst
    if exist smt\smtxlog.l echo smt\smtxlog.l>>_package.lst
    if exist smt\smtxlog.i echo smt\smtxlog.i>>_package.lst
    if exist smt\smtxlog.d echo smt\smtxlog.d>>_package.lst
    if exist smt\smtoper.l echo smt\smtoper.l>>_package.lst
    if exist smt\smtoper.i echo smt\smtoper.i>>_package.lst
    if exist smt\smtoper.d echo smt\smtoper.d>>_package.lst
    if exist smt\smtpipe.l echo smt\smtpipe.l>>_package.lst
    if exist smt\smtpipe.i echo smt\smtpipe.i>>_package.lst
    if exist smt\smtpipe.d echo smt\smtpipe.d>>_package.lst
    if exist smt\smtpop.l echo smt\smtpop.l>>_package.lst
    if exist smt\smtpop.i echo smt\smtpop.i>>_package.lst
    if exist smt\smtpop.d echo smt\smtpop.d>>_package.lst
    if exist smt\smtrdns.l echo smt\smtrdns.l>>_package.lst
    if exist smt\smtrdns.i echo smt\smtrdns.i>>_package.lst
    if exist smt\smtrdns.d echo smt\smtrdns.d>>_package.lst
    if exist smt\smtrdnsl.h echo smt\smtrdnsl.h>>_package.lst
    if exist smt\smtsimu.l echo smt\smtsimu.l>>_package.lst
    if exist smt\smtsimu.i echo smt\smtsimu.i>>_package.lst
    if exist smt\smtsimu.d echo smt\smtsimu.d>>_package.lst
    if exist smt\smtslot.l echo smt\smtslot.l>>_package.lst
    if exist smt\smtslot.i echo smt\smtslot.i>>_package.lst
    if exist smt\smtslot.d echo smt\smtslot.d>>_package.lst
    if exist smt\smtsmtp.l echo smt\smtsmtp.l>>_package.lst
    if exist smt\smtsmtp.i echo smt\smtsmtp.i>>_package.lst
    if exist smt\smtsmtp.d echo smt\smtsmtp.d>>_package.lst
    if exist smt\smtsock.l echo smt\smtsock.l>>_package.lst
    if exist smt\smtsock.i echo smt\smtsock.i>>_package.lst
    if exist smt\smtsock.d echo smt\smtsock.d>>_package.lst
    if exist smt\smttran.l echo smt\smttran.l>>_package.lst
    if exist smt\smttran.i echo smt\smttran.i>>_package.lst
    if exist smt\smttran.d echo smt\smttran.d>>_package.lst
    if exist smt\smttst1.l echo smt\smttst1.l>>_package.lst
    if exist smt\smttst1.i echo smt\smttst1.i>>_package.lst
    if exist smt\smttst1.d echo smt\smttst1.d>>_package.lst
    if exist smt\smttst2.l echo smt\smttst2.l>>_package.lst
    if exist smt\smttst2.i echo smt\smttst2.i>>_package.lst
    if exist smt\smttst2.d echo smt\smttst2.d>>_package.lst
    if exist smt\smttst3.l echo smt\smttst3.l>>_package.lst
    if exist smt\smttst3.i echo smt\smttst3.i>>_package.lst
    if exist smt\smttst3.d echo smt\smttst3.d>>_package.lst
    if exist smt\smtmsg.c echo smt\smtmsg.c>>_package.lst
    if exist smt\smtmsg.h echo smt\smtmsg.h>>_package.lst
    if exist smt\smtsslm.c echo smt\smtsslm.c>>_package.lst
    if exist smt\smtsslm.h echo smt\smtsslm.h>>_package.lst
    if exist smt\sysmana.l echo smt\sysmana.l>>_package.lst
    if exist smt\sysmana.i echo smt\sysmana.i>>_package.lst
    if exist smt\sysmana.d echo smt\sysmana.d>>_package.lst
    if exist smt\sysclia.l echo smt\sysclia.l>>_package.lst
    if exist smt\sysclia.i echo smt\sysclia.i>>_package.lst
    if exist smt\sysclia.d echo smt\sysclia.d>>_package.lst
    if exist smt\tstpop.i echo smt\tstpop.i>>_package.lst
    if exist smt\tstpop.d echo smt\tstpop.d>>_package.lst
    if exist smt\tstsmtp.i echo smt\tstsmtp.i>>_package.lst
    if exist smt\tstsmtp.d echo smt\tstsmtp.d>>_package.lst
    if exist smt\smt3.h echo smt\smt3.h>>_package.lst
    if exist smt\stamp_generate echo smt\stamp_generate>>_package.lst
    if exist smt\boomakew.bat echo smt\boomakew.bat>>_package.lst
    if exist smt\configure echo smt\configure>>_package.lst
    if exist smt\Makefile.unix echo smt\Makefile.unix>>_package.lst
    if exist smt\boomake echo smt\boomake>>_package.lst
    if exist smt\configure.bat echo smt\configure.bat>>_package.lst
    if exist smt\Makefile.win32 echo smt\Makefile.win32>>_package.lst
    if exist smt\boomake.bat echo smt\boomake.bat>>_package.lst
    if exist smt\libsmt3.vcproj echo smt\libsmt3.vcproj>>_package.lst
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    echo boom I: [smt]: Building smt-!MY_VERSION!-src.zip...
    zip  -rq _package -@<_package.lst
    unzip -q _package -d smt-!MY_VERSION!
    if exist  smt-!MY_VERSION!-src.zip del smt-!MY_VERSION!-src.zip
    zip -rmq smt-!MY_VERSION!-src.zip smt-!MY_VERSION!
    del _package.zip
    del _package.lst
    del stamp_source
    goto :eof

:----------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

:a_check_all_source_files_exist
    if not exist version.h (
        echo boom E: [smt]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlib.c (
        echo boom E: [smt]: smtlib.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlib.h (
        echo boom E: [smt]: smtlib.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtserv.c (
        echo boom E: [smt]: smtserv.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttime.c (
        echo boom E: [smt]: smttime.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.c (
        echo boom E: [smt]: smtecho.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.c (
        echo boom E: [smt]: smtlog.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.c (
        echo boom E: [smt]: smtxlog.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.c (
        echo boom E: [smt]: smtoper.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.c (
        echo boom E: [smt]: smtpipe.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.c (
        echo boom E: [smt]: smtpop.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.c (
        echo boom E: [smt]: smtrdns.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdnsl.c (
        echo boom E: [smt]: smtrdnsl.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.c (
        echo boom E: [smt]: smtsimu.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.h (
        echo boom E: [smt]: smtsimu.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.c (
        echo boom E: [smt]: smtslot.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.c (
        echo boom E: [smt]: smtsmtp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.c (
        echo boom E: [smt]: smtsock.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.c (
        echo boom E: [smt]: smttran.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.c (
        echo boom E: [smt]: smttst1.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.c (
        echo boom E: [smt]: smttst2.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.c (
        echo boom E: [smt]: smttst3.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmem.h (
        echo boom E: [smt]: smtmem.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtdefn.h (
        echo boom E: [smt]: smtdefn.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smthead.h (
        echo boom E: [smt]: smthead.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpriv.h (
        echo boom E: [smt]: smtpriv.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.h (
        echo boom E: [smt]: smtxlog.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist echocli.c (
        echo boom E: [smt]: echocli.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist echod.c (
        echo boom E: [smt]: echod.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtschm.c (
        echo boom E: [smt]: smtschm.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttest.gsl (
        echo boom E: [smt]: smttest.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtexdr.gsl (
        echo boom E: [smt]: smtexdr.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmesg.gsl (
        echo boom E: [smt]: smtmesg.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.xml (
        echo boom E: [smt]: smtmsg.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.xml (
        echo boom E: [smt]: smtsslm.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysman.c (
        echo boom E: [smt]: sysman.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist syscli.c (
        echo boom E: [smt]: syscli.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.c (
        echo boom E: [smt]: sysmana.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.c (
        echo boom E: [smt]: sysclia.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysman.h (
        echo boom E: [smt]: sysman.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.c (
        echo boom E: [smt]: tstpop.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.l (
        echo boom E: [smt]: tstpop.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.cfg (
        echo boom E: [smt]: tstpop.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstrdns.c (
        echo boom E: [smt]: tstrdns.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstslot.c (
        echo boom E: [smt]: tstslot.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.c (
        echo boom E: [smt]: tstsmtp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.l (
        echo boom E: [smt]: tstsmtp.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.cfg (
        echo boom E: [smt]: tstsmtp.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsock.c (
        echo boom E: [smt]: tstsock.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tsttime.c (
        echo boom E: [smt]: tsttime.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [smt]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [smt]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtserv.h (
        echo boom E: [smt]: smtserv.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttime.h (
        echo boom E: [smt]: smttime.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.l (
        echo boom E: [smt]: smtecho.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.i (
        echo boom E: [smt]: smtecho.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.d (
        echo boom E: [smt]: smtecho.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.l (
        echo boom E: [smt]: smtlog.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.i (
        echo boom E: [smt]: smtlog.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.d (
        echo boom E: [smt]: smtlog.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.l (
        echo boom E: [smt]: smtxlog.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.i (
        echo boom E: [smt]: smtxlog.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.d (
        echo boom E: [smt]: smtxlog.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.l (
        echo boom E: [smt]: smtoper.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.i (
        echo boom E: [smt]: smtoper.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.d (
        echo boom E: [smt]: smtoper.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.l (
        echo boom E: [smt]: smtpipe.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.i (
        echo boom E: [smt]: smtpipe.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.d (
        echo boom E: [smt]: smtpipe.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.l (
        echo boom E: [smt]: smtpop.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.i (
        echo boom E: [smt]: smtpop.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.d (
        echo boom E: [smt]: smtpop.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.l (
        echo boom E: [smt]: smtrdns.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.i (
        echo boom E: [smt]: smtrdns.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.d (
        echo boom E: [smt]: smtrdns.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdnsl.h (
        echo boom E: [smt]: smtrdnsl.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.l (
        echo boom E: [smt]: smtsimu.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.i (
        echo boom E: [smt]: smtsimu.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.d (
        echo boom E: [smt]: smtsimu.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.l (
        echo boom E: [smt]: smtslot.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.i (
        echo boom E: [smt]: smtslot.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.d (
        echo boom E: [smt]: smtslot.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.l (
        echo boom E: [smt]: smtsmtp.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.i (
        echo boom E: [smt]: smtsmtp.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.d (
        echo boom E: [smt]: smtsmtp.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.l (
        echo boom E: [smt]: smtsock.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.i (
        echo boom E: [smt]: smtsock.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.d (
        echo boom E: [smt]: smtsock.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.l (
        echo boom E: [smt]: smttran.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.i (
        echo boom E: [smt]: smttran.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.d (
        echo boom E: [smt]: smttran.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.l (
        echo boom E: [smt]: smttst1.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.i (
        echo boom E: [smt]: smttst1.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.d (
        echo boom E: [smt]: smttst1.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.l (
        echo boom E: [smt]: smttst2.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.i (
        echo boom E: [smt]: smttst2.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.d (
        echo boom E: [smt]: smttst2.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.l (
        echo boom E: [smt]: smttst3.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.i (
        echo boom E: [smt]: smttst3.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.d (
        echo boom E: [smt]: smttst3.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.c (
        echo boom E: [smt]: smtmsg.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.h (
        echo boom E: [smt]: smtmsg.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.c (
        echo boom E: [smt]: smtsslm.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.h (
        echo boom E: [smt]: smtsslm.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.l (
        echo boom E: [smt]: sysmana.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.i (
        echo boom E: [smt]: sysmana.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.d (
        echo boom E: [smt]: sysmana.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.l (
        echo boom E: [smt]: sysclia.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.i (
        echo boom E: [smt]: sysclia.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.d (
        echo boom E: [smt]: sysclia.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.i (
        echo boom E: [smt]: tstpop.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.d (
        echo boom E: [smt]: tstpop.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.i (
        echo boom E: [smt]: tstsmtp.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.d (
        echo boom E: [smt]: tstsmtp.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smt3.h (
        echo boom E: [smt]: smt3.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [smt]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [smt]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [smt]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [smt]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [smt]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [smt]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [smt]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [smt]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist libsmt3.vcproj (
        echo boom E: [smt]: libsmt3.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:------------------------   CHECK BINARY FILES EXIST   ------------------------

:a_check_binary_files_exist
    if not exist smtlib.h (
        echo boom E: [smt]: smtlib.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.h (
        echo boom E: [smt]: smtsimu.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmem.h (
        echo boom E: [smt]: smtmem.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtschm.c (
        echo boom E: [smt]: smtschm.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttest.gsl (
        echo boom E: [smt]: smttest.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtexdr.gsl (
        echo boom E: [smt]: smtexdr.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmesg.gsl (
        echo boom E: [smt]: smtmesg.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist libsmt3.lib (
        echo boom E: [smt]: libsmt3.lib is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [smt]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.h (
        echo boom E: [smt]: smtmsg.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.h (
        echo boom E: [smt]: smtsslm.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smt3.h (
        echo boom E: [smt]: smt3.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:-------------------------   CHECK OPERATING CONTEXT   ------------------------

:a_check_operating_context
    set event=repository
    if exist stamp_source   set event=source
    if exist stamp_stripped set event=stripped
    goto :eof

:------------------------   CHECK PROJECT FILES EXIST   -----------------------

:a_check_project_files_exist
    if not exist version.h (
        echo boom E: [smt]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlib.c (
        echo boom E: [smt]: smtlib.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlib.h (
        echo boom E: [smt]: smtlib.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtserv.c (
        echo boom E: [smt]: smtserv.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttime.c (
        echo boom E: [smt]: smttime.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.c (
        echo boom E: [smt]: smtecho.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.c (
        echo boom E: [smt]: smtlog.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.c (
        echo boom E: [smt]: smtxlog.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.c (
        echo boom E: [smt]: smtoper.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.c (
        echo boom E: [smt]: smtpipe.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.c (
        echo boom E: [smt]: smtpop.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.c (
        echo boom E: [smt]: smtrdns.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdnsl.c (
        echo boom E: [smt]: smtrdnsl.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.c (
        echo boom E: [smt]: smtsimu.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.h (
        echo boom E: [smt]: smtsimu.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.c (
        echo boom E: [smt]: smtslot.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.c (
        echo boom E: [smt]: smtsmtp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.c (
        echo boom E: [smt]: smtsock.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.c (
        echo boom E: [smt]: smttran.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.c (
        echo boom E: [smt]: smttst1.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.c (
        echo boom E: [smt]: smttst2.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.c (
        echo boom E: [smt]: smttst3.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmem.h (
        echo boom E: [smt]: smtmem.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtdefn.h (
        echo boom E: [smt]: smtdefn.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smthead.h (
        echo boom E: [smt]: smthead.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpriv.h (
        echo boom E: [smt]: smtpriv.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.h (
        echo boom E: [smt]: smtxlog.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist echocli.c (
        echo boom E: [smt]: echocli.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist echod.c (
        echo boom E: [smt]: echod.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtschm.c (
        echo boom E: [smt]: smtschm.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttest.gsl (
        echo boom E: [smt]: smttest.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtexdr.gsl (
        echo boom E: [smt]: smtexdr.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmesg.gsl (
        echo boom E: [smt]: smtmesg.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.xml (
        echo boom E: [smt]: smtmsg.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.xml (
        echo boom E: [smt]: smtsslm.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysman.c (
        echo boom E: [smt]: sysman.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist syscli.c (
        echo boom E: [smt]: syscli.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.c (
        echo boom E: [smt]: sysmana.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.c (
        echo boom E: [smt]: sysclia.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysman.h (
        echo boom E: [smt]: sysman.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.c (
        echo boom E: [smt]: tstpop.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.l (
        echo boom E: [smt]: tstpop.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.cfg (
        echo boom E: [smt]: tstpop.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstrdns.c (
        echo boom E: [smt]: tstrdns.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstslot.c (
        echo boom E: [smt]: tstslot.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.c (
        echo boom E: [smt]: tstsmtp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.l (
        echo boom E: [smt]: tstsmtp.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.cfg (
        echo boom E: [smt]: tstsmtp.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsock.c (
        echo boom E: [smt]: tstsock.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tsttime.c (
        echo boom E: [smt]: tsttime.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [smt]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [smt]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtserv.h (
        echo boom E: [smt]: smtserv.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttime.h (
        echo boom E: [smt]: smttime.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.l (
        echo boom E: [smt]: smtecho.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.l (
        echo boom E: [smt]: smtlog.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.l (
        echo boom E: [smt]: smtxlog.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.l (
        echo boom E: [smt]: smtoper.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.l (
        echo boom E: [smt]: smtpipe.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.l (
        echo boom E: [smt]: smtpop.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.l (
        echo boom E: [smt]: smtrdns.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdnsl.h (
        echo boom E: [smt]: smtrdnsl.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.l (
        echo boom E: [smt]: smtsimu.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.l (
        echo boom E: [smt]: smtslot.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.l (
        echo boom E: [smt]: smtsmtp.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.l (
        echo boom E: [smt]: smtsock.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.l (
        echo boom E: [smt]: smttran.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.l (
        echo boom E: [smt]: smttst1.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.l (
        echo boom E: [smt]: smttst2.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.l (
        echo boom E: [smt]: smttst3.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.l (
        echo boom E: [smt]: sysmana.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.l (
        echo boom E: [smt]: sysclia.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [smt]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [smt]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [smt]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:------------------------   CHECK SOURCE FILES EXIST   ------------------------

:a_check_source_files_exist
    if not exist version.h (
        echo boom E: [smt]: version.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlib.c (
        echo boom E: [smt]: smtlib.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlib.h (
        echo boom E: [smt]: smtlib.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtserv.c (
        echo boom E: [smt]: smtserv.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttime.c (
        echo boom E: [smt]: smttime.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.c (
        echo boom E: [smt]: smtecho.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.c (
        echo boom E: [smt]: smtlog.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.c (
        echo boom E: [smt]: smtxlog.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.c (
        echo boom E: [smt]: smtoper.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.c (
        echo boom E: [smt]: smtpipe.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.c (
        echo boom E: [smt]: smtpop.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.c (
        echo boom E: [smt]: smtrdns.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdnsl.c (
        echo boom E: [smt]: smtrdnsl.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.c (
        echo boom E: [smt]: smtsimu.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.h (
        echo boom E: [smt]: smtsimu.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.c (
        echo boom E: [smt]: smtslot.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.c (
        echo boom E: [smt]: smtsmtp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.c (
        echo boom E: [smt]: smtsock.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.c (
        echo boom E: [smt]: smttran.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.c (
        echo boom E: [smt]: smttst1.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.c (
        echo boom E: [smt]: smttst2.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.c (
        echo boom E: [smt]: smttst3.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmem.h (
        echo boom E: [smt]: smtmem.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtdefn.h (
        echo boom E: [smt]: smtdefn.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smthead.h (
        echo boom E: [smt]: smthead.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpriv.h (
        echo boom E: [smt]: smtpriv.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.h (
        echo boom E: [smt]: smtxlog.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist echocli.c (
        echo boom E: [smt]: echocli.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist echod.c (
        echo boom E: [smt]: echod.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtschm.c (
        echo boom E: [smt]: smtschm.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttest.gsl (
        echo boom E: [smt]: smttest.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtexdr.gsl (
        echo boom E: [smt]: smtexdr.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmesg.gsl (
        echo boom E: [smt]: smtmesg.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.xml (
        echo boom E: [smt]: smtmsg.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.xml (
        echo boom E: [smt]: smtsslm.xml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysman.c (
        echo boom E: [smt]: sysman.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist syscli.c (
        echo boom E: [smt]: syscli.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.c (
        echo boom E: [smt]: sysmana.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.c (
        echo boom E: [smt]: sysclia.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysman.h (
        echo boom E: [smt]: sysman.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.c (
        echo boom E: [smt]: tstpop.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.l (
        echo boom E: [smt]: tstpop.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.cfg (
        echo boom E: [smt]: tstpop.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstrdns.c (
        echo boom E: [smt]: tstrdns.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstslot.c (
        echo boom E: [smt]: tstslot.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.c (
        echo boom E: [smt]: tstsmtp.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.l (
        echo boom E: [smt]: tstsmtp.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.cfg (
        echo boom E: [smt]: tstsmtp.cfg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsock.c (
        echo boom E: [smt]: tstsock.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tsttime.c (
        echo boom E: [smt]: tsttime.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [smt]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [smt]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtserv.h (
        echo boom E: [smt]: smtserv.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttime.h (
        echo boom E: [smt]: smttime.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.l (
        echo boom E: [smt]: smtecho.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.i (
        echo boom E: [smt]: smtecho.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtecho.d (
        echo boom E: [smt]: smtecho.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.l (
        echo boom E: [smt]: smtlog.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.i (
        echo boom E: [smt]: smtlog.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtlog.d (
        echo boom E: [smt]: smtlog.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.l (
        echo boom E: [smt]: smtxlog.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.i (
        echo boom E: [smt]: smtxlog.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtxlog.d (
        echo boom E: [smt]: smtxlog.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.l (
        echo boom E: [smt]: smtoper.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.i (
        echo boom E: [smt]: smtoper.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtoper.d (
        echo boom E: [smt]: smtoper.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.l (
        echo boom E: [smt]: smtpipe.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.i (
        echo boom E: [smt]: smtpipe.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpipe.d (
        echo boom E: [smt]: smtpipe.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.l (
        echo boom E: [smt]: smtpop.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.i (
        echo boom E: [smt]: smtpop.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtpop.d (
        echo boom E: [smt]: smtpop.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.l (
        echo boom E: [smt]: smtrdns.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.i (
        echo boom E: [smt]: smtrdns.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdns.d (
        echo boom E: [smt]: smtrdns.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtrdnsl.h (
        echo boom E: [smt]: smtrdnsl.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.l (
        echo boom E: [smt]: smtsimu.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.i (
        echo boom E: [smt]: smtsimu.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsimu.d (
        echo boom E: [smt]: smtsimu.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.l (
        echo boom E: [smt]: smtslot.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.i (
        echo boom E: [smt]: smtslot.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtslot.d (
        echo boom E: [smt]: smtslot.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.l (
        echo boom E: [smt]: smtsmtp.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.i (
        echo boom E: [smt]: smtsmtp.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsmtp.d (
        echo boom E: [smt]: smtsmtp.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.l (
        echo boom E: [smt]: smtsock.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.i (
        echo boom E: [smt]: smtsock.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsock.d (
        echo boom E: [smt]: smtsock.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.l (
        echo boom E: [smt]: smttran.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.i (
        echo boom E: [smt]: smttran.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttran.d (
        echo boom E: [smt]: smttran.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.l (
        echo boom E: [smt]: smttst1.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.i (
        echo boom E: [smt]: smttst1.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst1.d (
        echo boom E: [smt]: smttst1.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.l (
        echo boom E: [smt]: smttst2.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.i (
        echo boom E: [smt]: smttst2.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst2.d (
        echo boom E: [smt]: smttst2.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.l (
        echo boom E: [smt]: smttst3.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.i (
        echo boom E: [smt]: smttst3.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smttst3.d (
        echo boom E: [smt]: smttst3.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.c (
        echo boom E: [smt]: smtmsg.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtmsg.h (
        echo boom E: [smt]: smtmsg.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.c (
        echo boom E: [smt]: smtsslm.c is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smtsslm.h (
        echo boom E: [smt]: smtsslm.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.l (
        echo boom E: [smt]: sysmana.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.i (
        echo boom E: [smt]: sysmana.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysmana.d (
        echo boom E: [smt]: sysmana.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.l (
        echo boom E: [smt]: sysclia.l is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.i (
        echo boom E: [smt]: sysclia.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist sysclia.d (
        echo boom E: [smt]: sysclia.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.i (
        echo boom E: [smt]: tstpop.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstpop.d (
        echo boom E: [smt]: tstpop.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.i (
        echo boom E: [smt]: tstsmtp.i is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tstsmtp.d (
        echo boom E: [smt]: tstsmtp.d is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist smt3.h (
        echo boom E: [smt]: smt3.h is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [smt]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [smt]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [smt]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [smt]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [smt]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [smt]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [smt]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [smt]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist libsmt3.vcproj (
        echo boom E: [smt]: libsmt3.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:--------------------------   INSTALL DELIVERABLES   --------------------------

:a_install_deliverables
    echo boom I: [smt]: installing SMT into !_INSTALL_ROOT!...
    if not exist !_INSTALL_ROOT! mkdir !_INSTALL_ROOT!
    if "!BOOM_TRACE!"=="1" echo copy/y smtlib.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y smtlib.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtlib.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y smtsimu.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y smtsimu.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtsimu.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y smtmem.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y smtmem.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtmem.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if "!BOOM_TRACE!"=="1" echo copy/y smtschm.c !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y smtschm.c !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtschm.c !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y smttest.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y smttest.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smttest.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y smtexdr.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y smtexdr.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtexdr.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y smtmesg.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y smtmesg.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtmesg.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\lib\nul mkdir !_INSTALL_ROOT!\lib\
    if "!BOOM_TRACE!"=="1" echo copy/y libsmt3.lib !_INSTALL_ROOT!\lib\>nul
    verify>nul
    call copy/y libsmt3.lib !_INSTALL_ROOT!\lib\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y libsmt3.lib !_INSTALL_ROOT!\lib\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if not exist !_INSTALL_ROOT!\doc\SMT\nul mkdir !_INSTALL_ROOT!\doc\SMT\
    if "!BOOM_TRACE!"=="1" echo copy/y readme.txt !_INSTALL_ROOT!\doc\SMT\>nul
    verify>nul
    call copy/y readme.txt !_INSTALL_ROOT!\doc\SMT\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y readme.txt !_INSTALL_ROOT!\doc\SMT\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\include\nul mkdir !_INSTALL_ROOT!\include\
    if "!BOOM_TRACE!"=="1" echo copy/y smtmsg.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y smtmsg.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtmsg.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y smtsslm.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y smtsslm.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smtsslm.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y smt3.h !_INSTALL_ROOT!\include\>nul
    verify>nul
    call copy/y smt3.h !_INSTALL_ROOT!\include\>nul
    if errorlevel 1 (
        echo boom E: [smt]: 'copy/y smt3.h !_INSTALL_ROOT!\include\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if exist installer.bat (
    if "!BOOM_TRACE!"=="1" echo installer
    verify>nul
    call installer
    if errorlevel 1 (
        echo boom E: [smt]: 'installer' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   PRODUCE ALL GENERATED FILES   ----------------------

:a_produce_all_generated_files
    echo boom I: [smt]: Generating files...
    if "!BOOM_TRACE!"=="1" echo gsl3 -q -quiet:1 smtmsg.xml
    verify>nul
    call gsl3 -q -quiet:1 smtmsg.xml
    if errorlevel 1 (
        echo boom E: [smt]: 'gsl3 -q -quiet:1 smtmsg.xml' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl3 -q -quiet:1 smtsslm.xml
    verify>nul
    call gsl3 -q -quiet:1 smtsslm.xml
    if errorlevel 1 (
        echo boom E: [smt]: 'gsl3 -q -quiet:1 smtsslm.xml' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet tstpop.l
    verify>nul
    call lr -quiet tstpop.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet tstpop.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet tstsmtp.l
    verify>nul
    call lr -quiet tstsmtp.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet tstsmtp.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtecho.l
    verify>nul
    call lr -quiet smtecho.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtecho.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtlog.l
    verify>nul
    call lr -quiet smtlog.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtlog.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtxlog.l
    verify>nul
    call lr -quiet smtxlog.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtxlog.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtoper.l
    verify>nul
    call lr -quiet smtoper.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtoper.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtpipe.l
    verify>nul
    call lr -quiet smtpipe.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtpipe.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtpop.l
    verify>nul
    call lr -quiet smtpop.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtpop.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtrdns.l
    verify>nul
    call lr -quiet smtrdns.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtrdns.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtsimu.l
    verify>nul
    call lr -quiet smtsimu.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtsimu.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtslot.l
    verify>nul
    call lr -quiet smtslot.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtslot.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtsmtp.l
    verify>nul
    call lr -quiet smtsmtp.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtsmtp.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtsock.l
    verify>nul
    call lr -quiet smtsock.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtsock.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttran.l
    verify>nul
    call lr -quiet smttran.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttran.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttst1.l
    verify>nul
    call lr -quiet smttst1.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttst1.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttst2.l
    verify>nul
    call lr -quiet smttst2.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttst2.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttst3.l
    verify>nul
    call lr -quiet smttst3.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttst3.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet sysmana.l
    verify>nul
    call lr -quiet sysmana.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet sysmana.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet sysclia.l
    verify>nul
    call lr -quiet sysclia.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet sysclia.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if exist smt3.h del smt3.h
    if "!BOOM_TRACE!"=="1" echo type smthead.h>>smt3.h
    verify>nul
    call type smthead.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smthead.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtlib.h>>smt3.h
    verify>nul
    call type smtlib.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtlib.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtdefn.h>>smt3.h
    verify>nul
    call type smtdefn.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtdefn.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smttime.h>>smt3.h
    verify>nul
    call type smttime.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smttime.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtserv.h>>smt3.h
    verify>nul
    call type smtserv.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtserv.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtmsg.h>>smt3.h
    verify>nul
    call type smtmsg.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtmsg.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtsslm.h>>smt3.h
    verify>nul
    call type smtsslm.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtsslm.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtrdnsl.h>>smt3.h
    verify>nul
    call type smtrdnsl.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtrdnsl.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtxlog.h>>smt3.h
    verify>nul
    call type smtxlog.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtxlog.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    echo Source files successfully generated>stamp_generate
    goto :eof

:-------------------------   PRODUCE GENERATED FILES   ------------------------

:a_produce_generated_files
    echo boom I: [smt]: Generating files...
    if "!BOOM_TRACE!"=="1" echo gsl3 -q -quiet:1 smtmsg.xml
    verify>nul
    call gsl3 -q -quiet:1 smtmsg.xml
    if errorlevel 1 (
        echo boom E: [smt]: 'gsl3 -q -quiet:1 smtmsg.xml' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl3 -q -quiet:1 smtsslm.xml
    verify>nul
    call gsl3 -q -quiet:1 smtsslm.xml
    if errorlevel 1 (
        echo boom E: [smt]: 'gsl3 -q -quiet:1 smtsslm.xml' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet tstpop.l
    verify>nul
    call lr -quiet tstpop.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet tstpop.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet tstsmtp.l
    verify>nul
    call lr -quiet tstsmtp.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet tstsmtp.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtecho.l
    verify>nul
    call lr -quiet smtecho.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtecho.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtlog.l
    verify>nul
    call lr -quiet smtlog.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtlog.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtxlog.l
    verify>nul
    call lr -quiet smtxlog.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtxlog.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtoper.l
    verify>nul
    call lr -quiet smtoper.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtoper.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtpipe.l
    verify>nul
    call lr -quiet smtpipe.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtpipe.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtpop.l
    verify>nul
    call lr -quiet smtpop.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtpop.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtrdns.l
    verify>nul
    call lr -quiet smtrdns.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtrdns.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtsimu.l
    verify>nul
    call lr -quiet smtsimu.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtsimu.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtslot.l
    verify>nul
    call lr -quiet smtslot.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtslot.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtsmtp.l
    verify>nul
    call lr -quiet smtsmtp.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtsmtp.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smtsock.l
    verify>nul
    call lr -quiet smtsock.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smtsock.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttran.l
    verify>nul
    call lr -quiet smttran.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttran.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttst1.l
    verify>nul
    call lr -quiet smttst1.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttst1.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttst2.l
    verify>nul
    call lr -quiet smttst2.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttst2.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet smttst3.l
    verify>nul
    call lr -quiet smttst3.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet smttst3.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet sysmana.l
    verify>nul
    call lr -quiet sysmana.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet sysmana.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo lr -quiet sysclia.l
    verify>nul
    call lr -quiet sysclia.l
    if errorlevel 1 (
        echo boom E: [smt]: 'lr -quiet sysclia.l' failed - stop.
        set _exception=1
        goto :eof
    )
    if exist smt3.h del smt3.h
    if "!BOOM_TRACE!"=="1" echo type smthead.h>>smt3.h
    verify>nul
    call type smthead.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smthead.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtlib.h>>smt3.h
    verify>nul
    call type smtlib.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtlib.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtdefn.h>>smt3.h
    verify>nul
    call type smtdefn.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtdefn.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smttime.h>>smt3.h
    verify>nul
    call type smttime.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smttime.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtserv.h>>smt3.h
    verify>nul
    call type smtserv.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtserv.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtmsg.h>>smt3.h
    verify>nul
    call type smtmsg.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtmsg.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtsslm.h>>smt3.h
    verify>nul
    call type smtsslm.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtsslm.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtrdnsl.h>>smt3.h
    verify>nul
    call type smtrdnsl.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtrdnsl.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo type smtxlog.h>>smt3.h
    verify>nul
    call type smtxlog.h>>smt3.h
    if errorlevel 1 (
        echo boom E: [smt]: 'type smtxlog.h>>smt3.h' failed - stop.
        set _exception=1
        goto :eof
    )
    echo Source files successfully generated>stamp_generate
    goto :eof

:------------------------   REMOVE GENERATED BINARIES   -----------------------

:a_remove_generated_binaries
    if exist libsmt3.lib del libsmt3.lib
    if exist smtlib.obj del smtlib.obj
    if exist smtserv.obj del smtserv.obj
    if exist smttime.obj del smttime.obj
    if exist smtecho.obj del smtecho.obj
    if exist smtlog.obj del smtlog.obj
    if exist smtxlog.obj del smtxlog.obj
    if exist smtoper.obj del smtoper.obj
    if exist smtpipe.obj del smtpipe.obj
    if exist smtpop.obj del smtpop.obj
    if exist smtrdns.obj del smtrdns.obj
    if exist smtrdnsl.obj del smtrdnsl.obj
    if exist smtsimu.obj del smtsimu.obj
    if exist smtslot.obj del smtslot.obj
    if exist smtsmtp.obj del smtsmtp.obj
    if exist smtsock.obj del smtsock.obj
    if exist smttran.obj del smttran.obj
    if exist smttst1.obj del smttst1.obj
    if exist smttst2.obj del smttst2.obj
    if exist smttst3.obj del smttst3.obj
    if exist echocli.obj del echocli.obj
    if exist echocli.exe del echocli.exe
    if exist echod.obj del echod.obj
    if exist echod.exe del echod.exe
    if exist smtmsg.obj del smtmsg.obj
    if exist smtsslm.obj del smtsslm.obj
    if exist sysman.obj del sysman.obj
    if exist sysman.exe del sysman.exe
    if exist syscli.obj del syscli.obj
    if exist syscli.exe del syscli.exe
    if exist sysmana.obj del sysmana.obj
    if exist sysclia.obj del sysclia.obj
    if exist tstpop.obj del tstpop.obj
    if exist tstpop.exe del tstpop.exe
    if exist tstrdns.obj del tstrdns.obj
    if exist tstrdns.exe del tstrdns.exe
    if exist tstslot.obj del tstslot.obj
    if exist tstslot.exe del tstslot.exe
    if exist tstsmtp.obj del tstsmtp.obj
    if exist tstsmtp.exe del tstsmtp.exe
    if exist tstsock.obj del tstsock.obj
    if exist tstsock.exe del tstsock.exe
    if exist tsttime.obj del tsttime.obj
    if exist tsttime.exe del tsttime.exe
    if exist smtmsg.obj del smtmsg.obj
    if exist smtsslm.obj del smtsslm.obj
    if exist vc60.pdb del vc60.pdb
    goto :eof

:------------------------   REMOVE GENERATED SOURCES   ------------------------

:a_remove_generated_sources
    if exist smtecho.i del smtecho.i
    if exist smtecho.d del smtecho.d
    if exist smtlog.i del smtlog.i
    if exist smtlog.d del smtlog.d
    if exist smtxlog.i del smtxlog.i
    if exist smtxlog.d del smtxlog.d
    if exist smtoper.i del smtoper.i
    if exist smtoper.d del smtoper.d
    if exist smtpipe.i del smtpipe.i
    if exist smtpipe.d del smtpipe.d
    if exist smtpop.i del smtpop.i
    if exist smtpop.d del smtpop.d
    if exist smtrdns.i del smtrdns.i
    if exist smtrdns.d del smtrdns.d
    if exist smtsimu.i del smtsimu.i
    if exist smtsimu.d del smtsimu.d
    if exist smtslot.i del smtslot.i
    if exist smtslot.d del smtslot.d
    if exist smtsmtp.i del smtsmtp.i
    if exist smtsmtp.d del smtsmtp.d
    if exist smtsock.i del smtsock.i
    if exist smtsock.d del smtsock.d
    if exist smttran.i del smttran.i
    if exist smttran.d del smttran.d
    if exist smttst1.i del smttst1.i
    if exist smttst1.d del smttst1.d
    if exist smttst2.i del smttst2.i
    if exist smttst2.d del smttst2.d
    if exist smttst3.i del smttst3.i
    if exist smttst3.d del smttst3.d
    if exist smtmsg.c del smtmsg.c
    if exist smtmsg.h del smtmsg.h
    if exist smtsslm.c del smtsslm.c
    if exist smtsslm.h del smtsslm.h
    if exist sysmana.i del sysmana.i
    if exist sysmana.d del sysmana.d
    if exist sysclia.i del sysclia.i
    if exist sysclia.d del sysclia.d
    if exist tstpop.i del tstpop.i
    if exist tstpop.d del tstpop.d
    if exist tstsmtp.i del tstsmtp.i
    if exist tstsmtp.d del tstsmtp.d
    if exist smt3.h del smt3.h
    if exist stamp_generate del stamp_generate
    if exist configure del configure
    if exist Makefile.unix del Makefile.unix
    if exist configure.bat del configure.bat
    if exist Makefile.win32 del Makefile.win32
    if exist libsmt3.vcproj del libsmt3.vcproj
    if exist smt_*.zip del smt_*.zip
    goto :eof

:-------------------------   REPORT HELP INFORMATION   ------------------------

:a_report_help_information
    echo The commands you can currently use on this project are:
    echo.
    goto r_!state!
    goto :eof

:-------------------------   REPORT PROJECT VERSION   -------------------------

:a_report_project_version
    echo smt-3.0c2
    goto :eof

:--------------------------   RUN REGRESSION TESTS   --------------------------

:a_run_regression_tests
    :-  Run local selftest script if present
    if exist selftest.bat (
    if "!BOOM_TRACE!"=="1" echo selftest
    verify>nul
    call selftest
    if errorlevel 1 (
        echo boom E: [smt]: 'selftest' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   USE SOURCE CONTROL REVISION   ----------------------

:a_use_source_control_revision
    set SVN_REVISION=svn
    if exist .svn
ul (
        for /f "usebackq tokens=1,2 delims=: " %%v in (`svn info`) do if "%%v"=="Revision" set SVN_REVISION=%%w
    )
    set MY_VERSION=!MY_VERSION!-!SVN_REVISION!
    goto :eof

:s_initial
    if "!debug!"=="1" echo State: initial
    if "!event!"=="" goto s_1_empty
    if "!event!"=="ok" goto s_1_1
    goto s_win32
:s_1_1
    if "!debug!"=="1" echo Event: ok
    set event=
    if "!debug!"=="1" echo Action: check operating context
    set _exception=
    call :a_check_operating_context
    if "!_exception!"=="1" exit /b 1
    set state=initial_check
    goto s_!state!
:s_1_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial
:r_initial
    goto r_win32

:s_initial_check
    if "!debug!"=="1" echo State: initial check
    if "!event!"=="" goto s_2_empty
    if "!event!"=="repository" goto s_2_1
    if "!event!"=="source" goto s_2_2
    if "!event!"=="stripped" goto s_2_3
    goto s_win32
:s_2_1
    if "!debug!"=="1" echo Event: repository
    set event=
    set state=repository
    goto s_!state!
:s_2_2
    if "!debug!"=="1" echo Event: source
    set event=
    set state=source
    goto s_!state!
:s_2_3
    if "!debug!"=="1" echo Event: stripped
    set event=
    set state=stripped
    goto s_!state!
:s_2_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial_check
:r_initial_check
    goto r_win32

:s_repository
    if "!debug!"=="1" echo State: repository
    if "!event!"=="" goto s_3_empty
    if "!event!"=="build" goto s_3_1
    if "!event!"=="compile" goto s_3_2
    if "!event!"=="clean" goto s_3_3
    if "!event!"=="regen" goto s_3_4
    if "!event!"=="allgen" goto s_3_5
    if "!event!"=="distrib" goto s_3_6
    if "!event!"=="distsrc" goto s_3_7
    if "!event!"=="distrev" goto s_3_8
    goto s_default
:s_3_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_2
    if "!debug!"=="1" echo Event: compile
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_3
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated sources
    set _exception=
    call :a_remove_generated_sources
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_4
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_5
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_6
    if "!debug!"=="1" echo Event: distrib
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_7
    if "!debug!"=="1" echo Event: distsrc
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_8
    if "!debug!"=="1" echo Event: distrev
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: use source control revision
    set _exception=
    call :a_use_source_control_revision
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_repository
:r_repository
echo build:
    echo   From the raw project sources, produces all generated files, and
    echo     compiles all source files.
echo compile:
    echo   From the raw project sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the raw project sources, removes all generated
    echo     source and binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
echo distrib:
    echo   Creates a source distribution for the project.  Note that binary
    echo     distributions can only be created at the product level.
echo distsrc:
    echo   Equivalent to distrib, provided for compatibility.
echo distrev:
    echo   Creates a source distribution for the project.  Builds distribution
    echo     packages based on source control version number. Note that binary
    echo     distributions can only be created at the product level.
    goto r_default

:s_source
    if "!debug!"=="1" echo State: source
    if "!event!"=="" goto s_4_empty
    if "!event!"=="build" goto s_4_1
    if "!event!"=="clean" goto s_4_2
    if "!event!"=="regen" goto s_4_3
    if "!event!"=="allgen" goto s_4_4
    goto s_default
:s_4_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_3
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_4
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_source
:r_source
echo build:
    echo   From the packaged sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
    goto r_default

:s_stripped
    if "!debug!"=="1" echo State: stripped
    if "!event!"=="" goto s_5_empty
    if "!event!"=="build" goto s_5_1
    if "!event!"=="clean" goto s_5_2
    goto s_default
:s_5_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_stripped
:r_stripped
echo build:
    echo   From the stripped-down packaged sources, compiles all source files
    echo     without any code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
    goto r_default

:s_default
    if "!debug!"=="1" echo State: default
    if "!event!"=="" goto s_6_empty
    if "!event!"=="install" goto s_6_1
    if "!event!"=="test" goto s_6_2
    if "!event!"=="help" goto s_6_3
    if "!event!"=="version" goto s_6_4
    if "!event!"=="empty" goto s_6_5
    goto s_win32
:s_6_1
    if "!debug!"=="1" echo Event: install
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: install deliverables
    set _exception=
    call :a_install_deliverables
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_2
    if "!debug!"=="1" echo Event: test
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: run regression tests
    set _exception=
    call :a_run_regression_tests
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_3
    if "!debug!"=="1" echo Event: help
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_4
    if "!debug!"=="1" echo Event: version
    set event=
    if "!debug!"=="1" echo Action: report project version
    set _exception=
    call :a_report_project_version
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_5
    if "!debug!"=="1" echo Event: empty
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_default
:r_default
echo install:
    echo   Installs deliverables into the final or temporary install tree.
    echo     This action is only valid after a successful build.
echo test:
    echo   Runs regression tests for the project.
echo help:
    echo   Shows a list of the commands allowed on the project.
echo version:
    echo   Show project version.
    goto r_win32


exit /b 0
