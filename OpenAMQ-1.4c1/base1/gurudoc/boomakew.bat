@echo off
:-
:-  Boom builder for Gurudoc 1.3b1
:-  Generated by iMatix Boom from standard.pwl
:-  
:-  Copyright (c) 1996-2009 iMatix Corporation
:-  All rights reserved.
:-  
:-  This file is licensed under the BSD license as follows:
:-  
:-  Redistribution and use in source and binary forms, with or without
:-  modification, are permitted provided that the following conditions
:-  are met:
:-  
:-  * Redistributions of source code must retain the above copyright
:-    notice, this list of conditions and the following disclaimer.
:-  * Redistributions in binary form must reproduce the above copyright
:-    notice, this list of conditions and the following disclaimer in
:-    the documentation and/or other materials provided with the
:-    distribution.
:-  * Neither the name of iMatix Corporation nor the names of its
:-    contributors may be used to endorse or promote products derived
:-    from this software without specific prior written permission.
:-  
:-  THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
:-  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
:-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
:-  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
:-  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
:-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
:-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
:-  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
:-  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
:-  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
:-  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
:-
:-  Start CMD.EXE version detection
verify other 2>nul
setlocal enableextensions
if errorlevel 0 goto __cmd_ok
echo %0: This command requires command extensions version 2 in CMD.EXE.  
echo %0: Please use a supported system (Windows 2000 or newer).
exit
:__cmd_ok
setlocal enabledelayedexpansion
:-  End CMD.EXE version detection
goto :init
:-
:-  Subroutine: boom_model_init
:-  Initialises BOOM_MODEL to default if not set
:-  Expands BOOM_MODEL components into individual environment variables
:-
:boom_model_init
if "!BOOM_MODEL!"=="" (
    set BOOM_MODEL=release,st
)
set BOOM_MODEL__PLACEHOLDER=1
for /f "usebackq delims==" %%v in (`set BOOM_MODEL_`) do set %%v=
set BOOM_MODEL__PLACEHOLDER=
for %%m in (!BOOM_MODEL!) do set BOOM_MODEL_%%m=1
:-  If the user set BOOM_MODEL but did not include release/debug or st/mt
:-  set these to defaults.
if not "!BOOM_MODEL_RELEASE!"=="1" (
    if not "!BOOM_MODEL_DEBUG!"=="1" (
        set BOOM_MODEL_RELEASE=1
        set BOOM_MODEL=!BOOM_MODEL!,release
    )
)
if not "!BOOM_MODEL_ST!"=="1" (
    if not "!BOOM_MODEL_MT!"=="1" (
        set BOOM_MODEL_ST=1
        set BOOM_MODEL=!BOOM_MODEL!,st
    )
)
goto :eof
:init
setlocal
:-
:-  Set environment variables to point to install location
:-  Start by using final IBASE, then handle -install path
set self=%0
set MY_VERSION=1.3b1
set OLDPATH=!PATH!
set OLDPERLLIB=!PERLLIB!
if .!IBASE!==. (
    echo boom E: [gurudoc]: The IBASE variable is not set.         Please set it to the location where Gurudoc should be installed.
    exit /b 1
)
if .%1==.-v (
    set BOOM_TRACE=1
    shift
)
call :boom_model_init
if .%1==.-install goto tempinst
:-  Normal use, use IBASE
    set PATH=!IBASE!\bin;!PATH!
    set PERLLIB=!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!IBASE!\include
    set _INSTALL_ROOT=!IBASE!
    goto process

:tempinst
:-  Building product, we use -install directory first, then IBASE
    if not exist %2 (
       echo "Invalid command syntax - please contact imatix-tech"
       exit /b 1
    )
    pushd %2
    set _LOCAL_BASE=!cd!
    popd
    set PATH=!_LOCAL_BASE!\bin;!IBASE!\bin;!PATH!
    set PERLLIB=!_LOCAL_BASE!\bin;!IBASE!\bin;!PERLLIB!
    set INCDIR_ALT=!_LOCAL_BASE!\include;!IBASE!\include
    set _INSTALL_ROOT=!_LOCAL_BASE!
    shift
    shift
    goto process

:batch
    shift

:process
    set state=initial
    set event=ok
    set debug=0
    goto s_!state!

:---------------------------   BUILD BINARY FILES   ---------------------------

:a_build_binary_files
    goto :eof

:--------------------------   BUILD SOURCE PACKAGES   -------------------------

:a_build_source_packages
   if exist _package.lst del _package.lst
    if exist gurudoc\guruver.gsl echo gurudoc\guruver.gsl>>_package.lst
    if exist gurudoc\guruver.pl echo gurudoc\guruver.pl>>_package.lst
    if exist gurudoc\gdl.txt echo gurudoc\gdl.txt>>_package.lst
    if exist gurudoc\gdl.xnf echo gurudoc\gdl.xnf>>_package.lst
    if exist gurudoc\gdlcode.gsl echo gurudoc\gdlcode.gsl>>_package.lst
    if exist gurudoc\gdlparse.gsl echo gurudoc\gdlparse.gsl>>_package.lst
    if exist gurudoc\gurudoc.gsl echo gurudoc\gurudoc.gsl>>_package.lst
    if exist gurudoc\mkgdl echo gurudoc\mkgdl>>_package.lst
    if exist gurudoc\mkgdl.bat echo gurudoc\mkgdl.bat>>_package.lst
    if exist gurudoc\gurudoc echo gurudoc\gurudoc>>_package.lst
    if exist gurudoc\gurudoc.bat echo gurudoc\gurudoc.bat>>_package.lst
    if exist gurudoc\mod_gdl.gsl echo gurudoc\mod_gdl.gsl>>_package.lst
    if exist gurudoc\gd2xhtml echo gurudoc\gd2xhtml>>_package.lst
    if exist gurudoc\gd2xhtml.bat echo gurudoc\gd2xhtml.bat>>_package.lst
    if exist gurudoc\test_html_frame.gsl echo gurudoc\test_html_frame.gsl>>_package.lst
    if exist gurudoc\html_frame.gsl echo gurudoc\html_frame.gsl>>_package.lst
    if exist gurudoc\html_simple.gsl echo gurudoc\html_simple.gsl>>_package.lst
    if exist gurudoc\html_multi.gsl echo gurudoc\html_multi.gsl>>_package.lst
    if exist gurudoc\html_library.gsl echo gurudoc\html_library.gsl>>_package.lst
    if exist gurudoc\txt_simple.gsl echo gurudoc\txt_simple.gsl>>_package.lst
    if exist gurudoc\rtf_simple.gsl echo gurudoc\rtf_simple.gsl>>_package.lst
    if exist gurudoc\latex_simple.gsl echo gurudoc\latex_simple.gsl>>_package.lst
    if exist gurudoc\mod_rtf.gsl echo gurudoc\mod_rtf.gsl>>_package.lst
    if exist gurudoc\texi_simple.gsl echo gurudoc\texi_simple.gsl>>_package.lst
    if exist gurudoc\groff_simple.gsl echo gurudoc\groff_simple.gsl>>_package.lst
    if exist gurudoc\ooo_document.gsl echo gurudoc\ooo_document.gsl>>_package.lst
    if exist gurudoc\ooo_whitepaper.gsl echo gurudoc\ooo_whitepaper.gsl>>_package.lst
    if exist gurudoc\tpl_frame.htm echo gurudoc\tpl_frame.htm>>_package.lst
    if exist gurudoc\tpl_frame_body.htm echo gurudoc\tpl_frame_body.htm>>_package.lst
    if exist gurudoc\tpl_frame_bot.htm echo gurudoc\tpl_frame_bot.htm>>_package.lst
    if exist gurudoc\tpl_frame_top.htm echo gurudoc\tpl_frame_top.htm>>_package.lst
    if exist gurudoc\tpl_frame_toc.htm echo gurudoc\tpl_frame_toc.htm>>_package.lst
    if exist gurudoc\tpl_simple.htm echo gurudoc\tpl_simple.htm>>_package.lst
    if exist gurudoc\tpl_document.sxw echo gurudoc\tpl_document.sxw>>_package.lst
    if exist gurudoc\tpl_whitepaper.sxw echo gurudoc\tpl_whitepaper.sxw>>_package.lst
    if exist gurudoc\tpl_latex.tex echo gurudoc\tpl_latex.tex>>_package.lst
    if exist gurudoc\html_frameset.gsl echo gurudoc\html_frameset.gsl>>_package.lst
    if exist gurudoc\tpl_frameset.htm echo gurudoc\tpl_frameset.htm>>_package.lst
    if exist gurudoc\tpl_frameset_body.htm echo gurudoc\tpl_frameset_body.htm>>_package.lst
    if exist gurudoc\tpl_frameset_bot.htm echo gurudoc\tpl_frameset_bot.htm>>_package.lst
    if exist gurudoc\tpl_frameset_top.htm echo gurudoc\tpl_frameset_top.htm>>_package.lst
    if exist gurudoc\tpl_frameset_toc.htm echo gurudoc\tpl_frameset_toc.htm>>_package.lst
    if exist gurudoc\wikidot.gsl echo gurudoc\wikidot.gsl>>_package.lst
    if exist gurudoc\gddoc.txt echo gurudoc\gddoc.txt>>_package.lst
    if exist gurudoc\gddoc.gdl echo gurudoc\gddoc.gdl>>_package.lst
    if exist gurudoc\gddoc*.html echo gurudoc\gddoc*.html>>_package.lst
    if exist gurudoc\mainlogo.jpg echo gurudoc\mainlogo.jpg>>_package.lst
    if exist gurudoc\gdstyle.css echo gurudoc\gdstyle.css>>_package.lst
    if exist gurudoc\prelude.pdl echo gurudoc\prelude.pdl>>_package.lst
    if exist gurudoc\license.gpl echo gurudoc\license.gpl>>_package.lst
    if exist gurudoc\project.pdl echo gurudoc\project.pdl>>_package.lst
    if exist gurudoc\readme.txt echo gurudoc\readme.txt>>_package.lst
    if exist gurudoc\stamp_generate echo gurudoc\stamp_generate>>_package.lst
    if exist gurudoc\boomakew.bat echo gurudoc\boomakew.bat>>_package.lst
    if exist gurudoc\configure echo gurudoc\configure>>_package.lst
    if exist gurudoc\Makefile.unix echo gurudoc\Makefile.unix>>_package.lst
    if exist gurudoc\boomake echo gurudoc\boomake>>_package.lst
    if exist gurudoc\configure.bat echo gurudoc\configure.bat>>_package.lst
    if exist gurudoc\Makefile.win32 echo gurudoc\Makefile.win32>>_package.lst
    if exist gurudoc\boomake.bat echo gurudoc\boomake.bat>>_package.lst
    if exist gurudoc\liblocal.vcproj echo gurudoc\liblocal.vcproj>>_package.lst
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    echo boom I: [gurudoc]: Building gurudoc-!MY_VERSION!-src.zip...
    zip  -rq _package -@<_package.lst
    unzip -q _package -d gurudoc-!MY_VERSION!
    if exist  gurudoc-!MY_VERSION!-src.zip del gurudoc-!MY_VERSION!-src.zip
    zip -rmq gurudoc-!MY_VERSION!-src.zip gurudoc-!MY_VERSION!
    del _package.zip
    del _package.lst
    del stamp_source
    goto :eof

:----------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

:a_check_all_source_files_exist
    if not exist guruver.gsl (
        echo boom E: [gurudoc]: guruver.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist guruver.pl (
        echo boom E: [gurudoc]: guruver.pl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdl.txt (
        echo boom E: [gurudoc]: gdl.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdl.xnf (
        echo boom E: [gurudoc]: gdl.xnf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdlcode.gsl (
        echo boom E: [gurudoc]: gdlcode.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdlparse.gsl (
        echo boom E: [gurudoc]: gdlparse.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.gsl (
        echo boom E: [gurudoc]: gurudoc.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl (
        echo boom E: [gurudoc]: mkgdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl.bat (
        echo boom E: [gurudoc]: mkgdl.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc (
        echo boom E: [gurudoc]: gurudoc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.bat (
        echo boom E: [gurudoc]: gurudoc.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_gdl.gsl (
        echo boom E: [gurudoc]: mod_gdl.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml (
        echo boom E: [gurudoc]: gd2xhtml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml.bat (
        echo boom E: [gurudoc]: gd2xhtml.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist test_html_frame.gsl (
        echo boom E: [gurudoc]: test_html_frame.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frame.gsl (
        echo boom E: [gurudoc]: html_frame.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_simple.gsl (
        echo boom E: [gurudoc]: html_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_multi.gsl (
        echo boom E: [gurudoc]: html_multi.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_library.gsl (
        echo boom E: [gurudoc]: html_library.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist txt_simple.gsl (
        echo boom E: [gurudoc]: txt_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist rtf_simple.gsl (
        echo boom E: [gurudoc]: rtf_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist latex_simple.gsl (
        echo boom E: [gurudoc]: latex_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_rtf.gsl (
        echo boom E: [gurudoc]: mod_rtf.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist texi_simple.gsl (
        echo boom E: [gurudoc]: texi_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist groff_simple.gsl (
        echo boom E: [gurudoc]: groff_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_document.gsl (
        echo boom E: [gurudoc]: ooo_document.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_whitepaper.gsl (
        echo boom E: [gurudoc]: ooo_whitepaper.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame.htm (
        echo boom E: [gurudoc]: tpl_frame.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_body.htm (
        echo boom E: [gurudoc]: tpl_frame_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_bot.htm (
        echo boom E: [gurudoc]: tpl_frame_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_top.htm (
        echo boom E: [gurudoc]: tpl_frame_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_toc.htm (
        echo boom E: [gurudoc]: tpl_frame_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_simple.htm (
        echo boom E: [gurudoc]: tpl_simple.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_document.sxw (
        echo boom E: [gurudoc]: tpl_document.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_whitepaper.sxw (
        echo boom E: [gurudoc]: tpl_whitepaper.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_latex.tex (
        echo boom E: [gurudoc]: tpl_latex.tex is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frameset.gsl (
        echo boom E: [gurudoc]: html_frameset.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset.htm (
        echo boom E: [gurudoc]: tpl_frameset.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_body.htm (
        echo boom E: [gurudoc]: tpl_frameset_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_bot.htm (
        echo boom E: [gurudoc]: tpl_frameset_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_top.htm (
        echo boom E: [gurudoc]: tpl_frameset_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_toc.htm (
        echo boom E: [gurudoc]: tpl_frameset_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist wikidot.gsl (
        echo boom E: [gurudoc]: wikidot.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc.txt (
        echo boom E: [gurudoc]: gddoc.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc.gdl (
        echo boom E: [gurudoc]: gddoc.gdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc*.html (
        echo boom E: [gurudoc]: gddoc*.html is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mainlogo.jpg (
        echo boom E: [gurudoc]: mainlogo.jpg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdstyle.css (
        echo boom E: [gurudoc]: gdstyle.css is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [gurudoc]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [gurudoc]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [gurudoc]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [gurudoc]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [gurudoc]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [gurudoc]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [gurudoc]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [gurudoc]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [gurudoc]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [gurudoc]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist liblocal.vcproj (
        echo boom E: [gurudoc]: liblocal.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:------------------------   CHECK BINARY FILES EXIST   ------------------------

:a_check_binary_files_exist
    if not exist guruver.gsl (
        echo boom E: [gurudoc]: guruver.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist guruver.pl (
        echo boom E: [gurudoc]: guruver.pl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdlcode.gsl (
        echo boom E: [gurudoc]: gdlcode.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdlparse.gsl (
        echo boom E: [gurudoc]: gdlparse.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.gsl (
        echo boom E: [gurudoc]: gurudoc.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl (
        echo boom E: [gurudoc]: mkgdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl.bat (
        echo boom E: [gurudoc]: mkgdl.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc (
        echo boom E: [gurudoc]: gurudoc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.bat (
        echo boom E: [gurudoc]: gurudoc.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_gdl.gsl (
        echo boom E: [gurudoc]: mod_gdl.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml (
        echo boom E: [gurudoc]: gd2xhtml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml.bat (
        echo boom E: [gurudoc]: gd2xhtml.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frame.gsl (
        echo boom E: [gurudoc]: html_frame.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_simple.gsl (
        echo boom E: [gurudoc]: html_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_multi.gsl (
        echo boom E: [gurudoc]: html_multi.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_library.gsl (
        echo boom E: [gurudoc]: html_library.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist txt_simple.gsl (
        echo boom E: [gurudoc]: txt_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist rtf_simple.gsl (
        echo boom E: [gurudoc]: rtf_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist latex_simple.gsl (
        echo boom E: [gurudoc]: latex_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_rtf.gsl (
        echo boom E: [gurudoc]: mod_rtf.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist texi_simple.gsl (
        echo boom E: [gurudoc]: texi_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist groff_simple.gsl (
        echo boom E: [gurudoc]: groff_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_document.gsl (
        echo boom E: [gurudoc]: ooo_document.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_whitepaper.gsl (
        echo boom E: [gurudoc]: ooo_whitepaper.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame.htm (
        echo boom E: [gurudoc]: tpl_frame.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_body.htm (
        echo boom E: [gurudoc]: tpl_frame_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_bot.htm (
        echo boom E: [gurudoc]: tpl_frame_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_top.htm (
        echo boom E: [gurudoc]: tpl_frame_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_toc.htm (
        echo boom E: [gurudoc]: tpl_frame_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_simple.htm (
        echo boom E: [gurudoc]: tpl_simple.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_document.sxw (
        echo boom E: [gurudoc]: tpl_document.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_whitepaper.sxw (
        echo boom E: [gurudoc]: tpl_whitepaper.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_latex.tex (
        echo boom E: [gurudoc]: tpl_latex.tex is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frameset.gsl (
        echo boom E: [gurudoc]: html_frameset.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset.htm (
        echo boom E: [gurudoc]: tpl_frameset.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_body.htm (
        echo boom E: [gurudoc]: tpl_frameset_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_bot.htm (
        echo boom E: [gurudoc]: tpl_frameset_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_top.htm (
        echo boom E: [gurudoc]: tpl_frameset_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_toc.htm (
        echo boom E: [gurudoc]: tpl_frameset_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist wikidot.gsl (
        echo boom E: [gurudoc]: wikidot.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc*.html (
        echo boom E: [gurudoc]: gddoc*.html is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mainlogo.jpg (
        echo boom E: [gurudoc]: mainlogo.jpg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdstyle.css (
        echo boom E: [gurudoc]: gdstyle.css is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [gurudoc]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:-------------------------   CHECK OPERATING CONTEXT   ------------------------

:a_check_operating_context
    set event=repository
    if exist stamp_source   set event=source
    if exist stamp_stripped set event=stripped
    goto :eof

:------------------------   CHECK PROJECT FILES EXIST   -----------------------

:a_check_project_files_exist
    if not exist guruver.gsl (
        echo boom E: [gurudoc]: guruver.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist guruver.pl (
        echo boom E: [gurudoc]: guruver.pl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdl.xnf (
        echo boom E: [gurudoc]: gdl.xnf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.gsl (
        echo boom E: [gurudoc]: gurudoc.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl (
        echo boom E: [gurudoc]: mkgdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl.bat (
        echo boom E: [gurudoc]: mkgdl.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc (
        echo boom E: [gurudoc]: gurudoc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.bat (
        echo boom E: [gurudoc]: gurudoc.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_gdl.gsl (
        echo boom E: [gurudoc]: mod_gdl.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml (
        echo boom E: [gurudoc]: gd2xhtml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml.bat (
        echo boom E: [gurudoc]: gd2xhtml.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist test_html_frame.gsl (
        echo boom E: [gurudoc]: test_html_frame.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frame.gsl (
        echo boom E: [gurudoc]: html_frame.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_simple.gsl (
        echo boom E: [gurudoc]: html_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_multi.gsl (
        echo boom E: [gurudoc]: html_multi.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_library.gsl (
        echo boom E: [gurudoc]: html_library.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist txt_simple.gsl (
        echo boom E: [gurudoc]: txt_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist rtf_simple.gsl (
        echo boom E: [gurudoc]: rtf_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist latex_simple.gsl (
        echo boom E: [gurudoc]: latex_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_rtf.gsl (
        echo boom E: [gurudoc]: mod_rtf.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist texi_simple.gsl (
        echo boom E: [gurudoc]: texi_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist groff_simple.gsl (
        echo boom E: [gurudoc]: groff_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_document.gsl (
        echo boom E: [gurudoc]: ooo_document.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_whitepaper.gsl (
        echo boom E: [gurudoc]: ooo_whitepaper.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame.htm (
        echo boom E: [gurudoc]: tpl_frame.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_body.htm (
        echo boom E: [gurudoc]: tpl_frame_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_bot.htm (
        echo boom E: [gurudoc]: tpl_frame_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_top.htm (
        echo boom E: [gurudoc]: tpl_frame_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_toc.htm (
        echo boom E: [gurudoc]: tpl_frame_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_simple.htm (
        echo boom E: [gurudoc]: tpl_simple.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_document.sxw (
        echo boom E: [gurudoc]: tpl_document.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_whitepaper.sxw (
        echo boom E: [gurudoc]: tpl_whitepaper.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_latex.tex (
        echo boom E: [gurudoc]: tpl_latex.tex is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frameset.gsl (
        echo boom E: [gurudoc]: html_frameset.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset.htm (
        echo boom E: [gurudoc]: tpl_frameset.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_body.htm (
        echo boom E: [gurudoc]: tpl_frameset_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_bot.htm (
        echo boom E: [gurudoc]: tpl_frameset_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_top.htm (
        echo boom E: [gurudoc]: tpl_frameset_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_toc.htm (
        echo boom E: [gurudoc]: tpl_frameset_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist wikidot.gsl (
        echo boom E: [gurudoc]: wikidot.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc.txt (
        echo boom E: [gurudoc]: gddoc.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mainlogo.jpg (
        echo boom E: [gurudoc]: mainlogo.jpg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdstyle.css (
        echo boom E: [gurudoc]: gdstyle.css is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [gurudoc]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [gurudoc]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [gurudoc]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [gurudoc]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [gurudoc]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:------------------------   CHECK SOURCE FILES EXIST   ------------------------

:a_check_source_files_exist
    if not exist guruver.gsl (
        echo boom E: [gurudoc]: guruver.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist guruver.pl (
        echo boom E: [gurudoc]: guruver.pl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdl.txt (
        echo boom E: [gurudoc]: gdl.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdl.xnf (
        echo boom E: [gurudoc]: gdl.xnf is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdlcode.gsl (
        echo boom E: [gurudoc]: gdlcode.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdlparse.gsl (
        echo boom E: [gurudoc]: gdlparse.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.gsl (
        echo boom E: [gurudoc]: gurudoc.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl (
        echo boom E: [gurudoc]: mkgdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mkgdl.bat (
        echo boom E: [gurudoc]: mkgdl.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc (
        echo boom E: [gurudoc]: gurudoc is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gurudoc.bat (
        echo boom E: [gurudoc]: gurudoc.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_gdl.gsl (
        echo boom E: [gurudoc]: mod_gdl.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml (
        echo boom E: [gurudoc]: gd2xhtml is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gd2xhtml.bat (
        echo boom E: [gurudoc]: gd2xhtml.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist test_html_frame.gsl (
        echo boom E: [gurudoc]: test_html_frame.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frame.gsl (
        echo boom E: [gurudoc]: html_frame.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_simple.gsl (
        echo boom E: [gurudoc]: html_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_multi.gsl (
        echo boom E: [gurudoc]: html_multi.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_library.gsl (
        echo boom E: [gurudoc]: html_library.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist txt_simple.gsl (
        echo boom E: [gurudoc]: txt_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist rtf_simple.gsl (
        echo boom E: [gurudoc]: rtf_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist latex_simple.gsl (
        echo boom E: [gurudoc]: latex_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mod_rtf.gsl (
        echo boom E: [gurudoc]: mod_rtf.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist texi_simple.gsl (
        echo boom E: [gurudoc]: texi_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist groff_simple.gsl (
        echo boom E: [gurudoc]: groff_simple.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_document.gsl (
        echo boom E: [gurudoc]: ooo_document.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist ooo_whitepaper.gsl (
        echo boom E: [gurudoc]: ooo_whitepaper.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame.htm (
        echo boom E: [gurudoc]: tpl_frame.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_body.htm (
        echo boom E: [gurudoc]: tpl_frame_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_bot.htm (
        echo boom E: [gurudoc]: tpl_frame_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_top.htm (
        echo boom E: [gurudoc]: tpl_frame_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frame_toc.htm (
        echo boom E: [gurudoc]: tpl_frame_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_simple.htm (
        echo boom E: [gurudoc]: tpl_simple.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_document.sxw (
        echo boom E: [gurudoc]: tpl_document.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_whitepaper.sxw (
        echo boom E: [gurudoc]: tpl_whitepaper.sxw is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_latex.tex (
        echo boom E: [gurudoc]: tpl_latex.tex is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist html_frameset.gsl (
        echo boom E: [gurudoc]: html_frameset.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset.htm (
        echo boom E: [gurudoc]: tpl_frameset.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_body.htm (
        echo boom E: [gurudoc]: tpl_frameset_body.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_bot.htm (
        echo boom E: [gurudoc]: tpl_frameset_bot.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_top.htm (
        echo boom E: [gurudoc]: tpl_frameset_top.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist tpl_frameset_toc.htm (
        echo boom E: [gurudoc]: tpl_frameset_toc.htm is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist wikidot.gsl (
        echo boom E: [gurudoc]: wikidot.gsl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc.txt (
        echo boom E: [gurudoc]: gddoc.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc.gdl (
        echo boom E: [gurudoc]: gddoc.gdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gddoc*.html (
        echo boom E: [gurudoc]: gddoc*.html is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist mainlogo.jpg (
        echo boom E: [gurudoc]: mainlogo.jpg is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist gdstyle.css (
        echo boom E: [gurudoc]: gdstyle.css is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist project.pdl (
        echo boom E: [gurudoc]: project.pdl is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist readme.txt (
        echo boom E: [gurudoc]: readme.txt is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist stamp_generate (
        echo boom E: [gurudoc]: stamp_generate is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomakew.bat (
        echo boom E: [gurudoc]: boomakew.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure (
        echo boom E: [gurudoc]: configure is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.unix (
        echo boom E: [gurudoc]: Makefile.unix is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake (
        echo boom E: [gurudoc]: boomake is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist configure.bat (
        echo boom E: [gurudoc]: configure.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist Makefile.win32 (
        echo boom E: [gurudoc]: Makefile.win32 is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist boomake.bat (
        echo boom E: [gurudoc]: boomake.bat is missing, cannot continue
        set _exception=1
        goto :eof
    )
    if not exist liblocal.vcproj (
        echo boom E: [gurudoc]: liblocal.vcproj is missing, cannot continue
        set _exception=1
        goto :eof
    )
    goto :eof

:--------------------------   INSTALL DELIVERABLES   --------------------------

:a_install_deliverables
    echo boom I: [gurudoc]: installing Gurudoc into !_INSTALL_ROOT!...
    if not exist !_INSTALL_ROOT! mkdir !_INSTALL_ROOT!
    if "!BOOM_TRACE!"=="1" echo copy/y guruver.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y guruver.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y guruver.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y guruver.pl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y guruver.pl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y guruver.pl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gdlcode.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y gdlcode.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gdlcode.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gdlparse.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y gdlparse.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gdlparse.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gurudoc.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y gurudoc.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gurudoc.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y mkgdl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y mkgdl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y mkgdl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y mkgdl.bat !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y mkgdl.bat !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y mkgdl.bat !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gurudoc !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y gurudoc !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gurudoc !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gurudoc.bat !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y gurudoc.bat !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gurudoc.bat !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y mod_gdl.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y mod_gdl.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y mod_gdl.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gd2xhtml !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y gd2xhtml !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gd2xhtml !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gd2xhtml.bat !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y gd2xhtml.bat !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gd2xhtml.bat !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y html_frame.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y html_frame.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y html_frame.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y html_simple.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y html_simple.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y html_simple.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y html_multi.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y html_multi.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y html_multi.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y html_library.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y html_library.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y html_library.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y txt_simple.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y txt_simple.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y txt_simple.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y rtf_simple.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y rtf_simple.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y rtf_simple.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y latex_simple.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y latex_simple.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y latex_simple.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y mod_rtf.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y mod_rtf.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y mod_rtf.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y texi_simple.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y texi_simple.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y texi_simple.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y groff_simple.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y groff_simple.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y groff_simple.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y ooo_document.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y ooo_document.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y ooo_document.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y ooo_whitepaper.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y ooo_whitepaper.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y ooo_whitepaper.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frame.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frame.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frame.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frame_body.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frame_body.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frame_body.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frame_bot.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frame_bot.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frame_bot.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frame_top.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frame_top.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frame_top.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frame_toc.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frame_toc.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frame_toc.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_simple.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_simple.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_simple.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_document.sxw !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_document.sxw !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_document.sxw !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_whitepaper.sxw !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_whitepaper.sxw !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_whitepaper.sxw !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_latex.tex !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_latex.tex !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_latex.tex !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y html_frameset.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y html_frameset.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y html_frameset.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frameset.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frameset.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frameset.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frameset_body.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frameset_body.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frameset_body.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frameset_bot.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frameset_bot.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frameset_bot.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frameset_top.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frameset_top.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frameset_top.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y tpl_frameset_toc.htm !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y tpl_frameset_toc.htm !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y tpl_frameset_toc.htm !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y wikidot.gsl !_INSTALL_ROOT!\bin\>nul
    verify>nul
    call copy/y wikidot.gsl !_INSTALL_ROOT!\bin\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y wikidot.gsl !_INSTALL_ROOT!\bin\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\doc\Gurudoc\nul mkdir !_INSTALL_ROOT!\doc\Gurudoc\
    if "!BOOM_TRACE!"=="1" echo copy/y gddoc*.html !_INSTALL_ROOT!\doc\Gurudoc\>nul
    verify>nul
    call copy/y gddoc*.html !_INSTALL_ROOT!\doc\Gurudoc\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gddoc*.html !_INSTALL_ROOT!\doc\Gurudoc\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y mainlogo.jpg !_INSTALL_ROOT!\doc\Gurudoc\>nul
    verify>nul
    call copy/y mainlogo.jpg !_INSTALL_ROOT!\doc\Gurudoc\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y mainlogo.jpg !_INSTALL_ROOT!\doc\Gurudoc\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo copy/y gdstyle.css !_INSTALL_ROOT!\doc\Gurudoc\>nul
    verify>nul
    call copy/y gdstyle.css !_INSTALL_ROOT!\doc\Gurudoc\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y gdstyle.css !_INSTALL_ROOT!\doc\Gurudoc\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if not exist !_INSTALL_ROOT!\bin\nul mkdir !_INSTALL_ROOT!\bin\
    if not exist !_INSTALL_ROOT!\doc\Gurudoc\nul mkdir !_INSTALL_ROOT!\doc\Gurudoc\
    if "!BOOM_TRACE!"=="1" echo copy/y readme.txt !_INSTALL_ROOT!\doc\Gurudoc\>nul
    verify>nul
    call copy/y readme.txt !_INSTALL_ROOT!\doc\Gurudoc\>nul
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'copy/y readme.txt !_INSTALL_ROOT!\doc\Gurudoc\>nul' failed - stop.
        set _exception=1
        goto :eof
    )
    if exist installer.bat (
    if "!BOOM_TRACE!"=="1" echo installer
    verify>nul
    call installer
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'installer' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   PRODUCE ALL GENERATED FILES   ----------------------

:a_produce_all_generated_files
    echo boom I: [gurudoc]: Generating files...
    if "!BOOM_TRACE!"=="1" echo gsl3 -q -xnf:gdl -doc:text -parse:1 -code:1 buildxnf
    verify>nul
    call gsl3 -q -xnf:gdl -doc:text -parse:1 -code:1 buildxnf
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'gsl3 -q -xnf:gdl -doc:text -parse:1 -code:1 buildxnf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo perl mkgdl gddoc.txt
    verify>nul
    call perl mkgdl gddoc.txt
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'perl mkgdl gddoc.txt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl3 -quiet -tpl:html_frameset -gdl:gddoc gurudoc
    verify>nul
    call gsl3 -quiet -tpl:html_frameset -gdl:gddoc gurudoc
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'gsl3 -quiet -tpl:html_frameset -gdl:gddoc gurudoc' failed - stop.
        set _exception=1
        goto :eof
    )
    echo Source files successfully generated>stamp_generate
    goto :eof

:-------------------------   PRODUCE GENERATED FILES   ------------------------

:a_produce_generated_files
    echo boom I: [gurudoc]: Generating files...
    if "!BOOM_TRACE!"=="1" echo gsl3 -q -xnf:gdl -doc:text -parse:1 -code:1 buildxnf
    verify>nul
    call gsl3 -q -xnf:gdl -doc:text -parse:1 -code:1 buildxnf
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'gsl3 -q -xnf:gdl -doc:text -parse:1 -code:1 buildxnf' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo perl mkgdl gddoc.txt
    verify>nul
    call perl mkgdl gddoc.txt
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'perl mkgdl gddoc.txt' failed - stop.
        set _exception=1
        goto :eof
    )
    if "!BOOM_TRACE!"=="1" echo gsl3 -quiet -tpl:html_frameset -gdl:gddoc gurudoc
    verify>nul
    call gsl3 -quiet -tpl:html_frameset -gdl:gddoc gurudoc
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'gsl3 -quiet -tpl:html_frameset -gdl:gddoc gurudoc' failed - stop.
        set _exception=1
        goto :eof
    )
    echo Source files successfully generated>stamp_generate
    goto :eof

:------------------------   REMOVE GENERATED BINARIES   -----------------------

:a_remove_generated_binaries
    if exist liblocal.lib del liblocal.lib
    if exist vc60.pdb del vc60.pdb
    goto :eof

:------------------------   REMOVE GENERATED SOURCES   ------------------------

:a_remove_generated_sources
    if exist gdl.txt del gdl.txt
    if exist gdlcode.gsl del gdlcode.gsl
    if exist gdlparse.gsl del gdlparse.gsl
    if exist gddoc.gdl del gddoc.gdl
    if exist gddoc*.html del gddoc*.html
    if exist stamp_generate del stamp_generate
    if exist configure del configure
    if exist Makefile.unix del Makefile.unix
    if exist configure.bat del configure.bat
    if exist Makefile.win32 del Makefile.win32
    if exist liblocal.vcproj del liblocal.vcproj
    if exist gurudoc_*.zip del gurudoc_*.zip
    goto :eof

:-------------------------   REPORT HELP INFORMATION   ------------------------

:a_report_help_information
    echo The commands you can currently use on this project are:
    echo.
    goto r_!state!
    goto :eof

:-------------------------   REPORT PROJECT VERSION   -------------------------

:a_report_project_version
    echo gurudoc-1.3b1
    goto :eof

:--------------------------   RUN REGRESSION TESTS   --------------------------

:a_run_regression_tests
    :-  Run local selftest script if present
    if exist selftest.bat (
    if "!BOOM_TRACE!"=="1" echo selftest
    verify>nul
    call selftest
    if errorlevel 1 (
        echo boom E: [gurudoc]: 'selftest' failed - stop.
        set _exception=1
        goto :eof
    )
    )
    goto :eof

:-----------------------   USE SOURCE CONTROL REVISION   ----------------------

:a_use_source_control_revision
    set SVN_REVISION=svn
    if exist .svn
ul (
        for /f "usebackq tokens=1,2 delims=: " %%v in (`svn info`) do if "%%v"=="Revision" set SVN_REVISION=%%w
    )
    set MY_VERSION=!MY_VERSION!-!SVN_REVISION!
    goto :eof

:s_initial
    if "!debug!"=="1" echo State: initial
    if "!event!"=="" goto s_1_empty
    if "!event!"=="ok" goto s_1_1
    goto s_win32
:s_1_1
    if "!debug!"=="1" echo Event: ok
    set event=
    if "!debug!"=="1" echo Action: check operating context
    set _exception=
    call :a_check_operating_context
    if "!_exception!"=="1" exit /b 1
    set state=initial_check
    goto s_!state!
:s_1_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial
:r_initial
    goto r_win32

:s_initial_check
    if "!debug!"=="1" echo State: initial check
    if "!event!"=="" goto s_2_empty
    if "!event!"=="repository" goto s_2_1
    if "!event!"=="source" goto s_2_2
    if "!event!"=="stripped" goto s_2_3
    goto s_win32
:s_2_1
    if "!debug!"=="1" echo Event: repository
    set event=
    set state=repository
    goto s_!state!
:s_2_2
    if "!debug!"=="1" echo Event: source
    set event=
    set state=source
    goto s_!state!
:s_2_3
    if "!debug!"=="1" echo Event: stripped
    set event=
    set state=stripped
    goto s_!state!
:s_2_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_initial_check
:r_initial_check
    goto r_win32

:s_repository
    if "!debug!"=="1" echo State: repository
    if "!event!"=="" goto s_3_empty
    if "!event!"=="build" goto s_3_1
    if "!event!"=="compile" goto s_3_2
    if "!event!"=="clean" goto s_3_3
    if "!event!"=="regen" goto s_3_4
    if "!event!"=="allgen" goto s_3_5
    if "!event!"=="distrib" goto s_3_6
    if "!event!"=="distsrc" goto s_3_7
    if "!event!"=="distrev" goto s_3_8
    goto s_default
:s_3_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_2
    if "!debug!"=="1" echo Event: compile
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_3
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated sources
    set _exception=
    call :a_remove_generated_sources
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_4
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_5
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_6
    if "!debug!"=="1" echo Event: distrib
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_7
    if "!debug!"=="1" echo Event: distsrc
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_8
    if "!debug!"=="1" echo Event: distrev
    set event=
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: check all source files exist
    set _exception=
    call :a_check_all_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: use source control revision
    set _exception=
    call :a_use_source_control_revision
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build source packages
    set _exception=
    call :a_build_source_packages
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_3_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_repository
:r_repository
echo build:
    echo   From the raw project sources, produces all generated files, and
    echo     compiles all source files.
echo compile:
    echo   From the raw project sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the raw project sources, removes all generated
    echo     source and binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
echo distrib:
    echo   Creates a source distribution for the project.  Note that binary
    echo     distributions can only be created at the product level.
echo distsrc:
    echo   Equivalent to distrib, provided for compatibility.
echo distrev:
    echo   Creates a source distribution for the project.  Builds distribution
    echo     packages based on source control version number. Note that binary
    echo     distributions can only be created at the product level.
    goto r_default

:s_source
    if "!debug!"=="1" echo State: source
    if "!event!"=="" goto s_4_empty
    if "!event!"=="build" goto s_4_1
    if "!event!"=="clean" goto s_4_2
    if "!event!"=="regen" goto s_4_3
    if "!event!"=="allgen" goto s_4_4
    goto s_default
:s_4_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: check source files exist
    set _exception=
    call :a_check_source_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_3
    if "!debug!"=="1" echo Event: regen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce generated files
    set _exception=
    call :a_produce_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_4
    if "!debug!"=="1" echo Event: allgen
    set event=
    if "!debug!"=="1" echo Action: check project files exist
    set _exception=
    call :a_check_project_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: produce all generated files
    set _exception=
    call :a_produce_all_generated_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_4_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_source
:r_source
echo build:
    echo   From the packaged sources, compiles all source files without any
    echo     code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
echo regen:
    echo   Produces generated files required for building using the
    echo     current model.
echo allgen:
    echo   Produces all generated files.
    goto r_default

:s_stripped
    if "!debug!"=="1" echo State: stripped
    if "!event!"=="" goto s_5_empty
    if "!event!"=="build" goto s_5_1
    if "!event!"=="clean" goto s_5_2
    goto s_default
:s_5_1
    if "!debug!"=="1" echo Event: build
    set event=
    if "!debug!"=="1" echo Action: build binary files
    set _exception=
    call :a_build_binary_files
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_2
    if "!debug!"=="1" echo Event: clean
    set event=
    if "!debug!"=="1" echo Action: remove generated binaries
    set _exception=
    call :a_remove_generated_binaries
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_5_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_stripped
:r_stripped
echo build:
    echo   From the stripped-down packaged sources, compiles all source files
    echo     without any code generation.
echo clean:
    echo   When working with the packaged sources, removes all generated
    echo     binary files from the project directory.
    goto r_default

:s_default
    if "!debug!"=="1" echo State: default
    if "!event!"=="" goto s_6_empty
    if "!event!"=="install" goto s_6_1
    if "!event!"=="test" goto s_6_2
    if "!event!"=="help" goto s_6_3
    if "!event!"=="version" goto s_6_4
    if "!event!"=="empty" goto s_6_5
    goto s_win32
:s_6_1
    if "!debug!"=="1" echo Event: install
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: install deliverables
    set _exception=
    call :a_install_deliverables
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_2
    if "!debug!"=="1" echo Event: test
    set event=
    if "!debug!"=="1" echo Action: check binary files exist
    set _exception=
    call :a_check_binary_files_exist
    if "!_exception!"=="1" exit /b 1
    if "!debug!"=="1" echo Action: run regression tests
    set _exception=
    call :a_run_regression_tests
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_3
    if "!debug!"=="1" echo Event: help
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_4
    if "!debug!"=="1" echo Event: version
    set event=
    if "!debug!"=="1" echo Action: report project version
    set _exception=
    call :a_report_project_version
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_5
    if "!debug!"=="1" echo Event: empty
    set event=
    if "!debug!"=="1" echo Action: report help information
    set _exception=
    call :a_report_help_information
    if "!_exception!"=="1" exit /b 1
    if not "%1"=="" goto process
    exit /b 0
:s_6_empty
    if "!debug!"=="1" echo Get event from user
    set event=%1
    shift
    if "!event!"=="" set event=empty
    goto s_default
:r_default
echo install:
    echo   Installs deliverables into the final or temporary install tree.
    echo     This action is only valid after a successful build.
echo test:
    echo   Runs regression tests for the project.
echo help:
    echo   Shows a list of the commands allowed on the project.
echo version:
    echo   Show project version.
    goto r_win32


exit /b 0
